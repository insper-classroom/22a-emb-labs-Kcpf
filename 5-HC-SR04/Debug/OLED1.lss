
OLED1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006dfc  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00406dfc  00406dfc  00016dfc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009d0  20400000  00406e04  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000388  204009d0  004077d4  000209d0  2**2
                  ALLOC
  4 .stack        00002000  20400d58  00407b5c  000209d0  2**0
                  ALLOC
  5 .heap         00000200  20402d58  00409b5c  000209d0  2**0
                  ALLOC
  6 .ARM.attributes 0000002e  00000000  00000000  000209d0  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  000209fe  2**0
                  CONTENTS, READONLY
  8 .debug_info   00018819  00000000  00000000  00020a57  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00003865  00000000  00000000  00039270  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000057a5  00000000  00000000  0003cad5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 000008a8  00000000  00000000  0004227a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000008f8  00000000  00000000  00042b22  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0000a29c  00000000  00000000  0004341a  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0000f02d  00000000  00000000  0004d6b6  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    0009011a  00000000  00000000  0005c6e3  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  00001ec4  00000000  00000000  000ec800  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	58 2d 40 20 49 12 40 00 45 12 40 00 45 12 40 00     X-@ I.@.E.@.E.@.
  400010:	45 12 40 00 45 12 40 00 45 12 40 00 00 00 00 00     E.@.E.@.E.@.....
	...
  40002c:	45 12 40 00 45 12 40 00 00 00 00 00 45 12 40 00     E.@.E.@.....E.@.
  40003c:	45 12 40 00 45 12 40 00 45 12 40 00 45 12 40 00     E.@.E.@.E.@.E.@.
  40004c:	ed 15 40 00 45 12 40 00 45 12 40 00 45 12 40 00     ..@.E.@.E.@.E.@.
  40005c:	45 12 40 00 45 12 40 00 00 00 00 00 a9 0d 40 00     E.@.E.@.......@.
  40006c:	bd 0d 40 00 d1 0d 40 00 45 12 40 00 45 12 40 00     ..@...@.E.@.E.@.
  40007c:	45 12 40 00 e5 0d 40 00 f9 0d 40 00 45 12 40 00     E.@...@...@.E.@.
  40008c:	45 12 40 00 45 12 40 00 45 12 40 00 45 12 40 00     E.@.E.@.E.@.E.@.
  40009c:	45 12 40 00 45 12 40 00 45 12 40 00 45 12 40 00     E.@.E.@.E.@.E.@.
  4000ac:	45 12 40 00 45 12 40 00 45 12 40 00 45 12 40 00     E.@.E.@.E.@.E.@.
  4000bc:	45 12 40 00 45 12 40 00 45 12 40 00 45 12 40 00     E.@.E.@.E.@.E.@.
  4000cc:	45 12 40 00 00 00 00 00 45 12 40 00 00 00 00 00     E.@.....E.@.....
  4000dc:	45 12 40 00 45 12 40 00 45 12 40 00 45 12 40 00     E.@.E.@.E.@.E.@.
  4000ec:	45 12 40 00 45 12 40 00 45 12 40 00 45 12 40 00     E.@.E.@.E.@.E.@.
  4000fc:	45 12 40 00 45 12 40 00 45 12 40 00 45 12 40 00     E.@.E.@.E.@.E.@.
  40010c:	45 12 40 00 45 12 40 00 00 00 00 00 00 00 00 00     E.@.E.@.........
  40011c:	00 00 00 00 45 12 40 00 45 12 40 00 45 12 40 00     ....E.@.E.@.E.@.
  40012c:	45 12 40 00 45 12 40 00 00 00 00 00 45 12 40 00     E.@.E.@.....E.@.
  40013c:	45 12 40 00                                         E.@.

00400140 <__do_global_dtors_aux>:
  400140:	b510      	push	{r4, lr}
  400142:	4c05      	ldr	r4, [pc, #20]	; (400158 <__do_global_dtors_aux+0x18>)
  400144:	7823      	ldrb	r3, [r4, #0]
  400146:	b933      	cbnz	r3, 400156 <__do_global_dtors_aux+0x16>
  400148:	4b04      	ldr	r3, [pc, #16]	; (40015c <__do_global_dtors_aux+0x1c>)
  40014a:	b113      	cbz	r3, 400152 <__do_global_dtors_aux+0x12>
  40014c:	4804      	ldr	r0, [pc, #16]	; (400160 <__do_global_dtors_aux+0x20>)
  40014e:	f3af 8000 	nop.w
  400152:	2301      	movs	r3, #1
  400154:	7023      	strb	r3, [r4, #0]
  400156:	bd10      	pop	{r4, pc}
  400158:	204009d0 	.word	0x204009d0
  40015c:	00000000 	.word	0x00000000
  400160:	00406e04 	.word	0x00406e04

00400164 <frame_dummy>:
  400164:	4b0c      	ldr	r3, [pc, #48]	; (400198 <frame_dummy+0x34>)
  400166:	b143      	cbz	r3, 40017a <frame_dummy+0x16>
  400168:	480c      	ldr	r0, [pc, #48]	; (40019c <frame_dummy+0x38>)
  40016a:	490d      	ldr	r1, [pc, #52]	; (4001a0 <frame_dummy+0x3c>)
  40016c:	b510      	push	{r4, lr}
  40016e:	f3af 8000 	nop.w
  400172:	480c      	ldr	r0, [pc, #48]	; (4001a4 <frame_dummy+0x40>)
  400174:	6803      	ldr	r3, [r0, #0]
  400176:	b923      	cbnz	r3, 400182 <frame_dummy+0x1e>
  400178:	bd10      	pop	{r4, pc}
  40017a:	480a      	ldr	r0, [pc, #40]	; (4001a4 <frame_dummy+0x40>)
  40017c:	6803      	ldr	r3, [r0, #0]
  40017e:	b933      	cbnz	r3, 40018e <frame_dummy+0x2a>
  400180:	4770      	bx	lr
  400182:	4b09      	ldr	r3, [pc, #36]	; (4001a8 <frame_dummy+0x44>)
  400184:	2b00      	cmp	r3, #0
  400186:	d0f7      	beq.n	400178 <frame_dummy+0x14>
  400188:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40018c:	4718      	bx	r3
  40018e:	4b06      	ldr	r3, [pc, #24]	; (4001a8 <frame_dummy+0x44>)
  400190:	2b00      	cmp	r3, #0
  400192:	d0f5      	beq.n	400180 <frame_dummy+0x1c>
  400194:	4718      	bx	r3
  400196:	bf00      	nop
  400198:	00000000 	.word	0x00000000
  40019c:	00406e04 	.word	0x00406e04
  4001a0:	204009d4 	.word	0x204009d4
  4001a4:	00406e04 	.word	0x00406e04
  4001a8:	00000000 	.word	0x00000000

004001ac <rtt_init>:
 * \return 0 if successful.
 */
uint32_t rtt_init(Rtt *p_rtt, uint16_t us_prescaler)
{
#if (SAM4N || SAM4S || SAM4E || SAM4C || SAMG51 || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	p_rtt->RTT_MR = (us_prescaler | RTT_MR_RTTRST | g_wobits_in_rtt_mr);
  4001ac:	4b03      	ldr	r3, [pc, #12]	; (4001bc <rtt_init+0x10>)
  4001ae:	681b      	ldr	r3, [r3, #0]
  4001b0:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
  4001b4:	4319      	orrs	r1, r3
  4001b6:	6001      	str	r1, [r0, #0]
#else
	p_rtt->RTT_MR = (us_prescaler | RTT_MR_RTTRST);
#endif
	return 0;
}
  4001b8:	2000      	movs	r0, #0
  4001ba:	4770      	bx	lr
  4001bc:	204009ec 	.word	0x204009ec

004001c0 <rtt_sel_source>:
 * \param p_rtt Pointer to an RTT instance.
 * \param is_rtc_sel RTC 1Hz Clock Selection.
 */
void rtt_sel_source(Rtt *p_rtt, bool is_rtc_sel)
{
	if(is_rtc_sel) {
  4001c0:	b941      	cbnz	r1, 4001d4 <rtt_sel_source+0x14>
		g_wobits_in_rtt_mr |= RTT_MR_RTC1HZ;
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
	} else {
		g_wobits_in_rtt_mr &= ~RTT_MR_RTC1HZ;
  4001c2:	4a09      	ldr	r2, [pc, #36]	; (4001e8 <rtt_sel_source+0x28>)
  4001c4:	6813      	ldr	r3, [r2, #0]
  4001c6:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
  4001ca:	6013      	str	r3, [r2, #0]
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
  4001cc:	6802      	ldr	r2, [r0, #0]
  4001ce:	4313      	orrs	r3, r2
  4001d0:	6003      	str	r3, [r0, #0]
  4001d2:	4770      	bx	lr
		g_wobits_in_rtt_mr |= RTT_MR_RTC1HZ;
  4001d4:	4a04      	ldr	r2, [pc, #16]	; (4001e8 <rtt_sel_source+0x28>)
  4001d6:	6813      	ldr	r3, [r2, #0]
  4001d8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  4001dc:	6013      	str	r3, [r2, #0]
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
  4001de:	6802      	ldr	r2, [r0, #0]
  4001e0:	4313      	orrs	r3, r2
  4001e2:	6003      	str	r3, [r0, #0]
  4001e4:	4770      	bx	lr
  4001e6:	bf00      	nop
  4001e8:	204009ec 	.word	0x204009ec

004001ec <rtt_enable_interrupt>:
 */
void rtt_enable_interrupt(Rtt *p_rtt, uint32_t ul_sources)
{
	uint32_t temp;

	temp = p_rtt->RTT_MR;
  4001ec:	6802      	ldr	r2, [r0, #0]
	temp |= ul_sources;
#if (SAM4N || SAM4S || SAM4E || SAM4C || SAMG51 || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	temp |= g_wobits_in_rtt_mr;
  4001ee:	4b03      	ldr	r3, [pc, #12]	; (4001fc <rtt_enable_interrupt+0x10>)
  4001f0:	681b      	ldr	r3, [r3, #0]
  4001f2:	4319      	orrs	r1, r3
  4001f4:	4311      	orrs	r1, r2
#endif
	p_rtt->RTT_MR = temp;
  4001f6:	6001      	str	r1, [r0, #0]
  4001f8:	4770      	bx	lr
  4001fa:	bf00      	nop
  4001fc:	204009ec 	.word	0x204009ec

00400200 <rtt_disable_interrupt>:
 */
void rtt_disable_interrupt(Rtt *p_rtt, uint32_t ul_sources)
{
	uint32_t temp = 0;

	temp = p_rtt->RTT_MR;
  400200:	6803      	ldr	r3, [r0, #0]
	temp &= (~ul_sources);
  400202:	ea23 0101 	bic.w	r1, r3, r1
#if (SAM4N || SAM4S || SAM4E || SAM4C || SAMG51 || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	temp |= g_wobits_in_rtt_mr;
  400206:	4b02      	ldr	r3, [pc, #8]	; (400210 <rtt_disable_interrupt+0x10>)
  400208:	681b      	ldr	r3, [r3, #0]
  40020a:	4319      	orrs	r1, r3
#endif
	p_rtt->RTT_MR = temp;
  40020c:	6001      	str	r1, [r0, #0]
  40020e:	4770      	bx	lr
  400210:	204009ec 	.word	0x204009ec

00400214 <rtt_read_timer_value>:
 *
 * \return The current Real-time Timer value.
 */
uint32_t rtt_read_timer_value(Rtt *p_rtt)
{
	uint32_t rtt_val = p_rtt->RTT_VR;
  400214:	6882      	ldr	r2, [r0, #8]

	while (rtt_val != p_rtt->RTT_VR) {
  400216:	6883      	ldr	r3, [r0, #8]
  400218:	429a      	cmp	r2, r3
  40021a:	d003      	beq.n	400224 <rtt_read_timer_value+0x10>
		rtt_val = p_rtt->RTT_VR;
  40021c:	6882      	ldr	r2, [r0, #8]
	while (rtt_val != p_rtt->RTT_VR) {
  40021e:	6883      	ldr	r3, [r0, #8]
  400220:	4293      	cmp	r3, r2
  400222:	d1fb      	bne.n	40021c <rtt_read_timer_value+0x8>
	}

	return rtt_val;
}
  400224:	4618      	mov	r0, r3
  400226:	4770      	bx	lr

00400228 <rtt_get_status>:
 *
 * \return The Real-time Timer status.
 */
uint32_t rtt_get_status(Rtt *p_rtt)
{
	return p_rtt->RTT_SR;
  400228:	68c0      	ldr	r0, [r0, #12]
}
  40022a:	4770      	bx	lr

0040022c <rtt_write_alarm_time>:
 * \param ul_alarm_time Alarm time,Alarm time = ALMV + 1.
 *
 * \retval 0 Configuration is done.
 */
uint32_t rtt_write_alarm_time(Rtt *p_rtt, uint32_t ul_alarm_time)
{
  40022c:	b570      	push	{r4, r5, r6, lr}
  40022e:	4606      	mov	r6, r0
  400230:	460d      	mov	r5, r1
	uint32_t flag;

	flag = p_rtt->RTT_MR & RTT_MR_ALMIEN;
  400232:	6804      	ldr	r4, [r0, #0]
  400234:	f404 3480 	and.w	r4, r4, #65536	; 0x10000

	rtt_disable_interrupt(RTT, RTT_MR_ALMIEN);
  400238:	f44f 3180 	mov.w	r1, #65536	; 0x10000
  40023c:	4809      	ldr	r0, [pc, #36]	; (400264 <rtt_write_alarm_time+0x38>)
  40023e:	4b0a      	ldr	r3, [pc, #40]	; (400268 <rtt_write_alarm_time+0x3c>)
  400240:	4798      	blx	r3

	/**
	 * Alarm time = ALMV + 1,If the incoming parameter 
	 * is 0, the ALMV is set to 0xFFFFFFFF.
	*/
	if(ul_alarm_time == 0) {
  400242:	b92d      	cbnz	r5, 400250 <rtt_write_alarm_time+0x24>
		p_rtt->RTT_AR = 0xFFFFFFFF;
  400244:	f04f 33ff 	mov.w	r3, #4294967295
  400248:	6073      	str	r3, [r6, #4]
	}
	else {
		p_rtt->RTT_AR = ul_alarm_time - 1;
	}

	if (flag) {
  40024a:	b924      	cbnz	r4, 400256 <rtt_write_alarm_time+0x2a>
		rtt_enable_interrupt(RTT, RTT_MR_ALMIEN);
	}

	return 0;
}
  40024c:	2000      	movs	r0, #0
  40024e:	bd70      	pop	{r4, r5, r6, pc}
		p_rtt->RTT_AR = ul_alarm_time - 1;
  400250:	3d01      	subs	r5, #1
  400252:	6075      	str	r5, [r6, #4]
  400254:	e7f9      	b.n	40024a <rtt_write_alarm_time+0x1e>
		rtt_enable_interrupt(RTT, RTT_MR_ALMIEN);
  400256:	f44f 3180 	mov.w	r1, #65536	; 0x10000
  40025a:	4802      	ldr	r0, [pc, #8]	; (400264 <rtt_write_alarm_time+0x38>)
  40025c:	4b03      	ldr	r3, [pc, #12]	; (40026c <rtt_write_alarm_time+0x40>)
  40025e:	4798      	blx	r3
  400260:	e7f4      	b.n	40024c <rtt_write_alarm_time+0x20>
  400262:	bf00      	nop
  400264:	400e1830 	.word	0x400e1830
  400268:	00400201 	.word	0x00400201
  40026c:	004001ed 	.word	0x004001ed

00400270 <spi_enable_clock>:
 * \brief Enable SPI clock.
 *
 * \param p_spi Pointer to an SPI instance.
 */
void spi_enable_clock(Spi *p_spi)
{
  400270:	b508      	push	{r3, lr}
#if (SAM4S || SAM3S || SAM3N || SAM3U || SAM4E || SAM4N || SAMG51|| SAMG53|| SAMG54)
	UNUSED(p_spi);
	sysclk_enable_peripheral_clock(ID_SPI);
#elif (SAM3XA || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	if (p_spi == SPI0) {
  400272:	4b07      	ldr	r3, [pc, #28]	; (400290 <spi_enable_clock+0x20>)
  400274:	4298      	cmp	r0, r3
  400276:	d003      	beq.n	400280 <spi_enable_clock+0x10>
		sysclk_enable_peripheral_clock(ID_SPI0);
	}
	#ifdef SPI1
	else if (p_spi == SPI1) {
  400278:	4b06      	ldr	r3, [pc, #24]	; (400294 <spi_enable_clock+0x24>)
  40027a:	4298      	cmp	r0, r3
  40027c:	d004      	beq.n	400288 <spi_enable_clock+0x18>
  40027e:	bd08      	pop	{r3, pc}
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  400280:	2015      	movs	r0, #21
  400282:	4b05      	ldr	r3, [pc, #20]	; (400298 <spi_enable_clock+0x28>)
  400284:	4798      	blx	r3
  400286:	bd08      	pop	{r3, pc}
  400288:	202a      	movs	r0, #42	; 0x2a
  40028a:	4b03      	ldr	r3, [pc, #12]	; (400298 <spi_enable_clock+0x28>)
  40028c:	4798      	blx	r3
	}
	#endif
#elif SAM4L
	sysclk_enable_peripheral_clock(p_spi);
#endif
}
  40028e:	e7f6      	b.n	40027e <spi_enable_clock+0xe>
  400290:	40008000 	.word	0x40008000
  400294:	40058000 	.word	0x40058000
  400298:	00400f2d 	.word	0x00400f2d

0040029c <spi_set_peripheral_chip_select_value>:
 *                 \ref spi_enable_peripheral_select_decode,
 *                 \ref spi_disable_peripheral_select_decode.
 */
void spi_set_peripheral_chip_select_value(Spi *p_spi, uint32_t ul_value)
{
	p_spi->SPI_MR &= (~SPI_MR_PCS_Msk);
  40029c:	6843      	ldr	r3, [r0, #4]
  40029e:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  4002a2:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_PCS(ul_value);
  4002a4:	6843      	ldr	r3, [r0, #4]
  4002a6:	0409      	lsls	r1, r1, #16
  4002a8:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  4002ac:	4319      	orrs	r1, r3
  4002ae:	6041      	str	r1, [r0, #4]
  4002b0:	4770      	bx	lr

004002b2 <spi_write>:
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_write(Spi *p_spi, uint16_t us_data,
		uint8_t uc_pcs, uint8_t uc_last)
{
  4002b2:	b430      	push	{r4, r5}
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
  4002b4:	f643 2499 	movw	r4, #15001	; 0x3a99
  4002b8:	6905      	ldr	r5, [r0, #16]
  4002ba:	f015 0f02 	tst.w	r5, #2
  4002be:	d103      	bne.n	4002c8 <spi_write+0x16>
		if (!timeout--) {
  4002c0:	3c01      	subs	r4, #1
  4002c2:	d1f9      	bne.n	4002b8 <spi_write+0x6>
			return SPI_ERROR_TIMEOUT;
  4002c4:	2001      	movs	r0, #1
  4002c6:	e00c      	b.n	4002e2 <spi_write+0x30>
 *
 * \return 1 for Variable mode, 0 for fixed mode.
 */
static inline uint32_t spi_get_peripheral_select_mode(Spi *p_spi)
{
	if (p_spi->SPI_MR & SPI_MR_PS) {
  4002c8:	6844      	ldr	r4, [r0, #4]
		}
	}

	if (spi_get_peripheral_select_mode(p_spi)) {
  4002ca:	f014 0f02 	tst.w	r4, #2
  4002ce:	d006      	beq.n	4002de <spi_write+0x2c>
		value = SPI_TDR_TD(us_data) | SPI_TDR_PCS(uc_pcs);
  4002d0:	0412      	lsls	r2, r2, #16
  4002d2:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
  4002d6:	4311      	orrs	r1, r2
		if (uc_last) {
  4002d8:	b10b      	cbz	r3, 4002de <spi_write+0x2c>
			value |= SPI_TDR_LASTXFER;
  4002da:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
		}
	} else {
		value = SPI_TDR_TD(us_data);
	}

	p_spi->SPI_TDR = value;
  4002de:	60c1      	str	r1, [r0, #12]

	return SPI_OK;
  4002e0:	2000      	movs	r0, #0
}
  4002e2:	bc30      	pop	{r4, r5}
  4002e4:	4770      	bx	lr

004002e6 <spi_set_clock_polarity>:
 * \param ul_polarity Default clock state is logical one(high)/zero(low).
 */
void spi_set_clock_polarity(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_polarity)
{
	if (ul_polarity) {
  4002e6:	b932      	cbnz	r2, 4002f6 <spi_set_clock_polarity+0x10>
  4002e8:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CPOL);
  4002ec:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002ee:	f023 0301 	bic.w	r3, r3, #1
  4002f2:	6303      	str	r3, [r0, #48]	; 0x30
  4002f4:	4770      	bx	lr
  4002f6:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
  4002fa:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002fc:	f043 0301 	orr.w	r3, r3, #1
  400300:	6303      	str	r3, [r0, #48]	; 0x30
  400302:	4770      	bx	lr

00400304 <spi_set_clock_phase>:
 *  \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 *  \param ul_phase Data capture on the rising/falling edge of clock.
 */
void spi_set_clock_phase(Spi *p_spi, uint32_t ul_pcs_ch, uint32_t ul_phase)
{
	if (ul_phase) {
  400304:	b932      	cbnz	r2, 400314 <spi_set_clock_phase+0x10>
  400306:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_NCPHA);
  40030a:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40030c:	f023 0302 	bic.w	r3, r3, #2
  400310:	6303      	str	r3, [r0, #48]	; 0x30
  400312:	4770      	bx	lr
  400314:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
  400318:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40031a:	f043 0302 	orr.w	r3, r3, #2
  40031e:	6303      	str	r3, [r0, #48]	; 0x30
  400320:	4770      	bx	lr

00400322 <spi_configure_cs_behavior>:
 * \param ul_cs_behavior Behavior of the Chip Select after transfer.
 */
void spi_configure_cs_behavior(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_cs_behavior)
{
	if (ul_cs_behavior == SPI_CS_RISE_FORCED) {
  400322:	2a04      	cmp	r2, #4
  400324:	d003      	beq.n	40032e <spi_configure_cs_behavior+0xc>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
	} else if (ul_cs_behavior == SPI_CS_RISE_NO_TX) {
  400326:	b16a      	cbz	r2, 400344 <spi_configure_cs_behavior+0x22>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
	} else if (ul_cs_behavior == SPI_CS_KEEP_LOW) {
  400328:	2a08      	cmp	r2, #8
  40032a:	d016      	beq.n	40035a <spi_configure_cs_behavior+0x38>
  40032c:	4770      	bx	lr
  40032e:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  400332:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400334:	f023 0308 	bic.w	r3, r3, #8
  400338:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
  40033a:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40033c:	f043 0304 	orr.w	r3, r3, #4
  400340:	6303      	str	r3, [r0, #48]	; 0x30
  400342:	4770      	bx	lr
  400344:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  400348:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40034a:	f023 0308 	bic.w	r3, r3, #8
  40034e:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
  400350:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400352:	f023 0304 	bic.w	r3, r3, #4
  400356:	6303      	str	r3, [r0, #48]	; 0x30
  400358:	4770      	bx	lr
  40035a:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSAAT;
  40035e:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400360:	f043 0308 	orr.w	r3, r3, #8
  400364:	6303      	str	r3, [r0, #48]	; 0x30
	}
}
  400366:	e7e1      	b.n	40032c <spi_configure_cs_behavior+0xa>

00400368 <spi_set_bits_per_transfer>:
 * \param ul_bits Number of bits (8~16), use the pattern defined
 *        in the device header file.
 */
void spi_set_bits_per_transfer(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_bits)
{
  400368:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_BITS_Msk);
  40036c:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  40036e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  400372:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= ul_bits;
  400374:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  400376:	431a      	orrs	r2, r3
  400378:	630a      	str	r2, [r1, #48]	; 0x30
  40037a:	4770      	bx	lr

0040037c <spi_calc_baudrate_div>:
 *   \retval > 0  Success.
 *   \retval < 0  Error.
 */
int16_t spi_calc_baudrate_div(const uint32_t baudrate, uint32_t mck)
{
	int baud_div = div_ceil(mck, baudrate);
  40037c:	1e43      	subs	r3, r0, #1
  40037e:	4419      	add	r1, r3
  400380:	fbb1 f0f0 	udiv	r0, r1, r0

	/* The value of baud_div is from 1 to 255 in the SCBR field. */
	if (baud_div <= 0 || baud_div > 255) {
  400384:	1e43      	subs	r3, r0, #1
  400386:	2bfe      	cmp	r3, #254	; 0xfe
		return -1;
	}

	return baud_div;
  400388:	bf94      	ite	ls
  40038a:	b200      	sxthls	r0, r0
		return -1;
  40038c:	f04f 30ff 	movhi.w	r0, #4294967295
}
  400390:	4770      	bx	lr

00400392 <spi_set_baudrate_div>:
 */
int16_t spi_set_baudrate_div(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_baudrate_divider)
{
    /* Programming the SCBR field to 0 is forbidden */
    if (!uc_baudrate_divider)
  400392:	b17a      	cbz	r2, 4003b4 <spi_set_baudrate_div+0x22>
{
  400394:	b410      	push	{r4}
  400396:	4614      	mov	r4, r2
  400398:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        return -1;

	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_SCBR_Msk);
  40039c:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  40039e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
  4003a2:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_SCBR(uc_baudrate_divider);
  4003a4:	6b0a      	ldr	r2, [r1, #48]	; 0x30
  4003a6:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
  4003aa:	630a      	str	r2, [r1, #48]	; 0x30
    return 0;
  4003ac:	2000      	movs	r0, #0
}
  4003ae:	f85d 4b04 	ldr.w	r4, [sp], #4
  4003b2:	4770      	bx	lr
        return -1;
  4003b4:	f04f 30ff 	mov.w	r0, #4294967295
  4003b8:	4770      	bx	lr
	...

004003bc <gfx_mono_set_framebuffer>:
	gfx_mono_set_framebuffer(framebuffer);
\endcode
 */
void gfx_mono_set_framebuffer(uint8_t *framebuffer)
{
	fbpointer = framebuffer;
  4003bc:	4b01      	ldr	r3, [pc, #4]	; (4003c4 <gfx_mono_set_framebuffer+0x8>)
  4003be:	6018      	str	r0, [r3, #0]
  4003c0:	4770      	bx	lr
  4003c2:	bf00      	nop
  4003c4:	204009f0 	.word	0x204009f0

004003c8 <gfx_mono_framebuffer_put_byte>:
\endcode
 */
void gfx_mono_framebuffer_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data)
{
	*(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column) = data;
  4003c8:	4b02      	ldr	r3, [pc, #8]	; (4003d4 <gfx_mono_framebuffer_put_byte+0xc>)
  4003ca:	681b      	ldr	r3, [r3, #0]
  4003cc:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
  4003d0:	5442      	strb	r2, [r0, r1]
  4003d2:	4770      	bx	lr
  4003d4:	204009f0 	.word	0x204009f0

004003d8 <gfx_mono_framebuffer_get_byte>:
	data = gfx_mono_framebuffer_get_byte(0, 0);
\endcode
 */
uint8_t gfx_mono_framebuffer_get_byte(gfx_coord_t page, gfx_coord_t column)
{
	return *(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column);
  4003d8:	4b02      	ldr	r3, [pc, #8]	; (4003e4 <gfx_mono_framebuffer_get_byte+0xc>)
  4003da:	681b      	ldr	r3, [r3, #0]
  4003dc:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
}
  4003e0:	5c40      	ldrb	r0, [r0, r1]
  4003e2:	4770      	bx	lr
  4003e4:	204009f0 	.word	0x204009f0

004003e8 <gfx_mono_generic_draw_horizontal_line>:
 * \param[in]  length     Length of the line in pixels.
 * \param[in]  color      Pixel operation of the line.
 */
void gfx_mono_generic_draw_horizontal_line(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t length, enum gfx_mono_color color)
{
  4003e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	uint8_t page;
	uint8_t pixelmask;
	uint8_t temp;

	/* Clip line length if too long */
	if (x + length > GFX_MONO_LCD_WIDTH) {
  4003ec:	1884      	adds	r4, r0, r2
  4003ee:	2c80      	cmp	r4, #128	; 0x80
  4003f0:	dd02      	ble.n	4003f8 <gfx_mono_generic_draw_horizontal_line+0x10>
		length = GFX_MONO_LCD_WIDTH - x;
  4003f2:	f1c0 0480 	rsb	r4, r0, #128	; 0x80
  4003f6:	b2e2      	uxtb	r2, r4
	}

	page = y / 8;
	pixelmask = (1 << (y - (page * 8)));

	if (length == 0) {
  4003f8:	b322      	cbz	r2, 400444 <gfx_mono_generic_draw_horizontal_line+0x5c>
	page = y / 8;
  4003fa:	08cd      	lsrs	r5, r1, #3
	pixelmask = (1 << (y - (page * 8)));
  4003fc:	eba1 01c5 	sub.w	r1, r1, r5, lsl #3
  400400:	2601      	movs	r6, #1
  400402:	fa06 f101 	lsl.w	r1, r6, r1
  400406:	b2ce      	uxtb	r6, r1
		/* Nothing to do. Move along. */
		return;
	}

	switch (color) {
  400408:	2b01      	cmp	r3, #1
  40040a:	d01d      	beq.n	400448 <gfx_mono_generic_draw_horizontal_line+0x60>
  40040c:	2b00      	cmp	r3, #0
  40040e:	d035      	beq.n	40047c <gfx_mono_generic_draw_horizontal_line+0x94>
  400410:	2b02      	cmp	r3, #2
  400412:	d117      	bne.n	400444 <gfx_mono_generic_draw_horizontal_line+0x5c>
  400414:	3801      	subs	r0, #1
  400416:	b2c7      	uxtb	r7, r0
  400418:	19d4      	adds	r4, r2, r7
  40041a:	b2e4      	uxtb	r4, r4
		}
		break;

	case GFX_PIXEL_XOR:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
  40041c:	f8df a090 	ldr.w	sl, [pc, #144]	; 4004b0 <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp ^= pixelmask;
			gfx_mono_put_byte(page, x + length, temp);
  400420:	f04f 0900 	mov.w	r9, #0
  400424:	f8df 808c 	ldr.w	r8, [pc, #140]	; 4004b4 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  400428:	4621      	mov	r1, r4
  40042a:	4628      	mov	r0, r5
  40042c:	47d0      	blx	sl
			temp ^= pixelmask;
  40042e:	ea86 0200 	eor.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  400432:	464b      	mov	r3, r9
  400434:	b2d2      	uxtb	r2, r2
  400436:	4621      	mov	r1, r4
  400438:	4628      	mov	r0, r5
  40043a:	47c0      	blx	r8
  40043c:	3c01      	subs	r4, #1
  40043e:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  400440:	42bc      	cmp	r4, r7
  400442:	d1f1      	bne.n	400428 <gfx_mono_generic_draw_horizontal_line+0x40>
  400444:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  400448:	3801      	subs	r0, #1
  40044a:	b2c7      	uxtb	r7, r0
  40044c:	19d4      	adds	r4, r2, r7
  40044e:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  400450:	f8df a05c 	ldr.w	sl, [pc, #92]	; 4004b0 <gfx_mono_generic_draw_horizontal_line+0xc8>
			gfx_mono_put_byte(page, x + length, temp);
  400454:	f04f 0900 	mov.w	r9, #0
  400458:	f8df 8058 	ldr.w	r8, [pc, #88]	; 4004b4 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  40045c:	4621      	mov	r1, r4
  40045e:	4628      	mov	r0, r5
  400460:	47d0      	blx	sl
			temp |= pixelmask;
  400462:	ea46 0200 	orr.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  400466:	464b      	mov	r3, r9
  400468:	b2d2      	uxtb	r2, r2
  40046a:	4621      	mov	r1, r4
  40046c:	4628      	mov	r0, r5
  40046e:	47c0      	blx	r8
  400470:	3c01      	subs	r4, #1
  400472:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  400474:	42bc      	cmp	r4, r7
  400476:	d1f1      	bne.n	40045c <gfx_mono_generic_draw_horizontal_line+0x74>
  400478:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40047c:	3801      	subs	r0, #1
  40047e:	b2c7      	uxtb	r7, r0
  400480:	19d4      	adds	r4, r2, r7
  400482:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  400484:	f8df 8028 	ldr.w	r8, [pc, #40]	; 4004b0 <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp &= ~pixelmask;
  400488:	43ce      	mvns	r6, r1
			gfx_mono_put_byte(page, x + length, temp);
  40048a:	f8df 9028 	ldr.w	r9, [pc, #40]	; 4004b4 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  40048e:	4621      	mov	r1, r4
  400490:	4628      	mov	r0, r5
  400492:	47c0      	blx	r8
			temp &= ~pixelmask;
  400494:	ea06 0200 	and.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  400498:	2300      	movs	r3, #0
  40049a:	b2d2      	uxtb	r2, r2
  40049c:	4621      	mov	r1, r4
  40049e:	4628      	mov	r0, r5
  4004a0:	47c8      	blx	r9
  4004a2:	3c01      	subs	r4, #1
  4004a4:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  4004a6:	42bc      	cmp	r4, r7
  4004a8:	d1f1      	bne.n	40048e <gfx_mono_generic_draw_horizontal_line+0xa6>
  4004aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4004ae:	bf00      	nop
  4004b0:	004006e9 	.word	0x004006e9
  4004b4:	004005e5 	.word	0x004005e5

004004b8 <gfx_mono_generic_draw_filled_rect>:
 * \param[in]  color       Pixel operation of the line
 */
void gfx_mono_generic_draw_filled_rect(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t width, gfx_coord_t height,
		enum gfx_mono_color color)
{
  4004b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4004bc:	f89d 7020 	ldrb.w	r7, [sp, #32]
	if (height == 0) {
  4004c0:	b18b      	cbz	r3, 4004e6 <gfx_mono_generic_draw_filled_rect+0x2e>
  4004c2:	461c      	mov	r4, r3
  4004c4:	4690      	mov	r8, r2
  4004c6:	4606      	mov	r6, r0
  4004c8:	1e4d      	subs	r5, r1, #1
  4004ca:	b2ed      	uxtb	r5, r5
  4004cc:	442c      	add	r4, r5
  4004ce:	b2e4      	uxtb	r4, r4
		/* Nothing to do. Move along. */
		return;
	}

	while (height-- > 0) {
		gfx_mono_draw_horizontal_line(x, y + height, width, color);
  4004d0:	f8df 9018 	ldr.w	r9, [pc, #24]	; 4004ec <gfx_mono_generic_draw_filled_rect+0x34>
  4004d4:	463b      	mov	r3, r7
  4004d6:	4642      	mov	r2, r8
  4004d8:	4621      	mov	r1, r4
  4004da:	4630      	mov	r0, r6
  4004dc:	47c8      	blx	r9
  4004de:	3c01      	subs	r4, #1
  4004e0:	b2e4      	uxtb	r4, r4
	while (height-- > 0) {
  4004e2:	42ac      	cmp	r4, r5
  4004e4:	d1f6      	bne.n	4004d4 <gfx_mono_generic_draw_filled_rect+0x1c>
  4004e6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4004ea:	bf00      	nop
  4004ec:	004003e9 	.word	0x004003e9

004004f0 <gfx_mono_draw_char>:
 * \param[in] y        Y coordinate on screen.
 * \param[in] font     Font to draw character in
 */
void gfx_mono_draw_char(const char c, const gfx_coord_t x, const gfx_coord_t y,
		const struct font *font)
{
  4004f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4004f4:	b083      	sub	sp, #12
  4004f6:	4604      	mov	r4, r0
  4004f8:	4688      	mov	r8, r1
  4004fa:	4691      	mov	r9, r2
  4004fc:	469b      	mov	fp, r3
	gfx_mono_draw_filled_rect(x, y, font->width, font->height,
  4004fe:	7a5b      	ldrb	r3, [r3, #9]
  400500:	f89b 2008 	ldrb.w	r2, [fp, #8]
  400504:	2100      	movs	r1, #0
  400506:	9100      	str	r1, [sp, #0]
  400508:	4649      	mov	r1, r9
  40050a:	4640      	mov	r0, r8
  40050c:	4d21      	ldr	r5, [pc, #132]	; (400594 <gfx_mono_draw_char+0xa4>)
  40050e:	47a8      	blx	r5
			GFX_PIXEL_CLR);

	switch (font->type) {
  400510:	f89b 3000 	ldrb.w	r3, [fp]
  400514:	b113      	cbz	r3, 40051c <gfx_mono_draw_char+0x2c>
	default:
		/* Unsupported mode, call assert */
		Assert(false);
		break;
	}
}
  400516:	b003      	add	sp, #12
  400518:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	char_row_size = font->width / CONFIG_FONT_PIXELS_PER_BYTE;
  40051c:	f89b 2008 	ldrb.w	r2, [fp, #8]
  400520:	08d3      	lsrs	r3, r2, #3
	if (font->width % CONFIG_FONT_PIXELS_PER_BYTE) {
  400522:	f012 0f07 	tst.w	r2, #7
		char_row_size++;
  400526:	bf18      	it	ne
  400528:	3301      	addne	r3, #1
	glyph_data_offset = char_row_size * font->height *
  40052a:	f89b a009 	ldrb.w	sl, [fp, #9]
			((uint8_t)ch - font->first_char);
  40052e:	f89b 700a 	ldrb.w	r7, [fp, #10]
  400532:	1be7      	subs	r7, r4, r7
	glyph_data_offset = char_row_size * font->height *
  400534:	fb17 f70a 	smulbb	r7, r7, sl
  400538:	fb17 f703 	smulbb	r7, r7, r3
	glyph_data = font->data.progmem + glyph_data_offset;
  40053c:	f8db 3004 	ldr.w	r3, [fp, #4]
  400540:	fa13 f787 	uxtah	r7, r3, r7
  400544:	e01f      	b.n	400586 <gfx_mono_draw_char+0x96>
			glyph_byte <<= 1;
  400546:	0064      	lsls	r4, r4, #1
  400548:	b2e4      	uxtb	r4, r4
  40054a:	3501      	adds	r5, #1
		for (i = 0; i < pixelsToDraw; i++) {
  40054c:	b2eb      	uxtb	r3, r5
  40054e:	429e      	cmp	r6, r3
  400550:	d910      	bls.n	400574 <gfx_mono_draw_char+0x84>
  400552:	b2eb      	uxtb	r3, r5
  400554:	eb08 0003 	add.w	r0, r8, r3
  400558:	b2c0      	uxtb	r0, r0
			if (i % CONFIG_FONT_PIXELS_PER_BYTE == 0) {
  40055a:	f013 0f07 	tst.w	r3, #7
				glyph_byte = PROGMEM_READ_BYTE(glyph_data);
  40055e:	bf08      	it	eq
  400560:	f817 4b01 	ldrbeq.w	r4, [r7], #1
			if ((glyph_byte & 0x80)) {
  400564:	f014 0f80 	tst.w	r4, #128	; 0x80
  400568:	d0ed      	beq.n	400546 <gfx_mono_draw_char+0x56>
				gfx_mono_draw_pixel(inc_x, inc_y,
  40056a:	2201      	movs	r2, #1
  40056c:	4649      	mov	r1, r9
  40056e:	4b0a      	ldr	r3, [pc, #40]	; (400598 <gfx_mono_draw_char+0xa8>)
  400570:	4798      	blx	r3
  400572:	e7e8      	b.n	400546 <gfx_mono_draw_char+0x56>
		inc_y += 1;
  400574:	f109 0901 	add.w	r9, r9, #1
  400578:	fa5f f989 	uxtb.w	r9, r9
		rows_left--;
  40057c:	f10a 3aff 	add.w	sl, sl, #4294967295
	} while (rows_left > 0);
  400580:	f01a 0aff 	ands.w	sl, sl, #255	; 0xff
  400584:	d0c7      	beq.n	400516 <gfx_mono_draw_char+0x26>
		uint8_t pixelsToDraw = font->width;
  400586:	f89b 6008 	ldrb.w	r6, [fp, #8]
		for (i = 0; i < pixelsToDraw; i++) {
  40058a:	2e00      	cmp	r6, #0
  40058c:	d0f2      	beq.n	400574 <gfx_mono_draw_char+0x84>
  40058e:	2500      	movs	r5, #0
  400590:	462c      	mov	r4, r5
  400592:	e7de      	b.n	400552 <gfx_mono_draw_char+0x62>
  400594:	004004b9 	.word	0x004004b9
  400598:	00400685 	.word	0x00400685

0040059c <gfx_mono_draw_string>:
 * \param[in] y         Y coordinate on screen.
 * \param[in] font      Font to draw string in
 */
void gfx_mono_draw_string(const char *str, gfx_coord_t x, gfx_coord_t y,
		const struct font *font)
{
  40059c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4005a0:	4604      	mov	r4, r0
  4005a2:	4690      	mov	r8, r2
  4005a4:	461d      	mov	r5, r3
  4005a6:	4689      	mov	r9, r1
			x = start_of_string_position_x;
			y += font->height + 1;
		} else if (*str == '\r') {
			/* Skip '\r' characters. */
		} else {
			gfx_mono_draw_char(*str, x, y, font);
  4005a8:	4f0d      	ldr	r7, [pc, #52]	; (4005e0 <gfx_mono_draw_string+0x44>)
			x = start_of_string_position_x;
  4005aa:	460e      	mov	r6, r1
  4005ac:	e008      	b.n	4005c0 <gfx_mono_draw_string+0x24>
			y += font->height + 1;
  4005ae:	7a6a      	ldrb	r2, [r5, #9]
  4005b0:	3201      	adds	r2, #1
  4005b2:	4442      	add	r2, r8
  4005b4:	fa5f f882 	uxtb.w	r8, r2
			x = start_of_string_position_x;
  4005b8:	46b1      	mov	r9, r6
			x += font->width;
		}
	} while (*(++str));
  4005ba:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  4005be:	b16b      	cbz	r3, 4005dc <gfx_mono_draw_string+0x40>
		if (*str == '\n') {
  4005c0:	7820      	ldrb	r0, [r4, #0]
  4005c2:	280a      	cmp	r0, #10
  4005c4:	d0f3      	beq.n	4005ae <gfx_mono_draw_string+0x12>
		} else if (*str == '\r') {
  4005c6:	280d      	cmp	r0, #13
  4005c8:	d0f7      	beq.n	4005ba <gfx_mono_draw_string+0x1e>
			gfx_mono_draw_char(*str, x, y, font);
  4005ca:	462b      	mov	r3, r5
  4005cc:	4642      	mov	r2, r8
  4005ce:	4649      	mov	r1, r9
  4005d0:	47b8      	blx	r7
			x += font->width;
  4005d2:	7a2b      	ldrb	r3, [r5, #8]
  4005d4:	4499      	add	r9, r3
  4005d6:	fa5f f989 	uxtb.w	r9, r9
  4005da:	e7ee      	b.n	4005ba <gfx_mono_draw_string+0x1e>
}
  4005dc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4005e0:	004004f1 	.word	0x004004f1

004005e4 <gfx_mono_ssd1306_put_byte>:
	gfx_mono_ssd1306_put_byte(0, 0, 0xFF, false);
\endcode
  */
 void gfx_mono_ssd1306_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data, bool force)
{
  4005e4:	b570      	push	{r4, r5, r6, lr}
  4005e6:	4604      	mov	r4, r0
  4005e8:	460d      	mov	r5, r1
  4005ea:	4616      	mov	r6, r2
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	if (!force && data == gfx_mono_framebuffer_get_byte(page, column)) {
  4005ec:	b91b      	cbnz	r3, 4005f6 <gfx_mono_ssd1306_put_byte+0x12>
  4005ee:	4b0d      	ldr	r3, [pc, #52]	; (400624 <gfx_mono_ssd1306_put_byte+0x40>)
  4005f0:	4798      	blx	r3
  4005f2:	42b0      	cmp	r0, r6
  4005f4:	d015      	beq.n	400622 <gfx_mono_ssd1306_put_byte+0x3e>
		return;
	}
	gfx_mono_framebuffer_put_byte(page, column, data);
  4005f6:	4632      	mov	r2, r6
  4005f8:	4629      	mov	r1, r5
  4005fa:	4620      	mov	r0, r4
  4005fc:	4b0a      	ldr	r3, [pc, #40]	; (400628 <gfx_mono_ssd1306_put_byte+0x44>)
  4005fe:	4798      	blx	r3
 * \param address the page address
 */
static inline void ssd1306_set_page_address(uint8_t address)
{
	// Make sure that the address is 4 bits (only 8 pages)
	address &= 0x0F;
  400600:	f004 000f 	and.w	r0, r4, #15
	ssd1306_write_command(SSD1306_CMD_SET_PAGE_START_ADDRESS(address));
  400604:	f040 00b0 	orr.w	r0, r0, #176	; 0xb0
  400608:	4c08      	ldr	r4, [pc, #32]	; (40062c <gfx_mono_ssd1306_put_byte+0x48>)
  40060a:	47a0      	blx	r4
 */
static inline void ssd1306_set_column_address(uint8_t address)
{
	// Make sure the address is 7 bits
	address &= 0x7F;
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_MSB(address >> 4));
  40060c:	f3c5 1002 	ubfx	r0, r5, #4, #3
  400610:	f040 0010 	orr.w	r0, r0, #16
  400614:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_LSB(address & 0x0F));
  400616:	f005 000f 	and.w	r0, r5, #15
  40061a:	47a0      	blx	r4
#endif

	ssd1306_set_page_address(page);
	ssd1306_set_column_address(column);

	ssd1306_write_data(data);
  40061c:	4630      	mov	r0, r6
  40061e:	4b04      	ldr	r3, [pc, #16]	; (400630 <gfx_mono_ssd1306_put_byte+0x4c>)
  400620:	4798      	blx	r3
  400622:	bd70      	pop	{r4, r5, r6, pc}
  400624:	004003d9 	.word	0x004003d9
  400628:	004003c9 	.word	0x004003c9
  40062c:	004006f5 	.word	0x004006f5
  400630:	00400915 	.word	0x00400915

00400634 <gfx_mono_ssd1306_init>:
{
  400634:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	gfx_mono_set_framebuffer(framebuffer);
  400638:	480d      	ldr	r0, [pc, #52]	; (400670 <gfx_mono_ssd1306_init+0x3c>)
  40063a:	4b0e      	ldr	r3, [pc, #56]	; (400674 <gfx_mono_ssd1306_init+0x40>)
  40063c:	4798      	blx	r3
	ssd1306_init();
  40063e:	4b0e      	ldr	r3, [pc, #56]	; (400678 <gfx_mono_ssd1306_init+0x44>)
  400640:	4798      	blx	r3
 */
static inline void ssd1306_set_display_start_line_address(uint8_t address)
{
	// Make sure address is 6 bits
	address &= 0x3F;
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(address));
  400642:	2040      	movs	r0, #64	; 0x40
  400644:	4b0d      	ldr	r3, [pc, #52]	; (40067c <gfx_mono_ssd1306_init+0x48>)
  400646:	4798      	blx	r3
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  400648:	2500      	movs	r5, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  40064a:	f04f 0801 	mov.w	r8, #1
  40064e:	462f      	mov	r7, r5
  400650:	4e0b      	ldr	r6, [pc, #44]	; (400680 <gfx_mono_ssd1306_init+0x4c>)
{
  400652:	2400      	movs	r4, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  400654:	4643      	mov	r3, r8
  400656:	463a      	mov	r2, r7
  400658:	b2e1      	uxtb	r1, r4
  40065a:	4628      	mov	r0, r5
  40065c:	47b0      	blx	r6
  40065e:	3401      	adds	r4, #1
		for (column = 0; column < GFX_MONO_LCD_WIDTH; column++) {
  400660:	2c80      	cmp	r4, #128	; 0x80
  400662:	d1f7      	bne.n	400654 <gfx_mono_ssd1306_init+0x20>
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  400664:	3501      	adds	r5, #1
  400666:	b2ed      	uxtb	r5, r5
  400668:	2d04      	cmp	r5, #4
  40066a:	d1f2      	bne.n	400652 <gfx_mono_ssd1306_init+0x1e>
  40066c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400670:	204009f4 	.word	0x204009f4
  400674:	004003bd 	.word	0x004003bd
  400678:	00400735 	.word	0x00400735
  40067c:	004006f5 	.word	0x004006f5
  400680:	004005e5 	.word	0x004005e5

00400684 <gfx_mono_ssd1306_draw_pixel>:
	if ((x > GFX_MONO_LCD_WIDTH - 1) || (y > GFX_MONO_LCD_HEIGHT - 1)) {
  400684:	09c3      	lsrs	r3, r0, #7
  400686:	d12a      	bne.n	4006de <gfx_mono_ssd1306_draw_pixel+0x5a>
  400688:	291f      	cmp	r1, #31
  40068a:	d828      	bhi.n	4006de <gfx_mono_ssd1306_draw_pixel+0x5a>
{
  40068c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400690:	4614      	mov	r4, r2
  400692:	4605      	mov	r5, r0
	page = y / GFX_MONO_LCD_PIXELS_PER_BYTE;
  400694:	08ce      	lsrs	r6, r1, #3
	pixel_mask = (1 << (y - (page * 8)));
  400696:	eba1 01c6 	sub.w	r1, r1, r6, lsl #3
  40069a:	2201      	movs	r2, #1
  40069c:	fa02 f701 	lsl.w	r7, r2, r1
  4006a0:	fa5f f887 	uxtb.w	r8, r7
\endcode
 */
uint8_t gfx_mono_ssd1306_get_byte(gfx_coord_t page, gfx_coord_t column)
{
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	return gfx_mono_framebuffer_get_byte(page, column);
  4006a4:	4601      	mov	r1, r0
  4006a6:	4630      	mov	r0, r6
  4006a8:	4b0d      	ldr	r3, [pc, #52]	; (4006e0 <gfx_mono_ssd1306_draw_pixel+0x5c>)
  4006aa:	4798      	blx	r3
  4006ac:	4602      	mov	r2, r0
	switch (color) {
  4006ae:	2c01      	cmp	r4, #1
  4006b0:	d009      	beq.n	4006c6 <gfx_mono_ssd1306_draw_pixel+0x42>
  4006b2:	b164      	cbz	r4, 4006ce <gfx_mono_ssd1306_draw_pixel+0x4a>
  4006b4:	2c02      	cmp	r4, #2
  4006b6:	d00e      	beq.n	4006d6 <gfx_mono_ssd1306_draw_pixel+0x52>
	gfx_mono_put_byte(page, x, pixel_value);
  4006b8:	2300      	movs	r3, #0
  4006ba:	4629      	mov	r1, r5
  4006bc:	4630      	mov	r0, r6
  4006be:	4c09      	ldr	r4, [pc, #36]	; (4006e4 <gfx_mono_ssd1306_draw_pixel+0x60>)
  4006c0:	47a0      	blx	r4
  4006c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		pixel_value |= pixel_mask;
  4006c6:	ea48 0200 	orr.w	r2, r8, r0
  4006ca:	b2d2      	uxtb	r2, r2
		break;
  4006cc:	e7f4      	b.n	4006b8 <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value &= ~pixel_mask;
  4006ce:	ea20 0207 	bic.w	r2, r0, r7
  4006d2:	b2d2      	uxtb	r2, r2
		break;
  4006d4:	e7f0      	b.n	4006b8 <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value ^= pixel_mask;
  4006d6:	ea88 0200 	eor.w	r2, r8, r0
  4006da:	b2d2      	uxtb	r2, r2
		break;
  4006dc:	e7ec      	b.n	4006b8 <gfx_mono_ssd1306_draw_pixel+0x34>
  4006de:	4770      	bx	lr
  4006e0:	004003d9 	.word	0x004003d9
  4006e4:	004005e5 	.word	0x004005e5

004006e8 <gfx_mono_ssd1306_get_byte>:
{
  4006e8:	b508      	push	{r3, lr}
	return gfx_mono_framebuffer_get_byte(page, column);
  4006ea:	4b01      	ldr	r3, [pc, #4]	; (4006f0 <gfx_mono_ssd1306_get_byte+0x8>)
  4006ec:	4798      	blx	r3
	ssd1306_set_column_address(column);

	return ssd1306_read_data();

#endif
}
  4006ee:	bd08      	pop	{r3, pc}
  4006f0:	004003d9 	.word	0x004003d9

004006f4 <ssd1306_write_command>:
 * data write function is called based on the selected interface.
 *
 * \param command the command to write
 */
void ssd1306_write_command(uint8_t command)
{
  4006f4:	b538      	push	{r3, r4, r5, lr}
  4006f6:	4605      	mov	r5, r0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  4006f8:	2208      	movs	r2, #8
  4006fa:	4b09      	ldr	r3, [pc, #36]	; (400720 <ssd1306_write_command+0x2c>)
  4006fc:	635a      	str	r2, [r3, #52]	; 0x34
	ioport_set_pin_level(SSD1306_DC_PIN, false);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  4006fe:	4c09      	ldr	r4, [pc, #36]	; (400724 <ssd1306_write_command+0x30>)
  400700:	2101      	movs	r1, #1
  400702:	4620      	mov	r0, r4
  400704:	4b08      	ldr	r3, [pc, #32]	; (400728 <ssd1306_write_command+0x34>)
  400706:	4798      	blx	r3
	spi_write(SPI0, command, 1, 1);
  400708:	2301      	movs	r3, #1
  40070a:	461a      	mov	r2, r3
  40070c:	4629      	mov	r1, r5
  40070e:	4620      	mov	r0, r4
  400710:	4c06      	ldr	r4, [pc, #24]	; (40072c <ssd1306_write_command+0x38>)
  400712:	47a0      	blx	r4
	delay_us(10);
  400714:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  400718:	4b05      	ldr	r3, [pc, #20]	; (400730 <ssd1306_write_command+0x3c>)
  40071a:	4798      	blx	r3
  40071c:	bd38      	pop	{r3, r4, r5, pc}
  40071e:	bf00      	nop
  400720:	400e1000 	.word	0x400e1000
  400724:	40008000 	.word	0x40008000
  400728:	0040029d 	.word	0x0040029d
  40072c:	004002b3 	.word	0x004002b3
  400730:	20400001 	.word	0x20400001

00400734 <ssd1306_init>:
{
  400734:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400738:	4d66      	ldr	r5, [pc, #408]	; (4008d4 <ssd1306_init+0x1a0>)
  40073a:	f44f 3600 	mov.w	r6, #131072	; 0x20000
  40073e:	612e      	str	r6, [r5, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400740:	f8c5 60a0 	str.w	r6, [r5, #160]	; 0xa0
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400744:	4b64      	ldr	r3, [pc, #400]	; (4008d8 <ssd1306_init+0x1a4>)
  400746:	2708      	movs	r7, #8
  400748:	611f      	str	r7, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  40074a:	f8c3 70a0 	str.w	r7, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  40074e:	666e      	str	r6, [r5, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400750:	f8c5 6090 	str.w	r6, [r5, #144]	; 0x90
		base->PIO_MDDR = mask;
  400754:	656e      	str	r6, [r5, #84]	; 0x54
		base->PIO_IFDR = mask;
  400756:	626e      	str	r6, [r5, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400758:	f8c5 6080 	str.w	r6, [r5, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  40075c:	6f2a      	ldr	r2, [r5, #112]	; 0x70
  40075e:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  400762:	672a      	str	r2, [r5, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400764:	6f6a      	ldr	r2, [r5, #116]	; 0x74
  400766:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  40076a:	676a      	str	r2, [r5, #116]	; 0x74
		base->PIO_PUER = mask;
  40076c:	665f      	str	r7, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  40076e:	f8c3 7090 	str.w	r7, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  400772:	655f      	str	r7, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  400774:	625f      	str	r7, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400776:	f8c3 7080 	str.w	r7, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  40077a:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  40077c:	f022 0208 	bic.w	r2, r2, #8
  400780:	671a      	str	r2, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400782:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  400784:	f022 0208 	bic.w	r2, r2, #8
  400788:	675a      	str	r2, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PER = mask;
  40078a:	601f      	str	r7, [r3, #0]
  40078c:	602e      	str	r6, [r5, #0]
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  40078e:	631f      	str	r7, [r3, #48]	; 0x30
  400790:	632e      	str	r6, [r5, #48]	; 0x30
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  400792:	f8df 817c 	ldr.w	r8, [pc, #380]	; 400910 <ssd1306_init+0x1dc>
  400796:	2300      	movs	r3, #0
  400798:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  40079c:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4007a0:	4640      	mov	r0, r8
  4007a2:	4c4e      	ldr	r4, [pc, #312]	; (4008dc <ssd1306_init+0x1a8>)
  4007a4:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  4007a6:	2300      	movs	r3, #0
  4007a8:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  4007ac:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4007b0:	4640      	mov	r0, r8
  4007b2:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  4007b4:	2300      	movs	r3, #0
  4007b6:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  4007ba:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4007be:	4640      	mov	r0, r8
  4007c0:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  4007c2:	2300      	movs	r3, #0
  4007c4:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  4007c8:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4007cc:	4640      	mov	r0, r8
  4007ce:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  4007d0:	2300      	movs	r3, #0
  4007d2:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  4007d6:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4007da:	4640      	mov	r0, r8
  4007dc:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  4007de:	2300      	movs	r3, #0
  4007e0:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  4007e4:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4007e8:	4640      	mov	r0, r8
  4007ea:	47a0      	blx	r4
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  4007ec:	4c3c      	ldr	r4, [pc, #240]	; (4008e0 <ssd1306_init+0x1ac>)
  4007ee:	f04f 0902 	mov.w	r9, #2
  4007f2:	f8c4 9000 	str.w	r9, [r4]
	p_spi->SPI_CR = SPI_CR_SWRST;
  4007f6:	f04f 0880 	mov.w	r8, #128	; 0x80
  4007fa:	f8c4 8000 	str.w	r8, [r4]
	p_spi->SPI_MR |= SPI_MR_MSTR;
  4007fe:	6863      	ldr	r3, [r4, #4]
  400800:	f043 0301 	orr.w	r3, r3, #1
  400804:	6063      	str	r3, [r4, #4]
		spi_configure_cs_behavior(SPI0, 1, SPI_CS_KEEP_LOW);
  400806:	463a      	mov	r2, r7
  400808:	2101      	movs	r1, #1
  40080a:	4620      	mov	r0, r4
  40080c:	4b35      	ldr	r3, [pc, #212]	; (4008e4 <ssd1306_init+0x1b0>)
  40080e:	4798      	blx	r3
		spi_set_clock_polarity(SPI0, 1, 0);
  400810:	2200      	movs	r2, #0
  400812:	2101      	movs	r1, #1
  400814:	4620      	mov	r0, r4
  400816:	4b34      	ldr	r3, [pc, #208]	; (4008e8 <ssd1306_init+0x1b4>)
  400818:	4798      	blx	r3
		spi_set_clock_phase(SPI0, 1, 0);
  40081a:	2200      	movs	r2, #0
  40081c:	2101      	movs	r1, #1
  40081e:	4620      	mov	r0, r4
  400820:	4b32      	ldr	r3, [pc, #200]	; (4008ec <ssd1306_init+0x1b8>)
  400822:	4798      	blx	r3
	p_spi->SPI_MR &= (~SPI_MR_PS);
  400824:	6863      	ldr	r3, [r4, #4]
  400826:	f023 0302 	bic.w	r3, r3, #2
  40082a:	6063      	str	r3, [r4, #4]
		spi_set_bits_per_transfer(SPI0, 1, SPI_CSR_BITS_8_BIT);
  40082c:	2200      	movs	r2, #0
  40082e:	2101      	movs	r1, #1
  400830:	4620      	mov	r0, r4
  400832:	4b2f      	ldr	r3, [pc, #188]	; (4008f0 <ssd1306_init+0x1bc>)
  400834:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_loopback(Spi *p_spi)
{
	p_spi->SPI_MR &= (~SPI_MR_LLB);
  400836:	6863      	ldr	r3, [r4, #4]
  400838:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  40083c:	6063      	str	r3, [r4, #4]
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  40083e:	6863      	ldr	r3, [r4, #4]
  400840:	f043 0310 	orr.w	r3, r3, #16
  400844:	6063      	str	r3, [r4, #4]
		int div = spi_calc_baudrate_div(2000000, sysclk_get_peripheral_hz());
  400846:	492b      	ldr	r1, [pc, #172]	; (4008f4 <ssd1306_init+0x1c0>)
  400848:	482b      	ldr	r0, [pc, #172]	; (4008f8 <ssd1306_init+0x1c4>)
  40084a:	4b2c      	ldr	r3, [pc, #176]	; (4008fc <ssd1306_init+0x1c8>)
  40084c:	4798      	blx	r3
		spi_set_baudrate_div(SPI0,1, div);
  40084e:	b2c2      	uxtb	r2, r0
  400850:	2101      	movs	r1, #1
  400852:	4620      	mov	r0, r4
  400854:	4b2a      	ldr	r3, [pc, #168]	; (400900 <ssd1306_init+0x1cc>)
  400856:	4798      	blx	r3
		spi_enable_clock(SPI0);
  400858:	4620      	mov	r0, r4
  40085a:	4b2a      	ldr	r3, [pc, #168]	; (400904 <ssd1306_init+0x1d0>)
  40085c:	4798      	blx	r3
	p_spi->SPI_CR = SPI_CR_SPIEN;
  40085e:	2301      	movs	r3, #1
  400860:	6023      	str	r3, [r4, #0]
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  400862:	636e      	str	r6, [r5, #52]	; 0x34
	delay_cycles(delay_10us); // At lest 10us
  400864:	f640 30b8 	movw	r0, #3000	; 0xbb8
  400868:	4c27      	ldr	r4, [pc, #156]	; (400908 <ssd1306_init+0x1d4>)
  40086a:	47a0      	blx	r4
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  40086c:	632e      	str	r6, [r5, #48]	; 0x30
	delay_cycles(delay_10us); // At lest 10us
  40086e:	f640 30b8 	movw	r0, #3000	; 0xbb8
  400872:	47a0      	blx	r4
  400874:	632e      	str	r6, [r5, #48]	; 0x30
	ssd1306_write_command(SSD1306_CMD_SET_MULTIPLEX_RATIO);
  400876:	20a8      	movs	r0, #168	; 0xa8
  400878:	4c24      	ldr	r4, [pc, #144]	; (40090c <ssd1306_init+0x1d8>)
  40087a:	47a0      	blx	r4
	ssd1306_write_command(0x1F);
  40087c:	201f      	movs	r0, #31
  40087e:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_OFFSET);
  400880:	20d3      	movs	r0, #211	; 0xd3
  400882:	47a0      	blx	r4
	ssd1306_write_command(0x00);
  400884:	2000      	movs	r0, #0
  400886:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(0x00));
  400888:	2040      	movs	r0, #64	; 0x40
  40088a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_SEGMENT_RE_MAP_COL127_SEG0);
  40088c:	20a1      	movs	r0, #161	; 0xa1
  40088e:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_OUTPUT_SCAN_DOWN);
  400890:	20c8      	movs	r0, #200	; 0xc8
  400892:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_PINS);
  400894:	20da      	movs	r0, #218	; 0xda
  400896:	47a0      	blx	r4
	ssd1306_write_command(0x02);
  400898:	4648      	mov	r0, r9
  40089a:	47a0      	blx	r4
 *
 * \retval contrast the contrast value written to the OLED controller
 */
static inline uint8_t ssd1306_set_contrast(uint8_t contrast)
{
	ssd1306_write_command(SSD1306_CMD_SET_CONTRAST_CONTROL_FOR_BANK0);
  40089c:	2081      	movs	r0, #129	; 0x81
  40089e:	47a0      	blx	r4
	ssd1306_write_command(contrast);
  4008a0:	208f      	movs	r0, #143	; 0x8f
  4008a2:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_ENTIRE_DISPLAY_AND_GDDRAM_ON);
  4008a4:	20a4      	movs	r0, #164	; 0xa4
  4008a6:	47a0      	blx	r4
 * This function will disable invert on all pixels on the OLED
 *
 */
static inline void ssd1306_display_invert_disable(void)
{
	ssd1306_write_command(SSD1306_CMD_SET_NORMAL_DISPLAY);
  4008a8:	20a6      	movs	r0, #166	; 0xa6
  4008aa:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_CLOCK_DIVIDE_RATIO);
  4008ac:	20d5      	movs	r0, #213	; 0xd5
  4008ae:	47a0      	blx	r4
	ssd1306_write_command(0x80);
  4008b0:	4640      	mov	r0, r8
  4008b2:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_CHARGE_PUMP_SETTING);
  4008b4:	208d      	movs	r0, #141	; 0x8d
  4008b6:	47a0      	blx	r4
	ssd1306_write_command(0x14);
  4008b8:	2014      	movs	r0, #20
  4008ba:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_VCOMH_DESELECT_LEVEL);
  4008bc:	20db      	movs	r0, #219	; 0xdb
  4008be:	47a0      	blx	r4
	ssd1306_write_command(0x40); // Default => 0x20 (0.77*VCC)
  4008c0:	2040      	movs	r0, #64	; 0x40
  4008c2:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_PRE_CHARGE_PERIOD);
  4008c4:	20d9      	movs	r0, #217	; 0xd9
  4008c6:	47a0      	blx	r4
	ssd1306_write_command(0xF1);
  4008c8:	20f1      	movs	r0, #241	; 0xf1
  4008ca:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_ON);
  4008cc:	20af      	movs	r0, #175	; 0xaf
  4008ce:	47a0      	blx	r4
  4008d0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4008d4:	400e1200 	.word	0x400e1200
  4008d8:	400e1000 	.word	0x400e1000
  4008dc:	00400c19 	.word	0x00400c19
  4008e0:	40008000 	.word	0x40008000
  4008e4:	00400323 	.word	0x00400323
  4008e8:	004002e7 	.word	0x004002e7
  4008ec:	00400305 	.word	0x00400305
  4008f0:	00400369 	.word	0x00400369
  4008f4:	08f0d180 	.word	0x08f0d180
  4008f8:	001e8480 	.word	0x001e8480
  4008fc:	0040037d 	.word	0x0040037d
  400900:	00400393 	.word	0x00400393
  400904:	00400271 	.word	0x00400271
  400908:	20400001 	.word	0x20400001
  40090c:	004006f5 	.word	0x004006f5
  400910:	400e1400 	.word	0x400e1400

00400914 <ssd1306_write_data>:
 * data write function is called based on the selected interface.
 *
 * \param data the data to write
 */
void ssd1306_write_data(uint8_t data)
{
  400914:	b538      	push	{r3, r4, r5, lr}
  400916:	4605      	mov	r5, r0
  400918:	2208      	movs	r2, #8
  40091a:	4b09      	ldr	r3, [pc, #36]	; (400940 <ssd1306_write_data+0x2c>)
  40091c:	631a      	str	r2, [r3, #48]	; 0x30
	ioport_set_pin_level(SSD1306_DC_PIN, true);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  40091e:	4c09      	ldr	r4, [pc, #36]	; (400944 <ssd1306_write_data+0x30>)
  400920:	2101      	movs	r1, #1
  400922:	4620      	mov	r0, r4
  400924:	4b08      	ldr	r3, [pc, #32]	; (400948 <ssd1306_write_data+0x34>)
  400926:	4798      	blx	r3
	spi_write(SPI0, data, 1, 1);
  400928:	2301      	movs	r3, #1
  40092a:	461a      	mov	r2, r3
  40092c:	4629      	mov	r1, r5
  40092e:	4620      	mov	r0, r4
  400930:	4c06      	ldr	r4, [pc, #24]	; (40094c <ssd1306_write_data+0x38>)
  400932:	47a0      	blx	r4
	delay_us(10);
  400934:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  400938:	4b05      	ldr	r3, [pc, #20]	; (400950 <ssd1306_write_data+0x3c>)
  40093a:	4798      	blx	r3
  40093c:	bd38      	pop	{r3, r4, r5, pc}
  40093e:	bf00      	nop
  400940:	400e1000 	.word	0x400e1000
  400944:	40008000 	.word	0x40008000
  400948:	0040029d 	.word	0x0040029d
  40094c:	004002b3 	.word	0x004002b3
  400950:	20400001 	.word	0x20400001

00400954 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400954:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  400956:	4810      	ldr	r0, [pc, #64]	; (400998 <sysclk_init+0x44>)
  400958:	4b10      	ldr	r3, [pc, #64]	; (40099c <sysclk_init+0x48>)
  40095a:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  40095c:	213e      	movs	r1, #62	; 0x3e
  40095e:	2000      	movs	r0, #0
  400960:	4b0f      	ldr	r3, [pc, #60]	; (4009a0 <sysclk_init+0x4c>)
  400962:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400964:	4c0f      	ldr	r4, [pc, #60]	; (4009a4 <sysclk_init+0x50>)
  400966:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  400968:	2800      	cmp	r0, #0
  40096a:	d0fc      	beq.n	400966 <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  40096c:	4b0e      	ldr	r3, [pc, #56]	; (4009a8 <sysclk_init+0x54>)
  40096e:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400970:	4a0e      	ldr	r2, [pc, #56]	; (4009ac <sysclk_init+0x58>)
  400972:	4b0f      	ldr	r3, [pc, #60]	; (4009b0 <sysclk_init+0x5c>)
  400974:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
	return pmc_is_locked_pllack();
  400976:	4c0f      	ldr	r4, [pc, #60]	; (4009b4 <sysclk_init+0x60>)
  400978:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  40097a:	2800      	cmp	r0, #0
  40097c:	d0fc      	beq.n	400978 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
  40097e:	2002      	movs	r0, #2
  400980:	4b0d      	ldr	r3, [pc, #52]	; (4009b8 <sysclk_init+0x64>)
  400982:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400984:	2000      	movs	r0, #0
  400986:	4b0d      	ldr	r3, [pc, #52]	; (4009bc <sysclk_init+0x68>)
  400988:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}
	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  40098a:	4b0d      	ldr	r3, [pc, #52]	; (4009c0 <sysclk_init+0x6c>)
  40098c:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  40098e:	4802      	ldr	r0, [pc, #8]	; (400998 <sysclk_init+0x44>)
  400990:	4b02      	ldr	r3, [pc, #8]	; (40099c <sysclk_init+0x48>)
  400992:	4798      	blx	r3
  400994:	bd10      	pop	{r4, pc}
  400996:	bf00      	nop
  400998:	11e1a300 	.word	0x11e1a300
  40099c:	0040141d 	.word	0x0040141d
  4009a0:	00400ea9 	.word	0x00400ea9
  4009a4:	00400efd 	.word	0x00400efd
  4009a8:	00400f0d 	.word	0x00400f0d
  4009ac:	20183f01 	.word	0x20183f01
  4009b0:	400e0600 	.word	0x400e0600
  4009b4:	00400f1d 	.word	0x00400f1d
  4009b8:	00400e0d 	.word	0x00400e0d
  4009bc:	00400e45 	.word	0x00400e45
  4009c0:	00401311 	.word	0x00401311

004009c4 <board_init>:
	__ISB();
}
#endif

void board_init(void)
{
  4009c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  4009c6:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4009ca:	4b48      	ldr	r3, [pc, #288]	; (400aec <board_init+0x128>)
  4009cc:	605a      	str	r2, [r3, #4]
    This function acts as a special kind of Data Memory Barrier.
    It completes when all explicit memory accesses before this instruction complete.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
{
  __ASM volatile ("dsb");
  4009ce:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  4009d2:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache(void)
{
  #if (__ICACHE_PRESENT == 1)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0;                       // invalidate I-Cache
  4009d6:	4b46      	ldr	r3, [pc, #280]	; (400af0 <board_init+0x12c>)
  4009d8:	2200      	movs	r2, #0
  4009da:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
    SCB->CCR |=  SCB_CCR_IC_Msk;            // enable I-Cache
  4009de:	695a      	ldr	r2, [r3, #20]
  4009e0:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
  4009e4:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb");
  4009e6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  4009ea:	f3bf 8f6f 	isb	sy
{
  #if (__DCACHE_PRESENT == 1)
    uint32_t ccsidr, sshift, wshift, sw;
    uint32_t sets, ways;

    ccsidr  = SCB->CCSIDR;
  4009ee:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80
    sets    = CCSIDR_SETS(ccsidr);
  4009f2:	f3c7 364e 	ubfx	r6, r7, #13, #15
    sshift  = CCSIDR_LSSHIFT(ccsidr) + 4;
  4009f6:	f007 0007 	and.w	r0, r7, #7
  4009fa:	3004      	adds	r0, #4
    ways    = CCSIDR_WAYS(ccsidr);
  4009fc:	f3c7 07c9 	ubfx	r7, r7, #3, #10
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
  400a00:	fab7 fe87 	clz	lr, r7
    wshift  = __CLZ(ways) & 0x1f;
  400a04:	f00e 0e1f 	and.w	lr, lr, #31
  __ASM volatile ("dsb");
  400a08:	f3bf 8f4f 	dsb	sy
  400a0c:	f04f 34ff 	mov.w	r4, #4294967295
  400a10:	fa04 fc00 	lsl.w	ip, r4, r0
  400a14:	fa06 f000 	lsl.w	r0, r6, r0
  400a18:	fa04 f40e 	lsl.w	r4, r4, lr
  400a1c:	fa07 fe0e 	lsl.w	lr, r7, lr

    do {                                    // invalidate D-Cache
         int32_t tmpways = ways;
         do {
              sw = ((tmpways << wshift) | (sets << sshift));
              SCB->DCISW = sw;
  400a20:	461d      	mov	r5, r3
         int32_t tmpways = ways;
  400a22:	463a      	mov	r2, r7
  400a24:	4673      	mov	r3, lr
              sw = ((tmpways << wshift) | (sets << sshift));
  400a26:	ea40 0103 	orr.w	r1, r0, r3
              SCB->DCISW = sw;
  400a2a:	f8c5 1260 	str.w	r1, [r5, #608]	; 0x260
            } while(tmpways--);
  400a2e:	3a01      	subs	r2, #1
  400a30:	4423      	add	r3, r4
  400a32:	f1b2 3fff 	cmp.w	r2, #4294967295
  400a36:	d1f6      	bne.n	400a26 <board_init+0x62>
        } while(sets--);
  400a38:	3e01      	subs	r6, #1
  400a3a:	4460      	add	r0, ip
  400a3c:	f1b6 3fff 	cmp.w	r6, #4294967295
  400a40:	d1ef      	bne.n	400a22 <board_init+0x5e>
  400a42:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  SCB_CCR_DC_Msk;            // enable D-Cache
  400a46:	4b2a      	ldr	r3, [pc, #168]	; (400af0 <board_init+0x12c>)
  400a48:	695a      	ldr	r2, [r3, #20]
  400a4a:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  400a4e:	615a      	str	r2, [r3, #20]
  400a50:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400a54:	f3bf 8f6f 	isb	sy
		*dst++ = *src++;
	}
#endif
#else
	/* TCM Configuration */
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400a58:	4a26      	ldr	r2, [pc, #152]	; (400af4 <board_init+0x130>)
  400a5a:	4927      	ldr	r1, [pc, #156]	; (400af8 <board_init+0x134>)
  400a5c:	6051      	str	r1, [r2, #4]
					| EEFC_FCR_FARG(8));
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400a5e:	f5a1 7180 	sub.w	r1, r1, #256	; 0x100
  400a62:	6051      	str	r1, [r2, #4]
  __ASM volatile ("dsb");
  400a64:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400a68:	f3bf 8f6f 	isb	sy
	SCB->ITCMCR &= ~(uint32_t)(1UL);
  400a6c:	f8d3 2290 	ldr.w	r2, [r3, #656]	; 0x290
  400a70:	f022 0201 	bic.w	r2, r2, #1
  400a74:	f8c3 2290 	str.w	r2, [r3, #656]	; 0x290
	SCB->DTCMCR &= ~(uint32_t)SCB_DTCMCR_EN_Msk;
  400a78:	f8d3 2294 	ldr.w	r2, [r3, #660]	; 0x294
  400a7c:	f022 0201 	bic.w	r2, r2, #1
  400a80:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  __ASM volatile ("dsb");
  400a84:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400a88:	f3bf 8f6f 	isb	sy
  400a8c:	200a      	movs	r0, #10
  400a8e:	4c1b      	ldr	r4, [pc, #108]	; (400afc <board_init+0x138>)
  400a90:	47a0      	blx	r4
  400a92:	200b      	movs	r0, #11
  400a94:	47a0      	blx	r4
  400a96:	200c      	movs	r0, #12
  400a98:	47a0      	blx	r4
  400a9a:	2010      	movs	r0, #16
  400a9c:	47a0      	blx	r4
  400a9e:	2011      	movs	r0, #17
  400aa0:	47a0      	blx	r4
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400aa2:	4b17      	ldr	r3, [pc, #92]	; (400b00 <board_init+0x13c>)
  400aa4:	f44f 7280 	mov.w	r2, #256	; 0x100
  400aa8:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400aaa:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400aae:	631a      	str	r2, [r3, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  400ab0:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
  400ab4:	f44f 6200 	mov.w	r2, #2048	; 0x800
  400ab8:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400aba:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  400abe:	665a      	str	r2, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400ac0:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  400ac4:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFER = mask;
  400ac6:	621a      	str	r2, [r3, #32]
		base->PIO_IFSCER = mask;
  400ac8:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
		base->PIO_ABCDSR[0] &= ~mask;
  400acc:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400ace:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400ad2:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400ad4:	6f59      	ldr	r1, [r3, #116]	; 0x74
  400ad6:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400ada:	6759      	str	r1, [r3, #116]	; 0x74
	case IOPORT_SENSE_FALLING:
		base->PIO_ESR = mask;
		base->PIO_FELLSR = mask;
		break;
	case IOPORT_SENSE_RISING:
		base->PIO_ESR = mask;
  400adc:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
		base->PIO_REHLSR = mask;
  400ae0:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
		break;
	default:
		base->PIO_AIMDR = mask;
		return;
	}
	base->PIO_AIMER = mask;
  400ae4:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
  400ae8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400aea:	bf00      	nop
  400aec:	400e1850 	.word	0x400e1850
  400af0:	e000ed00 	.word	0xe000ed00
  400af4:	400e0c00 	.word	0x400e0c00
  400af8:	5a00080c 	.word	0x5a00080c
  400afc:	00400f2d 	.word	0x00400f2d
  400b00:	400e1200 	.word	0x400e1200

00400b04 <pio_set>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_SODR = ul_mask;
  400b04:	6301      	str	r1, [r0, #48]	; 0x30
  400b06:	4770      	bx	lr

00400b08 <pio_clear>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_clear(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_CODR = ul_mask;
  400b08:	6341      	str	r1, [r0, #52]	; 0x34
  400b0a:	4770      	bx	lr

00400b0c <pio_get>:
uint32_t pio_get(Pio *p_pio, const pio_type_t ul_type,
		const uint32_t ul_mask)
{
	uint32_t ul_reg;

	if ((ul_type == PIO_OUTPUT_0) || (ul_type == PIO_OUTPUT_1)) {
  400b0c:	f021 6100 	bic.w	r1, r1, #134217728	; 0x8000000
  400b10:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400b14:	d105      	bne.n	400b22 <pio_get+0x16>
		ul_reg = p_pio->PIO_ODSR;
  400b16:	6b83      	ldr	r3, [r0, #56]	; 0x38
	} else {
		ul_reg = p_pio->PIO_PDSR;
	}

	if ((ul_reg & ul_mask) == 0) {
  400b18:	4213      	tst	r3, r2
		return 0;
	} else {
		return 1;
	}
}
  400b1a:	bf14      	ite	ne
  400b1c:	2001      	movne	r0, #1
  400b1e:	2000      	moveq	r0, #0
  400b20:	4770      	bx	lr
		ul_reg = p_pio->PIO_PDSR;
  400b22:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
  400b24:	e7f8      	b.n	400b18 <pio_get+0xc>

00400b26 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  400b26:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  400b28:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400b2c:	d03a      	beq.n	400ba4 <pio_set_peripheral+0x7e>
  400b2e:	d813      	bhi.n	400b58 <pio_set_peripheral+0x32>
  400b30:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400b34:	d025      	beq.n	400b82 <pio_set_peripheral+0x5c>
  400b36:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400b3a:	d10a      	bne.n	400b52 <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  400b3c:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400b3e:	4313      	orrs	r3, r2
  400b40:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400b42:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400b44:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400b46:	400b      	ands	r3, r1
  400b48:	ea23 0302 	bic.w	r3, r3, r2
  400b4c:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  400b4e:	6042      	str	r2, [r0, #4]
  400b50:	4770      	bx	lr
	switch (ul_type) {
  400b52:	2900      	cmp	r1, #0
  400b54:	d1fb      	bne.n	400b4e <pio_set_peripheral+0x28>
  400b56:	4770      	bx	lr
  400b58:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400b5c:	d021      	beq.n	400ba2 <pio_set_peripheral+0x7c>
  400b5e:	d809      	bhi.n	400b74 <pio_set_peripheral+0x4e>
  400b60:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400b64:	d1f3      	bne.n	400b4e <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  400b66:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400b68:	4313      	orrs	r3, r2
  400b6a:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400b6c:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400b6e:	4313      	orrs	r3, r2
  400b70:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400b72:	e7ec      	b.n	400b4e <pio_set_peripheral+0x28>
	switch (ul_type) {
  400b74:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400b78:	d013      	beq.n	400ba2 <pio_set_peripheral+0x7c>
  400b7a:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400b7e:	d010      	beq.n	400ba2 <pio_set_peripheral+0x7c>
  400b80:	e7e5      	b.n	400b4e <pio_set_peripheral+0x28>
{
  400b82:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  400b84:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400b86:	6f04      	ldr	r4, [r0, #112]	; 0x70
  400b88:	43d3      	mvns	r3, r2
  400b8a:	4021      	ands	r1, r4
  400b8c:	461c      	mov	r4, r3
  400b8e:	4019      	ands	r1, r3
  400b90:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400b92:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400b94:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400b96:	400b      	ands	r3, r1
  400b98:	4023      	ands	r3, r4
  400b9a:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  400b9c:	6042      	str	r2, [r0, #4]
}
  400b9e:	f85d 4b04 	ldr.w	r4, [sp], #4
  400ba2:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400ba4:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400ba6:	6f01      	ldr	r1, [r0, #112]	; 0x70
  400ba8:	400b      	ands	r3, r1
  400baa:	ea23 0302 	bic.w	r3, r3, r2
  400bae:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400bb0:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400bb2:	4313      	orrs	r3, r2
  400bb4:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400bb6:	e7ca      	b.n	400b4e <pio_set_peripheral+0x28>

00400bb8 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400bb8:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400bba:	f012 0f01 	tst.w	r2, #1
  400bbe:	d10d      	bne.n	400bdc <pio_set_input+0x24>
		p_pio->PIO_PUDR = ul_mask;
  400bc0:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400bc2:	f012 0f0a 	tst.w	r2, #10
  400bc6:	d00b      	beq.n	400be0 <pio_set_input+0x28>
		p_pio->PIO_IFER = ul_mask;
  400bc8:	6201      	str	r1, [r0, #32]
	if (ul_attribute & PIO_DEGLITCH) {
  400bca:	f012 0f02 	tst.w	r2, #2
  400bce:	d109      	bne.n	400be4 <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  400bd0:	f012 0f08 	tst.w	r2, #8
  400bd4:	d008      	beq.n	400be8 <pio_set_input+0x30>
			p_pio->PIO_IFSCER = ul_mask;
  400bd6:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
  400bda:	e005      	b.n	400be8 <pio_set_input+0x30>
		p_pio->PIO_PUER = ul_mask;
  400bdc:	6641      	str	r1, [r0, #100]	; 0x64
  400bde:	e7f0      	b.n	400bc2 <pio_set_input+0xa>
		p_pio->PIO_IFDR = ul_mask;
  400be0:	6241      	str	r1, [r0, #36]	; 0x24
  400be2:	e7f2      	b.n	400bca <pio_set_input+0x12>
		p_pio->PIO_IFSCDR = ul_mask;
  400be4:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
	p_pio->PIO_ODR = ul_mask;
  400be8:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400bea:	6001      	str	r1, [r0, #0]
  400bec:	4770      	bx	lr

00400bee <pio_set_output>:
{
  400bee:	b410      	push	{r4}
  400bf0:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  400bf2:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400bf4:	b94c      	cbnz	r4, 400c0a <pio_set_output+0x1c>
		p_pio->PIO_PUDR = ul_mask;
  400bf6:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400bf8:	b14b      	cbz	r3, 400c0e <pio_set_output+0x20>
		p_pio->PIO_MDER = ul_mask;
  400bfa:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  400bfc:	b94a      	cbnz	r2, 400c12 <pio_set_output+0x24>
		p_pio->PIO_CODR = ul_mask;
  400bfe:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  400c00:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400c02:	6001      	str	r1, [r0, #0]
}
  400c04:	f85d 4b04 	ldr.w	r4, [sp], #4
  400c08:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400c0a:	6641      	str	r1, [r0, #100]	; 0x64
  400c0c:	e7f4      	b.n	400bf8 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  400c0e:	6541      	str	r1, [r0, #84]	; 0x54
  400c10:	e7f4      	b.n	400bfc <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  400c12:	6301      	str	r1, [r0, #48]	; 0x30
  400c14:	e7f4      	b.n	400c00 <pio_set_output+0x12>
	...

00400c18 <pio_configure>:
{
  400c18:	b570      	push	{r4, r5, r6, lr}
  400c1a:	b082      	sub	sp, #8
  400c1c:	4605      	mov	r5, r0
  400c1e:	4616      	mov	r6, r2
  400c20:	461c      	mov	r4, r3
	switch (ul_type) {
  400c22:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400c26:	d014      	beq.n	400c52 <pio_configure+0x3a>
  400c28:	d90a      	bls.n	400c40 <pio_configure+0x28>
  400c2a:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400c2e:	d024      	beq.n	400c7a <pio_configure+0x62>
  400c30:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400c34:	d021      	beq.n	400c7a <pio_configure+0x62>
  400c36:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400c3a:	d017      	beq.n	400c6c <pio_configure+0x54>
		return 0;
  400c3c:	2000      	movs	r0, #0
  400c3e:	e01a      	b.n	400c76 <pio_configure+0x5e>
	switch (ul_type) {
  400c40:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400c44:	d005      	beq.n	400c52 <pio_configure+0x3a>
  400c46:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400c4a:	d002      	beq.n	400c52 <pio_configure+0x3a>
  400c4c:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400c50:	d1f4      	bne.n	400c3c <pio_configure+0x24>
		pio_set_peripheral(p_pio, ul_type, ul_mask);
  400c52:	4632      	mov	r2, r6
  400c54:	4628      	mov	r0, r5
  400c56:	4b11      	ldr	r3, [pc, #68]	; (400c9c <pio_configure+0x84>)
  400c58:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400c5a:	f014 0f01 	tst.w	r4, #1
  400c5e:	d102      	bne.n	400c66 <pio_configure+0x4e>
		p_pio->PIO_PUDR = ul_mask;
  400c60:	662e      	str	r6, [r5, #96]	; 0x60
	return 1;
  400c62:	2001      	movs	r0, #1
  400c64:	e007      	b.n	400c76 <pio_configure+0x5e>
		p_pio->PIO_PUER = ul_mask;
  400c66:	666e      	str	r6, [r5, #100]	; 0x64
	return 1;
  400c68:	2001      	movs	r0, #1
  400c6a:	e004      	b.n	400c76 <pio_configure+0x5e>
		pio_set_input(p_pio, ul_mask, ul_attribute);
  400c6c:	461a      	mov	r2, r3
  400c6e:	4631      	mov	r1, r6
  400c70:	4b0b      	ldr	r3, [pc, #44]	; (400ca0 <pio_configure+0x88>)
  400c72:	4798      	blx	r3
	return 1;
  400c74:	2001      	movs	r0, #1
}
  400c76:	b002      	add	sp, #8
  400c78:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_output(p_pio, ul_mask, (ul_type == PIO_OUTPUT_1),
  400c7a:	f004 0301 	and.w	r3, r4, #1
  400c7e:	9300      	str	r3, [sp, #0]
  400c80:	f3c4 0380 	ubfx	r3, r4, #2, #1
  400c84:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400c88:	bf14      	ite	ne
  400c8a:	2200      	movne	r2, #0
  400c8c:	2201      	moveq	r2, #1
  400c8e:	4631      	mov	r1, r6
  400c90:	4628      	mov	r0, r5
  400c92:	4c04      	ldr	r4, [pc, #16]	; (400ca4 <pio_configure+0x8c>)
  400c94:	47a0      	blx	r4
	return 1;
  400c96:	2001      	movs	r0, #1
		break;
  400c98:	e7ed      	b.n	400c76 <pio_configure+0x5e>
  400c9a:	bf00      	nop
  400c9c:	00400b27 	.word	0x00400b27
  400ca0:	00400bb9 	.word	0x00400bb9
  400ca4:	00400bef 	.word	0x00400bef

00400ca8 <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
  400ca8:	f012 0f10 	tst.w	r2, #16
  400cac:	d012      	beq.n	400cd4 <pio_configure_interrupt+0x2c>
		p_pio->PIO_AIMER = ul_mask;
  400cae:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
  400cb2:	f012 0f20 	tst.w	r2, #32
  400cb6:	d007      	beq.n	400cc8 <pio_configure_interrupt+0x20>
			p_pio->PIO_REHLSR = ul_mask;
  400cb8:	f8c0 10d4 	str.w	r1, [r0, #212]	; 0xd4
		if (ul_attr & PIO_IT_EDGE) {
  400cbc:	f012 0f40 	tst.w	r2, #64	; 0x40
  400cc0:	d005      	beq.n	400cce <pio_configure_interrupt+0x26>
			p_pio->PIO_ESR = ul_mask;
  400cc2:	f8c0 10c0 	str.w	r1, [r0, #192]	; 0xc0
  400cc6:	4770      	bx	lr
			p_pio->PIO_FELLSR = ul_mask;
  400cc8:	f8c0 10d0 	str.w	r1, [r0, #208]	; 0xd0
  400ccc:	e7f6      	b.n	400cbc <pio_configure_interrupt+0x14>
			p_pio->PIO_LSR = ul_mask;
  400cce:	f8c0 10c4 	str.w	r1, [r0, #196]	; 0xc4
  400cd2:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
  400cd4:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  400cd8:	4770      	bx	lr

00400cda <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
  400cda:	6401      	str	r1, [r0, #64]	; 0x40
  400cdc:	4770      	bx	lr

00400cde <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  400cde:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  400ce0:	4770      	bx	lr

00400ce2 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  400ce2:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  400ce4:	4770      	bx	lr
	...

00400ce8 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400ce8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400cec:	4604      	mov	r4, r0
  400cee:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400cf0:	4b0e      	ldr	r3, [pc, #56]	; (400d2c <pio_handler_process+0x44>)
  400cf2:	4798      	blx	r3
  400cf4:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400cf6:	4620      	mov	r0, r4
  400cf8:	4b0d      	ldr	r3, [pc, #52]	; (400d30 <pio_handler_process+0x48>)
  400cfa:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400cfc:	4005      	ands	r5, r0
  400cfe:	d013      	beq.n	400d28 <pio_handler_process+0x40>
  400d00:	4c0c      	ldr	r4, [pc, #48]	; (400d34 <pio_handler_process+0x4c>)
  400d02:	f104 0660 	add.w	r6, r4, #96	; 0x60
  400d06:	e003      	b.n	400d10 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  400d08:	42b4      	cmp	r4, r6
  400d0a:	d00d      	beq.n	400d28 <pio_handler_process+0x40>
  400d0c:	3410      	adds	r4, #16
		while (status != 0) {
  400d0e:	b15d      	cbz	r5, 400d28 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400d10:	6820      	ldr	r0, [r4, #0]
  400d12:	4540      	cmp	r0, r8
  400d14:	d1f8      	bne.n	400d08 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400d16:	6861      	ldr	r1, [r4, #4]
  400d18:	4229      	tst	r1, r5
  400d1a:	d0f5      	beq.n	400d08 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400d1c:	68e3      	ldr	r3, [r4, #12]
  400d1e:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400d20:	6863      	ldr	r3, [r4, #4]
  400d22:	ea25 0503 	bic.w	r5, r5, r3
  400d26:	e7ef      	b.n	400d08 <pio_handler_process+0x20>
  400d28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400d2c:	00400cdf 	.word	0x00400cdf
  400d30:	00400ce3 	.word	0x00400ce3
  400d34:	20400bf4 	.word	0x20400bf4

00400d38 <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  400d38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  400d3a:	4c18      	ldr	r4, [pc, #96]	; (400d9c <pio_handler_set+0x64>)
  400d3c:	6826      	ldr	r6, [r4, #0]
  400d3e:	2e06      	cmp	r6, #6
  400d40:	d82a      	bhi.n	400d98 <pio_handler_set+0x60>
  400d42:	f04f 0c00 	mov.w	ip, #0
  400d46:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400d48:	4f15      	ldr	r7, [pc, #84]	; (400da0 <pio_handler_set+0x68>)
  400d4a:	e004      	b.n	400d56 <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  400d4c:	3401      	adds	r4, #1
  400d4e:	b2e4      	uxtb	r4, r4
  400d50:	46a4      	mov	ip, r4
  400d52:	42a6      	cmp	r6, r4
  400d54:	d309      	bcc.n	400d6a <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
  400d56:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400d58:	0125      	lsls	r5, r4, #4
  400d5a:	597d      	ldr	r5, [r7, r5]
  400d5c:	428d      	cmp	r5, r1
  400d5e:	d1f5      	bne.n	400d4c <pio_handler_set+0x14>
  400d60:	eb07 1504 	add.w	r5, r7, r4, lsl #4
  400d64:	686d      	ldr	r5, [r5, #4]
  400d66:	4295      	cmp	r5, r2
  400d68:	d1f0      	bne.n	400d4c <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  400d6a:	4d0d      	ldr	r5, [pc, #52]	; (400da0 <pio_handler_set+0x68>)
  400d6c:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
  400d70:	eb05 040e 	add.w	r4, r5, lr
  400d74:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
  400d78:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
  400d7a:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
  400d7c:	9906      	ldr	r1, [sp, #24]
  400d7e:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
  400d80:	3601      	adds	r6, #1
  400d82:	4566      	cmp	r6, ip
  400d84:	d005      	beq.n	400d92 <pio_handler_set+0x5a>
  400d86:	4611      	mov	r1, r2
		gs_ul_nb_sources++;
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  400d88:	461a      	mov	r2, r3
  400d8a:	4b06      	ldr	r3, [pc, #24]	; (400da4 <pio_handler_set+0x6c>)
  400d8c:	4798      	blx	r3

	return 0;
  400d8e:	2000      	movs	r0, #0
  400d90:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		gs_ul_nb_sources++;
  400d92:	4902      	ldr	r1, [pc, #8]	; (400d9c <pio_handler_set+0x64>)
  400d94:	600e      	str	r6, [r1, #0]
  400d96:	e7f6      	b.n	400d86 <pio_handler_set+0x4e>
		return 1;
  400d98:	2001      	movs	r0, #1
}
  400d9a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400d9c:	20400c64 	.word	0x20400c64
  400da0:	20400bf4 	.word	0x20400bf4
  400da4:	00400ca9 	.word	0x00400ca9

00400da8 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400da8:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400daa:	210a      	movs	r1, #10
  400dac:	4801      	ldr	r0, [pc, #4]	; (400db4 <PIOA_Handler+0xc>)
  400dae:	4b02      	ldr	r3, [pc, #8]	; (400db8 <PIOA_Handler+0x10>)
  400db0:	4798      	blx	r3
  400db2:	bd08      	pop	{r3, pc}
  400db4:	400e0e00 	.word	0x400e0e00
  400db8:	00400ce9 	.word	0x00400ce9

00400dbc <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400dbc:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400dbe:	210b      	movs	r1, #11
  400dc0:	4801      	ldr	r0, [pc, #4]	; (400dc8 <PIOB_Handler+0xc>)
  400dc2:	4b02      	ldr	r3, [pc, #8]	; (400dcc <PIOB_Handler+0x10>)
  400dc4:	4798      	blx	r3
  400dc6:	bd08      	pop	{r3, pc}
  400dc8:	400e1000 	.word	0x400e1000
  400dcc:	00400ce9 	.word	0x00400ce9

00400dd0 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  400dd0:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  400dd2:	210c      	movs	r1, #12
  400dd4:	4801      	ldr	r0, [pc, #4]	; (400ddc <PIOC_Handler+0xc>)
  400dd6:	4b02      	ldr	r3, [pc, #8]	; (400de0 <PIOC_Handler+0x10>)
  400dd8:	4798      	blx	r3
  400dda:	bd08      	pop	{r3, pc}
  400ddc:	400e1200 	.word	0x400e1200
  400de0:	00400ce9 	.word	0x00400ce9

00400de4 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
  400de4:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
  400de6:	2110      	movs	r1, #16
  400de8:	4801      	ldr	r0, [pc, #4]	; (400df0 <PIOD_Handler+0xc>)
  400dea:	4b02      	ldr	r3, [pc, #8]	; (400df4 <PIOD_Handler+0x10>)
  400dec:	4798      	blx	r3
  400dee:	bd08      	pop	{r3, pc}
  400df0:	400e1400 	.word	0x400e1400
  400df4:	00400ce9 	.word	0x00400ce9

00400df8 <PIOE_Handler>:
/**
 * \brief Parallel IO Controller E interrupt handler.
 * Redefined PIOE interrupt handler for NVIC interrupt table.
 */
void PIOE_Handler(void)
{
  400df8:	b508      	push	{r3, lr}
	pio_handler_process(PIOE, ID_PIOE);
  400dfa:	2111      	movs	r1, #17
  400dfc:	4801      	ldr	r0, [pc, #4]	; (400e04 <PIOE_Handler+0xc>)
  400dfe:	4b02      	ldr	r3, [pc, #8]	; (400e08 <PIOE_Handler+0x10>)
  400e00:	4798      	blx	r3
  400e02:	bd08      	pop	{r3, pc}
  400e04:	400e1600 	.word	0x400e1600
  400e08:	00400ce9 	.word	0x00400ce9

00400e0c <pmc_mck_set_division>:
 *
 * \param ul_div Division value.
 */
void pmc_mck_set_division(uint32_t ul_div)
{
	switch (ul_div) {
  400e0c:	2803      	cmp	r0, #3
  400e0e:	d011      	beq.n	400e34 <pmc_mck_set_division+0x28>
  400e10:	2804      	cmp	r0, #4
  400e12:	d012      	beq.n	400e3a <pmc_mck_set_division+0x2e>
		case 1:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
  400e14:	2802      	cmp	r0, #2
  400e16:	bf0c      	ite	eq
  400e18:	f44f 7180 	moveq.w	r1, #256	; 0x100
  400e1c:	2100      	movne	r1, #0
		default:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
			break;
	}
	PMC->PMC_MCKR =
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  400e1e:	4a08      	ldr	r2, [pc, #32]	; (400e40 <pmc_mck_set_division+0x34>)
  400e20:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400e22:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  400e26:	430b      	orrs	r3, r1
	PMC->PMC_MCKR =
  400e28:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  400e2a:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400e2c:	f013 0f08 	tst.w	r3, #8
  400e30:	d0fb      	beq.n	400e2a <pmc_mck_set_division+0x1e>
}
  400e32:	4770      	bx	lr
			ul_div = PMC_MCKR_MDIV_PCK_DIV3;
  400e34:	f44f 7140 	mov.w	r1, #768	; 0x300
			break;
  400e38:	e7f1      	b.n	400e1e <pmc_mck_set_division+0x12>
			ul_div = PMC_MCKR_MDIV_PCK_DIV4;
  400e3a:	f44f 7100 	mov.w	r1, #512	; 0x200
			break;
  400e3e:	e7ee      	b.n	400e1e <pmc_mck_set_division+0x12>
  400e40:	400e0600 	.word	0x400e0600

00400e44 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400e44:	4a17      	ldr	r2, [pc, #92]	; (400ea4 <pmc_switch_mck_to_pllack+0x60>)
  400e46:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400e48:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400e4c:	4318      	orrs	r0, r3
  400e4e:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400e50:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400e52:	f013 0f08 	tst.w	r3, #8
  400e56:	d10a      	bne.n	400e6e <pmc_switch_mck_to_pllack+0x2a>
  400e58:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  400e5c:	4911      	ldr	r1, [pc, #68]	; (400ea4 <pmc_switch_mck_to_pllack+0x60>)
  400e5e:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400e60:	f012 0f08 	tst.w	r2, #8
  400e64:	d103      	bne.n	400e6e <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400e66:	3b01      	subs	r3, #1
  400e68:	d1f9      	bne.n	400e5e <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  400e6a:	2001      	movs	r0, #1
  400e6c:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400e6e:	4a0d      	ldr	r2, [pc, #52]	; (400ea4 <pmc_switch_mck_to_pllack+0x60>)
  400e70:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400e72:	f023 0303 	bic.w	r3, r3, #3
  400e76:	f043 0302 	orr.w	r3, r3, #2
  400e7a:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400e7c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400e7e:	f013 0f08 	tst.w	r3, #8
  400e82:	d10a      	bne.n	400e9a <pmc_switch_mck_to_pllack+0x56>
  400e84:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  400e88:	4906      	ldr	r1, [pc, #24]	; (400ea4 <pmc_switch_mck_to_pllack+0x60>)
  400e8a:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400e8c:	f012 0f08 	tst.w	r2, #8
  400e90:	d105      	bne.n	400e9e <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400e92:	3b01      	subs	r3, #1
  400e94:	d1f9      	bne.n	400e8a <pmc_switch_mck_to_pllack+0x46>
			return 1;
  400e96:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  400e98:	4770      	bx	lr
	return 0;
  400e9a:	2000      	movs	r0, #0
  400e9c:	4770      	bx	lr
  400e9e:	2000      	movs	r0, #0
  400ea0:	4770      	bx	lr
  400ea2:	bf00      	nop
  400ea4:	400e0600 	.word	0x400e0600

00400ea8 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  400ea8:	b9a0      	cbnz	r0, 400ed4 <pmc_switch_mainck_to_xtal+0x2c>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400eaa:	480e      	ldr	r0, [pc, #56]	; (400ee4 <pmc_switch_mainck_to_xtal+0x3c>)
  400eac:	6a03      	ldr	r3, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  400eae:	0209      	lsls	r1, r1, #8
  400eb0:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  400eb2:	4a0d      	ldr	r2, [pc, #52]	; (400ee8 <pmc_switch_mainck_to_xtal+0x40>)
  400eb4:	401a      	ands	r2, r3
  400eb6:	4b0d      	ldr	r3, [pc, #52]	; (400eec <pmc_switch_mainck_to_xtal+0x44>)
  400eb8:	4313      	orrs	r3, r2
  400eba:	4319      	orrs	r1, r3
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400ebc:	6201      	str	r1, [r0, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  400ebe:	4602      	mov	r2, r0
  400ec0:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400ec2:	f013 0f01 	tst.w	r3, #1
  400ec6:	d0fb      	beq.n	400ec0 <pmc_switch_mainck_to_xtal+0x18>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  400ec8:	4a06      	ldr	r2, [pc, #24]	; (400ee4 <pmc_switch_mainck_to_xtal+0x3c>)
  400eca:	6a11      	ldr	r1, [r2, #32]
  400ecc:	4b08      	ldr	r3, [pc, #32]	; (400ef0 <pmc_switch_mainck_to_xtal+0x48>)
  400ece:	430b      	orrs	r3, r1
  400ed0:	6213      	str	r3, [r2, #32]
  400ed2:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400ed4:	4903      	ldr	r1, [pc, #12]	; (400ee4 <pmc_switch_mainck_to_xtal+0x3c>)
  400ed6:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  400ed8:	4a06      	ldr	r2, [pc, #24]	; (400ef4 <pmc_switch_mainck_to_xtal+0x4c>)
  400eda:	401a      	ands	r2, r3
  400edc:	4b06      	ldr	r3, [pc, #24]	; (400ef8 <pmc_switch_mainck_to_xtal+0x50>)
  400ede:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400ee0:	620b      	str	r3, [r1, #32]
  400ee2:	4770      	bx	lr
  400ee4:	400e0600 	.word	0x400e0600
  400ee8:	ffc8fffc 	.word	0xffc8fffc
  400eec:	00370001 	.word	0x00370001
  400ef0:	01370000 	.word	0x01370000
  400ef4:	fec8fffc 	.word	0xfec8fffc
  400ef8:	01370002 	.word	0x01370002

00400efc <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  400efc:	4b02      	ldr	r3, [pc, #8]	; (400f08 <pmc_osc_is_ready_mainck+0xc>)
  400efe:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400f00:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  400f04:	4770      	bx	lr
  400f06:	bf00      	nop
  400f08:	400e0600 	.word	0x400e0600

00400f0c <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  400f0c:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  400f10:	4b01      	ldr	r3, [pc, #4]	; (400f18 <pmc_disable_pllack+0xc>)
  400f12:	629a      	str	r2, [r3, #40]	; 0x28
  400f14:	4770      	bx	lr
  400f16:	bf00      	nop
  400f18:	400e0600 	.word	0x400e0600

00400f1c <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400f1c:	4b02      	ldr	r3, [pc, #8]	; (400f28 <pmc_is_locked_pllack+0xc>)
  400f1e:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400f20:	f000 0002 	and.w	r0, r0, #2
  400f24:	4770      	bx	lr
  400f26:	bf00      	nop
  400f28:	400e0600 	.word	0x400e0600

00400f2c <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  400f2c:	283f      	cmp	r0, #63	; 0x3f
  400f2e:	d81e      	bhi.n	400f6e <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  400f30:	281f      	cmp	r0, #31
  400f32:	d80c      	bhi.n	400f4e <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  400f34:	4b11      	ldr	r3, [pc, #68]	; (400f7c <pmc_enable_periph_clk+0x50>)
  400f36:	699a      	ldr	r2, [r3, #24]
  400f38:	2301      	movs	r3, #1
  400f3a:	4083      	lsls	r3, r0
  400f3c:	4393      	bics	r3, r2
  400f3e:	d018      	beq.n	400f72 <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  400f40:	2301      	movs	r3, #1
  400f42:	fa03 f000 	lsl.w	r0, r3, r0
  400f46:	4b0d      	ldr	r3, [pc, #52]	; (400f7c <pmc_enable_periph_clk+0x50>)
  400f48:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  400f4a:	2000      	movs	r0, #0
  400f4c:	4770      	bx	lr
		ul_id -= 32;
  400f4e:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  400f50:	4b0a      	ldr	r3, [pc, #40]	; (400f7c <pmc_enable_periph_clk+0x50>)
  400f52:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  400f56:	2301      	movs	r3, #1
  400f58:	4083      	lsls	r3, r0
  400f5a:	4393      	bics	r3, r2
  400f5c:	d00b      	beq.n	400f76 <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  400f5e:	2301      	movs	r3, #1
  400f60:	fa03 f000 	lsl.w	r0, r3, r0
  400f64:	4b05      	ldr	r3, [pc, #20]	; (400f7c <pmc_enable_periph_clk+0x50>)
  400f66:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  400f6a:	2000      	movs	r0, #0
  400f6c:	4770      	bx	lr
		return 1;
  400f6e:	2001      	movs	r0, #1
  400f70:	4770      	bx	lr
	return 0;
  400f72:	2000      	movs	r0, #0
  400f74:	4770      	bx	lr
  400f76:	2000      	movs	r0, #0
}
  400f78:	4770      	bx	lr
  400f7a:	bf00      	nop
  400f7c:	400e0600 	.word	0x400e0600

00400f80 <pmc_set_flash_in_wait_mode>:
 *
 * \param ul_flash_state PMC_WAIT_MODE_FLASH_STANDBY flash in standby mode,
 * PMC_WAIT_MODE_FLASH_DEEP_POWERDOWN flash in deep power down mode.
 */
void pmc_set_flash_in_wait_mode(uint32_t ul_flash_state)
{
  400f80:	4770      	bx	lr
	...

00400f84 <pmc_enable_waitmode>:
void pmc_enable_waitmode(void)
{
	uint32_t i;

	/* Flash in wait mode */
	i = PMC->PMC_FSMR;
  400f84:	4a10      	ldr	r2, [pc, #64]	; (400fc8 <pmc_enable_waitmode+0x44>)
  400f86:	6f13      	ldr	r3, [r2, #112]	; 0x70
	i &= ~PMC_FSMR_FLPM_Msk;
  400f88:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
#if !(SAMV71 || SAMV70 || SAME70 || SAMS70)
	i |= ul_flash_in_wait_mode;
#else
	i |= PMC_WAIT_MODE_FLASH_IDLE;
  400f8c:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
#endif
	PMC->PMC_FSMR = i;
  400f90:	6713      	str	r3, [r2, #112]	; 0x70

	/* Set the WAITMODE bit = 1 */
	PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_WAITMODE;
  400f92:	6a11      	ldr	r1, [r2, #32]
  400f94:	4b0d      	ldr	r3, [pc, #52]	; (400fcc <pmc_enable_waitmode+0x48>)
  400f96:	430b      	orrs	r3, r1
  400f98:	6213      	str	r3, [r2, #32]

	/* Waiting for Master Clock Ready MCKRDY = 1 */
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  400f9a:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400f9c:	f013 0f08 	tst.w	r3, #8
  400fa0:	d0fb      	beq.n	400f9a <pmc_enable_waitmode+0x16>
  400fa2:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
  __ASM volatile ("nop");
  400fa6:	bf00      	nop

	/* Waiting for MOSCRCEN bit cleared is strongly recommended
	 * to ensure that the core will not execute undesired instructions
	 */
	for (i = 0; i < 500; i++) {
  400fa8:	3b01      	subs	r3, #1
  400faa:	d1fc      	bne.n	400fa6 <pmc_enable_waitmode+0x22>
		__NOP();
	}
	while (!(PMC->CKGR_MOR & CKGR_MOR_MOSCRCEN));
  400fac:	4a06      	ldr	r2, [pc, #24]	; (400fc8 <pmc_enable_waitmode+0x44>)
  400fae:	6a13      	ldr	r3, [r2, #32]
  400fb0:	f013 0f08 	tst.w	r3, #8
  400fb4:	d0fb      	beq.n	400fae <pmc_enable_waitmode+0x2a>

#if (!SAMG)
	/* Restore Flash in idle mode */
	i = PMC->PMC_FSMR;
  400fb6:	4a04      	ldr	r2, [pc, #16]	; (400fc8 <pmc_enable_waitmode+0x44>)
  400fb8:	6f13      	ldr	r3, [r2, #112]	; 0x70
	i &= ~PMC_FSMR_FLPM_Msk;
  400fba:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
	i |= PMC_WAIT_MODE_FLASH_IDLE;
  400fbe:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
	PMC->PMC_FSMR = i;
  400fc2:	6713      	str	r3, [r2, #112]	; 0x70
  400fc4:	4770      	bx	lr
  400fc6:	bf00      	nop
  400fc8:	400e0600 	.word	0x400e0600
  400fcc:	00370004 	.word	0x00370004

00400fd0 <pmc_sleep>:
static volatile bool b_is_sleep_clock_used = false;
/** Callback invoked once when clocks are restored */
static pmc_callback_wakeup_clocks_restored_t callback_clocks_restored = NULL;

void pmc_sleep(int sleep_mode)
{
  400fd0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	switch (sleep_mode) {
  400fd4:	1e43      	subs	r3, r0, #1
  400fd6:	2b04      	cmp	r3, #4
  400fd8:	f200 8107 	bhi.w	4011ea <pmc_sleep+0x21a>
  400fdc:	e8df f013 	tbh	[pc, r3, lsl #1]
  400fe0:	00050005 	.word	0x00050005
  400fe4:	00150015 	.word	0x00150015
  400fe8:	00f6      	.short	0x00f6
	case SAM_PM_SMODE_SLEEP_WFI:
	case SAM_PM_SMODE_SLEEP_WFE:
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG || SAMV71 || SAMV70 || SAMS70 || SAME70)
		SCB->SCR &= (uint32_t)~SCR_SLEEPDEEP;
  400fea:	4a81      	ldr	r2, [pc, #516]	; (4011f0 <pmc_sleep+0x220>)
  400fec:	6913      	ldr	r3, [r2, #16]
  400fee:	f023 0304 	bic.w	r3, r3, #4
  400ff2:	6113      	str	r3, [r2, #16]
		cpu_irq_enable();
  400ff4:	2201      	movs	r2, #1
  400ff6:	4b7f      	ldr	r3, [pc, #508]	; (4011f4 <pmc_sleep+0x224>)
  400ff8:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  400ffa:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
  400ffe:	b662      	cpsie	i
  __ASM volatile ("dsb");
  401000:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("wfi");
  401004:	bf30      	wfi
  401006:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40100a:	4604      	mov	r4, r0
#if defined(EFC1)
		uint32_t fmr1;
#endif
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG || SAMV71 || SAMV70 || SAMS70 || SAME70)
		(sleep_mode == SAM_PM_SMODE_WAIT_FAST) ?
				pmc_set_flash_in_wait_mode(PMC_FSMR_FLPM_FLASH_STANDBY) :
  40100c:	2803      	cmp	r0, #3
  40100e:	bf0c      	ite	eq
  401010:	2000      	moveq	r0, #0
				pmc_set_flash_in_wait_mode(PMC_FSMR_FLPM_FLASH_DEEP_POWERDOWN);
  401012:	f44f 1000 	movne.w	r0, #2097152	; 0x200000
  401016:	4b78      	ldr	r3, [pc, #480]	; (4011f8 <pmc_sleep+0x228>)
  401018:	4798      	blx	r3
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
  40101a:	b672      	cpsid	i
  __ASM volatile ("dmb");
  40101c:	f3bf 8f5f 	dmb	sy
#endif
		cpu_irq_disable();
  401020:	2200      	movs	r2, #0
  401022:	4b74      	ldr	r3, [pc, #464]	; (4011f4 <pmc_sleep+0x224>)
  401024:	701a      	strb	r2, [r3, #0]
		b_is_sleep_clock_used = true;
  401026:	2201      	movs	r2, #1
  401028:	4b74      	ldr	r3, [pc, #464]	; (4011fc <pmc_sleep+0x22c>)
  40102a:	701a      	strb	r2, [r3, #0]
	uint32_t mor  = PMC->CKGR_MOR;
  40102c:	4b74      	ldr	r3, [pc, #464]	; (401200 <pmc_sleep+0x230>)
  40102e:	6a1f      	ldr	r7, [r3, #32]
	uint32_t mckr = PMC->PMC_MCKR;
  401030:	6b1d      	ldr	r5, [r3, #48]	; 0x30
	uint32_t fmr  = EFC0->EEFC_FMR;
  401032:	4a74      	ldr	r2, [pc, #464]	; (401204 <pmc_sleep+0x234>)
  401034:	f8d2 8000 	ldr.w	r8, [r2]
		*p_pll0_setting = PMC->CKGR_PLLAR;
  401038:	6a9e      	ldr	r6, [r3, #40]	; 0x28
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor | CKGR_MOR_MOSCRCEN;
  40103a:	4a73      	ldr	r2, [pc, #460]	; (401208 <pmc_sleep+0x238>)
  40103c:	433a      	orrs	r2, r7
  40103e:	621a      	str	r2, [r3, #32]
	if ((mckr & PMC_MCKR_CSS_Msk) > PMC_MCKR_CSS_MAIN_CLK) {
  401040:	f005 0903 	and.w	r9, r5, #3
  401044:	f1b9 0f01 	cmp.w	r9, #1
  401048:	f240 8089 	bls.w	40115e <pmc_sleep+0x18e>
		mckr = (mckr & (~PMC_MCKR_CSS_Msk)) | PMC_MCKR_CSS_MAIN_CLK;
  40104c:	f025 0103 	bic.w	r1, r5, #3
  401050:	f041 0101 	orr.w	r1, r1, #1
		PMC->PMC_MCKR = mckr;
  401054:	6319      	str	r1, [r3, #48]	; 0x30
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
  401056:	461a      	mov	r2, r3
  401058:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40105a:	f013 0f08 	tst.w	r3, #8
  40105e:	d0fb      	beq.n	401058 <pmc_sleep+0x88>
	if (mckr & PMC_MCKR_PRES_Msk) {
  401060:	f011 0f70 	tst.w	r1, #112	; 0x70
  401064:	d008      	beq.n	401078 <pmc_sleep+0xa8>
		mckr = (mckr & (~PMC_MCKR_PRES_Msk));
  401066:	f021 0170 	bic.w	r1, r1, #112	; 0x70
		PMC->PMC_MCKR = mckr;
  40106a:	4b65      	ldr	r3, [pc, #404]	; (401200 <pmc_sleep+0x230>)
  40106c:	6319      	str	r1, [r3, #48]	; 0x30
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
  40106e:	461a      	mov	r2, r3
  401070:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401072:	f013 0f08 	tst.w	r3, #8
  401076:	d0fb      	beq.n	401070 <pmc_sleep+0xa0>
	pmc_disable_pllack();
  401078:	4b64      	ldr	r3, [pc, #400]	; (40120c <pmc_sleep+0x23c>)
  40107a:	4798      	blx	r3
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  40107c:	4a60      	ldr	r2, [pc, #384]	; (401200 <pmc_sleep+0x230>)
  40107e:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401080:	f413 3f00 	tst.w	r3, #131072	; 0x20000
  401084:	d0fb      	beq.n	40107e <pmc_sleep+0xae>
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCSEL) |
  401086:	4a5e      	ldr	r2, [pc, #376]	; (401200 <pmc_sleep+0x230>)
  401088:	6a11      	ldr	r1, [r2, #32]
  40108a:	4b61      	ldr	r3, [pc, #388]	; (401210 <pmc_sleep+0x240>)
  40108c:	400b      	ands	r3, r1
  40108e:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  401092:	6213      	str	r3, [r2, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
  401094:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401096:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  40109a:	d0fb      	beq.n	401094 <pmc_sleep+0xc4>
	EFC0->EEFC_FMR = fmr & (~EEFC_FMR_FWS_Msk);
  40109c:	f428 6370 	bic.w	r3, r8, #3840	; 0xf00
  4010a0:	4a58      	ldr	r2, [pc, #352]	; (401204 <pmc_sleep+0x234>)
  4010a2:	6013      	str	r3, [r2, #0]
	if (disable_xtal) {
  4010a4:	2c04      	cmp	r4, #4
  4010a6:	d05c      	beq.n	401162 <pmc_sleep+0x192>
				&fmr1,
#endif
				(sleep_mode == SAM_PM_SMODE_WAIT));

		/* Enter wait mode */
		cpu_irq_enable();
  4010a8:	4c52      	ldr	r4, [pc, #328]	; (4011f4 <pmc_sleep+0x224>)
  4010aa:	2301      	movs	r3, #1
  4010ac:	7023      	strb	r3, [r4, #0]
  4010ae:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4010b2:	b662      	cpsie	i

		pmc_enable_waitmode();
  4010b4:	4b57      	ldr	r3, [pc, #348]	; (401214 <pmc_sleep+0x244>)
  4010b6:	4798      	blx	r3
  __ASM volatile ("cpsid i" : : : "memory");
  4010b8:	b672      	cpsid	i
  4010ba:	f3bf 8f5f 	dmb	sy

		cpu_irq_disable();
  4010be:	2300      	movs	r3, #0
  4010c0:	7023      	strb	r3, [r4, #0]
	if (CKGR_MOR_MOSCXTBY == (osc_setting & CKGR_MOR_MOSCXTBY)) {
  4010c2:	f017 0f02 	tst.w	r7, #2
  4010c6:	d055      	beq.n	401174 <pmc_sleep+0x1a4>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4010c8:	4a4d      	ldr	r2, [pc, #308]	; (401200 <pmc_sleep+0x230>)
  4010ca:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  4010cc:	4952      	ldr	r1, [pc, #328]	; (401218 <pmc_sleep+0x248>)
  4010ce:	4019      	ands	r1, r3
  4010d0:	4b52      	ldr	r3, [pc, #328]	; (40121c <pmc_sleep+0x24c>)
  4010d2:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4010d4:	6213      	str	r3, [r2, #32]
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  4010d6:	6a11      	ldr	r1, [r2, #32]
				| CKGR_MOR_KEY_PASSWD;
  4010d8:	4b51      	ldr	r3, [pc, #324]	; (401220 <pmc_sleep+0x250>)
  4010da:	400b      	ands	r3, r1
  4010dc:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  4010e0:	6213      	str	r3, [r2, #32]
	if (pll0_setting & CKGR_PLLAR_MULA_Msk) {
  4010e2:	4b50      	ldr	r3, [pc, #320]	; (401224 <pmc_sleep+0x254>)
  4010e4:	4033      	ands	r3, r6
  4010e6:	2b00      	cmp	r3, #0
  4010e8:	d06e      	beq.n	4011c8 <pmc_sleep+0x1f8>
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | pll0_setting;
  4010ea:	f046 5600 	orr.w	r6, r6, #536870912	; 0x20000000
  4010ee:	4b44      	ldr	r3, [pc, #272]	; (401200 <pmc_sleep+0x230>)
  4010f0:	629e      	str	r6, [r3, #40]	; 0x28
		pll_sr |= PMC_SR_LOCKA;
  4010f2:	2102      	movs	r1, #2
	switch(mck_setting & PMC_MCKR_CSS_Msk) {
  4010f4:	f1b9 0f02 	cmp.w	r9, #2
  4010f8:	d104      	bne.n	401104 <pmc_sleep+0x134>
		while (!(PMC->PMC_SR & PMC_SR_LOCKA));
  4010fa:	4a41      	ldr	r2, [pc, #260]	; (401200 <pmc_sleep+0x230>)
  4010fc:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4010fe:	f013 0f02 	tst.w	r3, #2
  401102:	d0fb      	beq.n	4010fc <pmc_sleep+0x12c>
	mckr = PMC->PMC_MCKR;
  401104:	4a3e      	ldr	r2, [pc, #248]	; (401200 <pmc_sleep+0x230>)
  401106:	6b13      	ldr	r3, [r2, #48]	; 0x30
	PMC->PMC_MCKR = (mckr & ~PMC_MCKR_PRES_Msk)
  401108:	f023 0370 	bic.w	r3, r3, #112	; 0x70
		| (mck_setting & PMC_MCKR_PRES_Msk);
  40110c:	f005 0070 	and.w	r0, r5, #112	; 0x70
  401110:	4303      	orrs	r3, r0
	PMC->PMC_MCKR = (mckr & ~PMC_MCKR_PRES_Msk)
  401112:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  401114:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401116:	f013 0f08 	tst.w	r3, #8
  40111a:	d0fb      	beq.n	401114 <pmc_sleep+0x144>
	EFC0->EEFC_FMR = fmr_setting;
  40111c:	4b39      	ldr	r3, [pc, #228]	; (401204 <pmc_sleep+0x234>)
  40111e:	f8c3 8000 	str.w	r8, [r3]
	PMC->PMC_MCKR = mck_setting;
  401122:	f5a3 63c0 	sub.w	r3, r3, #1536	; 0x600
  401126:	631d      	str	r5, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  401128:	461a      	mov	r2, r3
  40112a:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40112c:	f013 0f08 	tst.w	r3, #8
  401130:	d0fb      	beq.n	40112a <pmc_sleep+0x15a>
	while (!(PMC->PMC_SR & pll_sr));
  401132:	4a33      	ldr	r2, [pc, #204]	; (401200 <pmc_sleep+0x230>)
  401134:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401136:	420b      	tst	r3, r1
  401138:	d0fc      	beq.n	401134 <pmc_sleep+0x164>

#if (SAM4C || SAM4CM || SAM4CP)
		/* Restore the sub-system 1 */
		PMC->PMC_SCER = cpclk_backup | PMC_SCER_CPKEY_PASSWD;
#endif
		b_is_sleep_clock_used = false;
  40113a:	2200      	movs	r2, #0
  40113c:	4b2f      	ldr	r3, [pc, #188]	; (4011fc <pmc_sleep+0x22c>)
  40113e:	701a      	strb	r2, [r3, #0]
		if (callback_clocks_restored) {
  401140:	4b39      	ldr	r3, [pc, #228]	; (401228 <pmc_sleep+0x258>)
  401142:	681b      	ldr	r3, [r3, #0]
  401144:	b11b      	cbz	r3, 40114e <pmc_sleep+0x17e>
			callback_clocks_restored();
  401146:	4798      	blx	r3
			callback_clocks_restored = NULL;
  401148:	2200      	movs	r2, #0
  40114a:	4b37      	ldr	r3, [pc, #220]	; (401228 <pmc_sleep+0x258>)
  40114c:	601a      	str	r2, [r3, #0]
		}
		cpu_irq_enable();
  40114e:	2201      	movs	r2, #1
  401150:	4b28      	ldr	r3, [pc, #160]	; (4011f4 <pmc_sleep+0x224>)
  401152:	701a      	strb	r2, [r3, #0]
  401154:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401158:	b662      	cpsie	i
  40115a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	uint32_t mckr = PMC->PMC_MCKR;
  40115e:	4629      	mov	r1, r5
  401160:	e77e      	b.n	401060 <pmc_sleep+0x90>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401162:	f5a2 62c0 	sub.w	r2, r2, #1536	; 0x600
  401166:	6a11      	ldr	r1, [r2, #32]
  401168:	4b30      	ldr	r3, [pc, #192]	; (40122c <pmc_sleep+0x25c>)
  40116a:	400b      	ands	r3, r1
  40116c:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  401170:	6213      	str	r3, [r2, #32]
  401172:	e799      	b.n	4010a8 <pmc_sleep+0xd8>
	} else if (CKGR_MOR_MOSCXTEN == (osc_setting & CKGR_MOR_MOSCXTEN)) {
  401174:	f017 0f01 	tst.w	r7, #1
  401178:	d0b3      	beq.n	4010e2 <pmc_sleep+0x112>
		if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCXTEN)) {
  40117a:	4b21      	ldr	r3, [pc, #132]	; (401200 <pmc_sleep+0x230>)
  40117c:	6a1b      	ldr	r3, [r3, #32]
  40117e:	f013 0f01 	tst.w	r3, #1
  401182:	d10b      	bne.n	40119c <pmc_sleep+0x1cc>
			PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  401184:	491e      	ldr	r1, [pc, #120]	; (401200 <pmc_sleep+0x230>)
  401186:	6a0b      	ldr	r3, [r1, #32]
					CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN;
  401188:	4a29      	ldr	r2, [pc, #164]	; (401230 <pmc_sleep+0x260>)
  40118a:	401a      	ands	r2, r3
  40118c:	4b29      	ldr	r3, [pc, #164]	; (401234 <pmc_sleep+0x264>)
  40118e:	4313      	orrs	r3, r2
			PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  401190:	620b      	str	r3, [r1, #32]
			while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  401192:	460a      	mov	r2, r1
  401194:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401196:	f013 0f01 	tst.w	r3, #1
  40119a:	d0fb      	beq.n	401194 <pmc_sleep+0x1c4>
		if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
  40119c:	4b18      	ldr	r3, [pc, #96]	; (401200 <pmc_sleep+0x230>)
  40119e:	6a1b      	ldr	r3, [r3, #32]
  4011a0:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4011a4:	d108      	bne.n	4011b8 <pmc_sleep+0x1e8>
			PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  4011a6:	4a16      	ldr	r2, [pc, #88]	; (401200 <pmc_sleep+0x230>)
  4011a8:	6a11      	ldr	r1, [r2, #32]
  4011aa:	4b23      	ldr	r3, [pc, #140]	; (401238 <pmc_sleep+0x268>)
  4011ac:	430b      	orrs	r3, r1
  4011ae:	6213      	str	r3, [r2, #32]
			while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
  4011b0:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4011b2:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  4011b6:	d0fb      	beq.n	4011b0 <pmc_sleep+0x1e0>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  4011b8:	4a11      	ldr	r2, [pc, #68]	; (401200 <pmc_sleep+0x230>)
  4011ba:	6a11      	ldr	r1, [r2, #32]
					| CKGR_MOR_KEY_PASSWD;
  4011bc:	4b18      	ldr	r3, [pc, #96]	; (401220 <pmc_sleep+0x250>)
  4011be:	400b      	ands	r3, r1
  4011c0:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  4011c4:	6213      	str	r3, [r2, #32]
  4011c6:	e78c      	b.n	4010e2 <pmc_sleep+0x112>
	uint32_t pll_sr = 0;
  4011c8:	2100      	movs	r1, #0
  4011ca:	e793      	b.n	4010f4 <pmc_sleep+0x124>

		break;
	}
#if (!(SAMG51 || SAMG53 || SAMG54))
	case SAM_PM_SMODE_BACKUP:
		SCB->SCR |= SCR_SLEEPDEEP;
  4011cc:	4a08      	ldr	r2, [pc, #32]	; (4011f0 <pmc_sleep+0x220>)
  4011ce:	6913      	ldr	r3, [r2, #16]
  4011d0:	f043 0304 	orr.w	r3, r3, #4
  4011d4:	6113      	str	r3, [r2, #16]
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAMS70 || SAME70)
		SUPC->SUPC_CR = SUPC_CR_KEY_PASSWD | SUPC_CR_VROFF_STOP_VREG;
  4011d6:	4a19      	ldr	r2, [pc, #100]	; (40123c <pmc_sleep+0x26c>)
  4011d8:	4b19      	ldr	r3, [pc, #100]	; (401240 <pmc_sleep+0x270>)
  4011da:	601a      	str	r2, [r3, #0]
		cpu_irq_enable();
  4011dc:	2201      	movs	r2, #1
  4011de:	4b05      	ldr	r3, [pc, #20]	; (4011f4 <pmc_sleep+0x224>)
  4011e0:	701a      	strb	r2, [r3, #0]
  4011e2:	f3bf 8f5f 	dmb	sy
  4011e6:	b662      	cpsie	i
  __ASM volatile ("wfi");
  4011e8:	bf30      	wfi
  4011ea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4011ee:	bf00      	nop
  4011f0:	e000ed00 	.word	0xe000ed00
  4011f4:	20400018 	.word	0x20400018
  4011f8:	00400f81 	.word	0x00400f81
  4011fc:	20400c68 	.word	0x20400c68
  401200:	400e0600 	.word	0x400e0600
  401204:	400e0c00 	.word	0x400e0c00
  401208:	00370008 	.word	0x00370008
  40120c:	00400f0d 	.word	0x00400f0d
  401210:	fec8ffff 	.word	0xfec8ffff
  401214:	00400f85 	.word	0x00400f85
  401218:	fec8fffc 	.word	0xfec8fffc
  40121c:	01370002 	.word	0x01370002
  401220:	ffc8ff87 	.word	0xffc8ff87
  401224:	07ff0000 	.word	0x07ff0000
  401228:	20400c6c 	.word	0x20400c6c
  40122c:	ffc8fffe 	.word	0xffc8fffe
  401230:	ffc8fffc 	.word	0xffc8fffc
  401234:	00370001 	.word	0x00370001
  401238:	01370000 	.word	0x01370000
  40123c:	a5000004 	.word	0xa5000004
  401240:	400e1810 	.word	0x400e1810

00401244 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  401244:	e7fe      	b.n	401244 <Dummy_Handler>
	...

00401248 <Reset_Handler>:
{
  401248:	b500      	push	{lr}
  40124a:	b083      	sub	sp, #12
        if (pSrc != pDest) {
  40124c:	4b25      	ldr	r3, [pc, #148]	; (4012e4 <Reset_Handler+0x9c>)
  40124e:	4a26      	ldr	r2, [pc, #152]	; (4012e8 <Reset_Handler+0xa0>)
  401250:	429a      	cmp	r2, r3
  401252:	d010      	beq.n	401276 <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
  401254:	4b25      	ldr	r3, [pc, #148]	; (4012ec <Reset_Handler+0xa4>)
  401256:	4a23      	ldr	r2, [pc, #140]	; (4012e4 <Reset_Handler+0x9c>)
  401258:	429a      	cmp	r2, r3
  40125a:	d20c      	bcs.n	401276 <Reset_Handler+0x2e>
  40125c:	3b01      	subs	r3, #1
  40125e:	1a9b      	subs	r3, r3, r2
  401260:	f023 0303 	bic.w	r3, r3, #3
  401264:	3304      	adds	r3, #4
  401266:	4413      	add	r3, r2
  401268:	491f      	ldr	r1, [pc, #124]	; (4012e8 <Reset_Handler+0xa0>)
                        *pDest++ = *pSrc++;
  40126a:	f851 0b04 	ldr.w	r0, [r1], #4
  40126e:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  401272:	429a      	cmp	r2, r3
  401274:	d1f9      	bne.n	40126a <Reset_Handler+0x22>
        for (pDest = &_szero; pDest < &_ezero;) {
  401276:	4b1e      	ldr	r3, [pc, #120]	; (4012f0 <Reset_Handler+0xa8>)
  401278:	4a1e      	ldr	r2, [pc, #120]	; (4012f4 <Reset_Handler+0xac>)
  40127a:	429a      	cmp	r2, r3
  40127c:	d20a      	bcs.n	401294 <Reset_Handler+0x4c>
  40127e:	3b01      	subs	r3, #1
  401280:	1a9b      	subs	r3, r3, r2
  401282:	f023 0303 	bic.w	r3, r3, #3
  401286:	3304      	adds	r3, #4
  401288:	4413      	add	r3, r2
                *pDest++ = 0;
  40128a:	2100      	movs	r1, #0
  40128c:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  401290:	4293      	cmp	r3, r2
  401292:	d1fb      	bne.n	40128c <Reset_Handler+0x44>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  401294:	4a18      	ldr	r2, [pc, #96]	; (4012f8 <Reset_Handler+0xb0>)
  401296:	4b19      	ldr	r3, [pc, #100]	; (4012fc <Reset_Handler+0xb4>)
  401298:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  40129c:	6093      	str	r3, [r2, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  40129e:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  4012a2:	fab3 f383 	clz	r3, r3
  4012a6:	095b      	lsrs	r3, r3, #5
  4012a8:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  4012aa:	b672      	cpsid	i
  __ASM volatile ("dmb");
  4012ac:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  4012b0:	2200      	movs	r2, #0
  4012b2:	4b13      	ldr	r3, [pc, #76]	; (401300 <Reset_Handler+0xb8>)
  4012b4:	701a      	strb	r2, [r3, #0]
	return flags;
  4012b6:	9901      	ldr	r1, [sp, #4]
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  4012b8:	4a12      	ldr	r2, [pc, #72]	; (401304 <Reset_Handler+0xbc>)
  4012ba:	6813      	ldr	r3, [r2, #0]
  4012bc:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  4012c0:	6013      	str	r3, [r2, #0]
  __ASM volatile ("dsb");
  4012c2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  4012c6:	f3bf 8f6f 	isb	sy
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  4012ca:	b129      	cbz	r1, 4012d8 <Reset_Handler+0x90>
		cpu_irq_enable();
  4012cc:	2201      	movs	r2, #1
  4012ce:	4b0c      	ldr	r3, [pc, #48]	; (401300 <Reset_Handler+0xb8>)
  4012d0:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  4012d2:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4012d6:	b662      	cpsie	i
        __libc_init_array();
  4012d8:	4b0b      	ldr	r3, [pc, #44]	; (401308 <Reset_Handler+0xc0>)
  4012da:	4798      	blx	r3
        main();
  4012dc:	4b0b      	ldr	r3, [pc, #44]	; (40130c <Reset_Handler+0xc4>)
  4012de:	4798      	blx	r3
  4012e0:	e7fe      	b.n	4012e0 <Reset_Handler+0x98>
  4012e2:	bf00      	nop
  4012e4:	20400000 	.word	0x20400000
  4012e8:	00406e04 	.word	0x00406e04
  4012ec:	204009d0 	.word	0x204009d0
  4012f0:	20400d58 	.word	0x20400d58
  4012f4:	204009d0 	.word	0x204009d0
  4012f8:	e000ed00 	.word	0xe000ed00
  4012fc:	00400000 	.word	0x00400000
  401300:	20400018 	.word	0x20400018
  401304:	e000ed88 	.word	0xe000ed88
  401308:	00401f5d 	.word	0x00401f5d
  40130c:	00401611 	.word	0x00401611

00401310 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
  /* Determine clock frequency according to clock register values */
  switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk)
  401310:	4b3b      	ldr	r3, [pc, #236]	; (401400 <SystemCoreClockUpdate+0xf0>)
  401312:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401314:	f003 0303 	and.w	r3, r3, #3
  401318:	2b01      	cmp	r3, #1
  40131a:	d01d      	beq.n	401358 <SystemCoreClockUpdate+0x48>
  40131c:	b183      	cbz	r3, 401340 <SystemCoreClockUpdate+0x30>
  40131e:	2b02      	cmp	r3, #2
  401320:	d036      	beq.n	401390 <SystemCoreClockUpdate+0x80>

    default:
    break;
  }

  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  401322:	4b37      	ldr	r3, [pc, #220]	; (401400 <SystemCoreClockUpdate+0xf0>)
  401324:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401326:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40132a:	2b70      	cmp	r3, #112	; 0x70
  40132c:	d05f      	beq.n	4013ee <SystemCoreClockUpdate+0xde>
  {
    SystemCoreClock /= 3U;
  }
  else
  {
    SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  40132e:	4b34      	ldr	r3, [pc, #208]	; (401400 <SystemCoreClockUpdate+0xf0>)
  401330:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  401332:	4934      	ldr	r1, [pc, #208]	; (401404 <SystemCoreClockUpdate+0xf4>)
  401334:	f3c2 1202 	ubfx	r2, r2, #4, #3
  401338:	680b      	ldr	r3, [r1, #0]
  40133a:	40d3      	lsrs	r3, r2
  40133c:	600b      	str	r3, [r1, #0]
  40133e:	4770      	bx	lr
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  401340:	4b31      	ldr	r3, [pc, #196]	; (401408 <SystemCoreClockUpdate+0xf8>)
  401342:	695b      	ldr	r3, [r3, #20]
  401344:	f013 0f80 	tst.w	r3, #128	; 0x80
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  401348:	bf14      	ite	ne
  40134a:	f44f 4200 	movne.w	r2, #32768	; 0x8000
        SystemCoreClock = CHIP_FREQ_SLCK_RC;
  40134e:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  401352:	4b2c      	ldr	r3, [pc, #176]	; (401404 <SystemCoreClockUpdate+0xf4>)
  401354:	601a      	str	r2, [r3, #0]
  401356:	e7e4      	b.n	401322 <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  401358:	4b29      	ldr	r3, [pc, #164]	; (401400 <SystemCoreClockUpdate+0xf0>)
  40135a:	6a1b      	ldr	r3, [r3, #32]
  40135c:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401360:	d003      	beq.n	40136a <SystemCoreClockUpdate+0x5a>
        SystemCoreClock = CHIP_FREQ_XTAL_12M;
  401362:	4a2a      	ldr	r2, [pc, #168]	; (40140c <SystemCoreClockUpdate+0xfc>)
  401364:	4b27      	ldr	r3, [pc, #156]	; (401404 <SystemCoreClockUpdate+0xf4>)
  401366:	601a      	str	r2, [r3, #0]
  401368:	e7db      	b.n	401322 <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  40136a:	4a29      	ldr	r2, [pc, #164]	; (401410 <SystemCoreClockUpdate+0x100>)
  40136c:	4b25      	ldr	r3, [pc, #148]	; (401404 <SystemCoreClockUpdate+0xf4>)
  40136e:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  401370:	4b23      	ldr	r3, [pc, #140]	; (401400 <SystemCoreClockUpdate+0xf0>)
  401372:	6a1b      	ldr	r3, [r3, #32]
  401374:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401378:	2b10      	cmp	r3, #16
  40137a:	d005      	beq.n	401388 <SystemCoreClockUpdate+0x78>
  40137c:	2b20      	cmp	r3, #32
  40137e:	d1d0      	bne.n	401322 <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 3U;
  401380:	4a22      	ldr	r2, [pc, #136]	; (40140c <SystemCoreClockUpdate+0xfc>)
  401382:	4b20      	ldr	r3, [pc, #128]	; (401404 <SystemCoreClockUpdate+0xf4>)
  401384:	601a      	str	r2, [r3, #0]
          break;
  401386:	e7cc      	b.n	401322 <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 2U;
  401388:	4a22      	ldr	r2, [pc, #136]	; (401414 <SystemCoreClockUpdate+0x104>)
  40138a:	4b1e      	ldr	r3, [pc, #120]	; (401404 <SystemCoreClockUpdate+0xf4>)
  40138c:	601a      	str	r2, [r3, #0]
          break;
  40138e:	e7c8      	b.n	401322 <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  401390:	4b1b      	ldr	r3, [pc, #108]	; (401400 <SystemCoreClockUpdate+0xf0>)
  401392:	6a1b      	ldr	r3, [r3, #32]
  401394:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401398:	d016      	beq.n	4013c8 <SystemCoreClockUpdate+0xb8>
        SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  40139a:	4a1c      	ldr	r2, [pc, #112]	; (40140c <SystemCoreClockUpdate+0xfc>)
  40139c:	4b19      	ldr	r3, [pc, #100]	; (401404 <SystemCoreClockUpdate+0xf4>)
  40139e:	601a      	str	r2, [r3, #0]
      if ( (uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK )
  4013a0:	4b17      	ldr	r3, [pc, #92]	; (401400 <SystemCoreClockUpdate+0xf0>)
  4013a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4013a4:	f003 0303 	and.w	r3, r3, #3
  4013a8:	2b02      	cmp	r3, #2
  4013aa:	d1ba      	bne.n	401322 <SystemCoreClockUpdate+0x12>
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  4013ac:	4a14      	ldr	r2, [pc, #80]	; (401400 <SystemCoreClockUpdate+0xf0>)
  4013ae:	6a91      	ldr	r1, [r2, #40]	; 0x28
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  4013b0:	6a92      	ldr	r2, [r2, #40]	; 0x28
  4013b2:	4814      	ldr	r0, [pc, #80]	; (401404 <SystemCoreClockUpdate+0xf4>)
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  4013b4:	f3c1 410a 	ubfx	r1, r1, #16, #11
  4013b8:	6803      	ldr	r3, [r0, #0]
  4013ba:	fb01 3303 	mla	r3, r1, r3, r3
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  4013be:	b2d2      	uxtb	r2, r2
  4013c0:	fbb3 f3f2 	udiv	r3, r3, r2
  4013c4:	6003      	str	r3, [r0, #0]
  4013c6:	e7ac      	b.n	401322 <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4013c8:	4a11      	ldr	r2, [pc, #68]	; (401410 <SystemCoreClockUpdate+0x100>)
  4013ca:	4b0e      	ldr	r3, [pc, #56]	; (401404 <SystemCoreClockUpdate+0xf4>)
  4013cc:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  4013ce:	4b0c      	ldr	r3, [pc, #48]	; (401400 <SystemCoreClockUpdate+0xf0>)
  4013d0:	6a1b      	ldr	r3, [r3, #32]
  4013d2:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4013d6:	2b10      	cmp	r3, #16
  4013d8:	d005      	beq.n	4013e6 <SystemCoreClockUpdate+0xd6>
  4013da:	2b20      	cmp	r3, #32
  4013dc:	d1e0      	bne.n	4013a0 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 3U;
  4013de:	4a0b      	ldr	r2, [pc, #44]	; (40140c <SystemCoreClockUpdate+0xfc>)
  4013e0:	4b08      	ldr	r3, [pc, #32]	; (401404 <SystemCoreClockUpdate+0xf4>)
  4013e2:	601a      	str	r2, [r3, #0]
          break;
  4013e4:	e7dc      	b.n	4013a0 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 2U;
  4013e6:	4a0b      	ldr	r2, [pc, #44]	; (401414 <SystemCoreClockUpdate+0x104>)
  4013e8:	4b06      	ldr	r3, [pc, #24]	; (401404 <SystemCoreClockUpdate+0xf4>)
  4013ea:	601a      	str	r2, [r3, #0]
          break;
  4013ec:	e7d8      	b.n	4013a0 <SystemCoreClockUpdate+0x90>
    SystemCoreClock /= 3U;
  4013ee:	4a05      	ldr	r2, [pc, #20]	; (401404 <SystemCoreClockUpdate+0xf4>)
  4013f0:	6813      	ldr	r3, [r2, #0]
  4013f2:	4909      	ldr	r1, [pc, #36]	; (401418 <SystemCoreClockUpdate+0x108>)
  4013f4:	fba1 1303 	umull	r1, r3, r1, r3
  4013f8:	085b      	lsrs	r3, r3, #1
  4013fa:	6013      	str	r3, [r2, #0]
  4013fc:	4770      	bx	lr
  4013fe:	bf00      	nop
  401400:	400e0600 	.word	0x400e0600
  401404:	2040001c 	.word	0x2040001c
  401408:	400e1810 	.word	0x400e1810
  40140c:	00b71b00 	.word	0x00b71b00
  401410:	003d0900 	.word	0x003d0900
  401414:	007a1200 	.word	0x007a1200
  401418:	aaaaaaab 	.word	0xaaaaaaab

0040141c <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
  if ( ul_clk < CHIP_FREQ_FWS_0 )
  40141c:	4b16      	ldr	r3, [pc, #88]	; (401478 <system_init_flash+0x5c>)
  40141e:	4298      	cmp	r0, r3
  401420:	d913      	bls.n	40144a <system_init_flash+0x2e>
  {
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  }
  else
  {
    if (ul_clk < CHIP_FREQ_FWS_1)
  401422:	4b16      	ldr	r3, [pc, #88]	; (40147c <system_init_flash+0x60>)
  401424:	4298      	cmp	r0, r3
  401426:	d915      	bls.n	401454 <system_init_flash+0x38>
    {
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
    }
    else
    {
      if (ul_clk < CHIP_FREQ_FWS_2)
  401428:	4b15      	ldr	r3, [pc, #84]	; (401480 <system_init_flash+0x64>)
  40142a:	4298      	cmp	r0, r3
  40142c:	d916      	bls.n	40145c <system_init_flash+0x40>
      {
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
      }
      else
      {
        if ( ul_clk < CHIP_FREQ_FWS_3 )
  40142e:	4b15      	ldr	r3, [pc, #84]	; (401484 <system_init_flash+0x68>)
  401430:	4298      	cmp	r0, r3
  401432:	d917      	bls.n	401464 <system_init_flash+0x48>
        {
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
        }
        else
        {
          if ( ul_clk < CHIP_FREQ_FWS_4 )
  401434:	4b14      	ldr	r3, [pc, #80]	; (401488 <system_init_flash+0x6c>)
  401436:	4298      	cmp	r0, r3
  401438:	d918      	bls.n	40146c <system_init_flash+0x50>
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
          }
          else
          {
            if ( ul_clk < CHIP_FREQ_FWS_5 )
  40143a:	4b14      	ldr	r3, [pc, #80]	; (40148c <system_init_flash+0x70>)
  40143c:	4298      	cmp	r0, r3
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  40143e:	bf94      	ite	ls
  401440:	4a13      	ldrls	r2, [pc, #76]	; (401490 <system_init_flash+0x74>)
            }
            else
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(6)|EEFC_FMR_CLOE;
  401442:	4a14      	ldrhi	r2, [pc, #80]	; (401494 <system_init_flash+0x78>)
  401444:	4b14      	ldr	r3, [pc, #80]	; (401498 <system_init_flash+0x7c>)
  401446:	601a      	str	r2, [r3, #0]
  401448:	4770      	bx	lr
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  40144a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  40144e:	4b12      	ldr	r3, [pc, #72]	; (401498 <system_init_flash+0x7c>)
  401450:	601a      	str	r2, [r3, #0]
  401452:	4770      	bx	lr
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  401454:	4a11      	ldr	r2, [pc, #68]	; (40149c <system_init_flash+0x80>)
  401456:	4b10      	ldr	r3, [pc, #64]	; (401498 <system_init_flash+0x7c>)
  401458:	601a      	str	r2, [r3, #0]
  40145a:	4770      	bx	lr
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  40145c:	4a10      	ldr	r2, [pc, #64]	; (4014a0 <system_init_flash+0x84>)
  40145e:	4b0e      	ldr	r3, [pc, #56]	; (401498 <system_init_flash+0x7c>)
  401460:	601a      	str	r2, [r3, #0]
  401462:	4770      	bx	lr
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  401464:	4a0f      	ldr	r2, [pc, #60]	; (4014a4 <system_init_flash+0x88>)
  401466:	4b0c      	ldr	r3, [pc, #48]	; (401498 <system_init_flash+0x7c>)
  401468:	601a      	str	r2, [r3, #0]
  40146a:	4770      	bx	lr
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  40146c:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  401470:	4b09      	ldr	r3, [pc, #36]	; (401498 <system_init_flash+0x7c>)
  401472:	601a      	str	r2, [r3, #0]
  401474:	4770      	bx	lr
  401476:	bf00      	nop
  401478:	015ef3bf 	.word	0x015ef3bf
  40147c:	02bde77f 	.word	0x02bde77f
  401480:	041cdb3f 	.word	0x041cdb3f
  401484:	057bceff 	.word	0x057bceff
  401488:	06dac2bf 	.word	0x06dac2bf
  40148c:	0839b67f 	.word	0x0839b67f
  401490:	04000500 	.word	0x04000500
  401494:	04000600 	.word	0x04000600
  401498:	400e0c00 	.word	0x400e0c00
  40149c:	04000100 	.word	0x04000100
  4014a0:	04000200 	.word	0x04000200
  4014a4:	04000300 	.word	0x04000300

004014a8 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  4014a8:	4b0a      	ldr	r3, [pc, #40]	; (4014d4 <_sbrk+0x2c>)
  4014aa:	681b      	ldr	r3, [r3, #0]
  4014ac:	b153      	cbz	r3, 4014c4 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  4014ae:	4b09      	ldr	r3, [pc, #36]	; (4014d4 <_sbrk+0x2c>)
  4014b0:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  4014b2:	181a      	adds	r2, r3, r0
  4014b4:	4908      	ldr	r1, [pc, #32]	; (4014d8 <_sbrk+0x30>)
  4014b6:	4291      	cmp	r1, r2
  4014b8:	db08      	blt.n	4014cc <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  4014ba:	4610      	mov	r0, r2
  4014bc:	4a05      	ldr	r2, [pc, #20]	; (4014d4 <_sbrk+0x2c>)
  4014be:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  4014c0:	4618      	mov	r0, r3
  4014c2:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  4014c4:	4a05      	ldr	r2, [pc, #20]	; (4014dc <_sbrk+0x34>)
  4014c6:	4b03      	ldr	r3, [pc, #12]	; (4014d4 <_sbrk+0x2c>)
  4014c8:	601a      	str	r2, [r3, #0]
  4014ca:	e7f0      	b.n	4014ae <_sbrk+0x6>
		return (caddr_t) -1;	
  4014cc:	f04f 30ff 	mov.w	r0, #4294967295
}
  4014d0:	4770      	bx	lr
  4014d2:	bf00      	nop
  4014d4:	20400c70 	.word	0x20400c70
  4014d8:	2045fffc 	.word	0x2045fffc
  4014dc:	20402f58 	.word	0x20402f58

004014e0 <RTT_init>:
#define ECHO_PIO PIOD
#define ECHO_PIO_ID ID_PIOD
#define ECHO_PIO_IDX 30
#define ECHO_PIO_IDX_MASK (1u << ECHO_PIO_IDX)

void RTT_init(float freqPrescale, uint32_t IrqNPulses, uint32_t rttIRQSource) {
  4014e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4014e4:	ed2d 8b02 	vpush	{d8}
  4014e8:	b082      	sub	sp, #8
  4014ea:	ee08 0a10 	vmov	s16, r0
  4014ee:	4688      	mov	r8, r1
  4014f0:	4617      	mov	r7, r2

	uint16_t pllPreScale = (int) (((float) 32768) / freqPrescale);
	
	rtt_sel_source(RTT, false);
  4014f2:	4c20      	ldr	r4, [pc, #128]	; (401574 <RTT_init+0x94>)
  4014f4:	2100      	movs	r1, #0
  4014f6:	4620      	mov	r0, r4
  4014f8:	4b1f      	ldr	r3, [pc, #124]	; (401578 <RTT_init+0x98>)
  4014fa:	4798      	blx	r3
	uint16_t pllPreScale = (int) (((float) 32768) / freqPrescale);
  4014fc:	ed9f 7a1f 	vldr	s14, [pc, #124]	; 40157c <RTT_init+0x9c>
  401500:	eec7 7a08 	vdiv.f32	s15, s14, s16
  401504:	eefd 7ae7 	vcvt.s32.f32	s15, s15
  401508:	edcd 7a01 	vstr	s15, [sp, #4]
	rtt_init(RTT, pllPreScale);
  40150c:	f8bd 1004 	ldrh.w	r1, [sp, #4]
  401510:	4620      	mov	r0, r4
  401512:	4b1b      	ldr	r3, [pc, #108]	; (401580 <RTT_init+0xa0>)
  401514:	4798      	blx	r3
	
	if (rttIRQSource & RTT_MR_ALMIEN) {
  401516:	f417 3f80 	tst.w	r7, #65536	; 0x10000
  40151a:	d116      	bne.n	40154a <RTT_init+0x6a>

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  40151c:	4b19      	ldr	r3, [pc, #100]	; (401584 <RTT_init+0xa4>)
  40151e:	2208      	movs	r2, #8
  401520:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  401524:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHPR[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  401528:	2180      	movs	r1, #128	; 0x80
  40152a:	f883 1303 	strb.w	r1, [r3, #771]	; 0x303
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  40152e:	601a      	str	r2, [r3, #0]
	NVIC_ClearPendingIRQ(RTT_IRQn);
	NVIC_SetPriority(RTT_IRQn, 4);
	NVIC_EnableIRQ(RTT_IRQn);

	/* Enable RTT interrupt */
	if (rttIRQSource & (RTT_MR_RTTINCIEN | RTT_MR_ALMIEN))
  401530:	f417 3f40 	tst.w	r7, #196608	; 0x30000
  401534:	d119      	bne.n	40156a <RTT_init+0x8a>
	rtt_enable_interrupt(RTT, rttIRQSource);
	else
	rtt_disable_interrupt(RTT, RTT_MR_RTTINCIEN | RTT_MR_ALMIEN);
  401536:	f44f 3140 	mov.w	r1, #196608	; 0x30000
  40153a:	480e      	ldr	r0, [pc, #56]	; (401574 <RTT_init+0x94>)
  40153c:	4b12      	ldr	r3, [pc, #72]	; (401588 <RTT_init+0xa8>)
  40153e:	4798      	blx	r3
	
}
  401540:	b002      	add	sp, #8
  401542:	ecbd 8b02 	vpop	{d8}
  401546:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		ul_previous_time = rtt_read_timer_value(RTT);
  40154a:	4620      	mov	r0, r4
  40154c:	4b0f      	ldr	r3, [pc, #60]	; (40158c <RTT_init+0xac>)
  40154e:	4798      	blx	r3
  401550:	4604      	mov	r4, r0
		while (ul_previous_time == rtt_read_timer_value(RTT));
  401552:	4e08      	ldr	r6, [pc, #32]	; (401574 <RTT_init+0x94>)
  401554:	4d0d      	ldr	r5, [pc, #52]	; (40158c <RTT_init+0xac>)
  401556:	4630      	mov	r0, r6
  401558:	47a8      	blx	r5
  40155a:	4284      	cmp	r4, r0
  40155c:	d0fb      	beq.n	401556 <RTT_init+0x76>
		rtt_write_alarm_time(RTT, IrqNPulses+ul_previous_time);
  40155e:	eb04 0108 	add.w	r1, r4, r8
  401562:	4804      	ldr	r0, [pc, #16]	; (401574 <RTT_init+0x94>)
  401564:	4b0a      	ldr	r3, [pc, #40]	; (401590 <RTT_init+0xb0>)
  401566:	4798      	blx	r3
  401568:	e7d8      	b.n	40151c <RTT_init+0x3c>
	rtt_enable_interrupt(RTT, rttIRQSource);
  40156a:	4639      	mov	r1, r7
  40156c:	4801      	ldr	r0, [pc, #4]	; (401574 <RTT_init+0x94>)
  40156e:	4b09      	ldr	r3, [pc, #36]	; (401594 <RTT_init+0xb4>)
  401570:	4798      	blx	r3
  401572:	e7e5      	b.n	401540 <RTT_init+0x60>
  401574:	400e1830 	.word	0x400e1830
  401578:	004001c1 	.word	0x004001c1
  40157c:	47000000 	.word	0x47000000
  401580:	004001ad 	.word	0x004001ad
  401584:	e000e100 	.word	0xe000e100
  401588:	00400201 	.word	0x00400201
  40158c:	00400215 	.word	0x00400215
  401590:	0040022d 	.word	0x0040022d
  401594:	004001ed 	.word	0x004001ed

00401598 <signalCallback>:
		// BLINK Led
	}

}

void signalCallback(void) {
  401598:	b508      	push	{r3, lr}
	if(pio_get(ECHO_PIO, PIO_INPUT, ECHO_PIO_IDX_MASK)){
  40159a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  40159e:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  4015a2:	480a      	ldr	r0, [pc, #40]	; (4015cc <signalCallback+0x34>)
  4015a4:	4b0a      	ldr	r3, [pc, #40]	; (4015d0 <signalCallback+0x38>)
  4015a6:	4798      	blx	r3
  4015a8:	b940      	cbnz	r0, 4015bc <signalCallback+0x24>
		RTT_init(32000, 753, RTT_MR_ALMIEN);
	} else {
		counter_rtt = rtt_read_timer_value(RTT);
  4015aa:	480a      	ldr	r0, [pc, #40]	; (4015d4 <signalCallback+0x3c>)
  4015ac:	4b0a      	ldr	r3, [pc, #40]	; (4015d8 <signalCallback+0x40>)
  4015ae:	4798      	blx	r3
  4015b0:	4b0a      	ldr	r3, [pc, #40]	; (4015dc <signalCallback+0x44>)
  4015b2:	6018      	str	r0, [r3, #0]
		stop = 1;
  4015b4:	2201      	movs	r2, #1
  4015b6:	4b0a      	ldr	r3, [pc, #40]	; (4015e0 <signalCallback+0x48>)
  4015b8:	701a      	strb	r2, [r3, #0]
  4015ba:	bd08      	pop	{r3, pc}
		RTT_init(32000, 753, RTT_MR_ALMIEN);
  4015bc:	f44f 3280 	mov.w	r2, #65536	; 0x10000
  4015c0:	f240 21f1 	movw	r1, #753	; 0x2f1
  4015c4:	4807      	ldr	r0, [pc, #28]	; (4015e4 <signalCallback+0x4c>)
  4015c6:	4b08      	ldr	r3, [pc, #32]	; (4015e8 <signalCallback+0x50>)
  4015c8:	4798      	blx	r3
  4015ca:	bd08      	pop	{r3, pc}
  4015cc:	400e1400 	.word	0x400e1400
  4015d0:	00400b0d 	.word	0x00400b0d
  4015d4:	400e1830 	.word	0x400e1830
  4015d8:	00400215 	.word	0x00400215
  4015dc:	20400c74 	.word	0x20400c74
  4015e0:	20400c79 	.word	0x20400c79
  4015e4:	46fa0000 	.word	0x46fa0000
  4015e8:	004014e1 	.word	0x004014e1

004015ec <RTT_Handler>:
void RTT_Handler(void) {
  4015ec:	b508      	push	{r3, lr}
	ul_status = rtt_get_status(RTT);
  4015ee:	4805      	ldr	r0, [pc, #20]	; (401604 <RTT_Handler+0x18>)
  4015f0:	4b05      	ldr	r3, [pc, #20]	; (401608 <RTT_Handler+0x1c>)
  4015f2:	4798      	blx	r3
	if ((ul_status & RTT_SR_ALMS) == RTT_SR_ALMS) {
  4015f4:	f010 0f01 	tst.w	r0, #1
  4015f8:	d002      	beq.n	401600 <RTT_Handler+0x14>
		error_flag = 1;
  4015fa:	2201      	movs	r2, #1
  4015fc:	4b03      	ldr	r3, [pc, #12]	; (40160c <RTT_Handler+0x20>)
  4015fe:	701a      	strb	r2, [r3, #0]
  401600:	bd08      	pop	{r3, pc}
  401602:	bf00      	nop
  401604:	400e1830 	.word	0x400e1830
  401608:	00400229 	.word	0x00400229
  40160c:	20400c78 	.word	0x20400c78

00401610 <main>:
	}
}


int main (void)
{
  401610:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401614:	b083      	sub	sp, #12
	board_init();
  401616:	4b4b      	ldr	r3, [pc, #300]	; (401744 <main+0x134>)
  401618:	4798      	blx	r3
	sysclk_init();
  40161a:	4b4b      	ldr	r3, [pc, #300]	; (401748 <main+0x138>)
  40161c:	4798      	blx	r3
	
	pmc_enable_periph_clk(TRIGGER_PIO_ID);
  40161e:	200a      	movs	r0, #10
  401620:	4c4a      	ldr	r4, [pc, #296]	; (40174c <main+0x13c>)
  401622:	47a0      	blx	r4
	pmc_enable_periph_clk(ECHO_PIO_ID);
  401624:	2010      	movs	r0, #16
  401626:	47a0      	blx	r4
	
	pio_set_output(TRIGGER_PIO, TRIGGER_PIO_IDX_MASK, 0, 0, 0);
  401628:	2400      	movs	r4, #0
  40162a:	9400      	str	r4, [sp, #0]
  40162c:	4623      	mov	r3, r4
  40162e:	4622      	mov	r2, r4
  401630:	2140      	movs	r1, #64	; 0x40
  401632:	4847      	ldr	r0, [pc, #284]	; (401750 <main+0x140>)
  401634:	4d47      	ldr	r5, [pc, #284]	; (401754 <main+0x144>)
  401636:	47a8      	blx	r5
	pio_set_input(ECHO_PIO, ECHO_PIO_IDX_MASK, 0);
  401638:	4d47      	ldr	r5, [pc, #284]	; (401758 <main+0x148>)
  40163a:	4622      	mov	r2, r4
  40163c:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401640:	4628      	mov	r0, r5
  401642:	4b46      	ldr	r3, [pc, #280]	; (40175c <main+0x14c>)
  401644:	4798      	blx	r3
	
	pio_handler_set(
  401646:	4b46      	ldr	r3, [pc, #280]	; (401760 <main+0x150>)
  401648:	9300      	str	r3, [sp, #0]
  40164a:	2340      	movs	r3, #64	; 0x40
  40164c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  401650:	2110      	movs	r1, #16
  401652:	4628      	mov	r0, r5
  401654:	4c43      	ldr	r4, [pc, #268]	; (401764 <main+0x154>)
  401656:	47a0      	blx	r4
		ECHO_PIO_IDX_MASK,
		PIO_IT_EDGE,
		signalCallback
	);
	
	pio_enable_interrupt(ECHO_PIO, ECHO_PIO_IDX_MASK);
  401658:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  40165c:	4628      	mov	r0, r5
  40165e:	4b42      	ldr	r3, [pc, #264]	; (401768 <main+0x158>)
  401660:	4798      	blx	r3
  401662:	4b42      	ldr	r3, [pc, #264]	; (40176c <main+0x15c>)
  401664:	f44f 3280 	mov.w	r2, #65536	; 0x10000
  401668:	601a      	str	r2, [r3, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  40166a:	2280      	movs	r2, #128	; 0x80
  40166c:	f883 2310 	strb.w	r2, [r3, #784]	; 0x310
	NVIC_EnableIRQ(ECHO_PIO_ID);
	NVIC_SetPriority(ECHO_PIO_ID, 4);
	
	gfx_mono_ssd1306_init();
  401670:	4b3f      	ldr	r3, [pc, #252]	; (401770 <main+0x160>)
  401672:	4798      	blx	r3
	double time = 0;
	

  /* Insert application code here, after the board has been initialized. */
	while(1) {
		if (start) {
  401674:	4c3f      	ldr	r4, [pc, #252]	; (401774 <main+0x164>)
 			pio_set(TRIGGER_PIO, TRIGGER_PIO_IDX_MASK);
			delay_us(10);
			pio_clear(TRIGGER_PIO, TRIGGER_PIO_IDX_MASK);
			
			start = 0;
  401676:	2500      	movs	r5, #0
  401678:	e05f      	b.n	40173a <main+0x12a>
 			pio_set(TRIGGER_PIO, TRIGGER_PIO_IDX_MASK);
  40167a:	2140      	movs	r1, #64	; 0x40
  40167c:	4658      	mov	r0, fp
  40167e:	47b8      	blx	r7
			delay_us(10);
  401680:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  401684:	4b3c      	ldr	r3, [pc, #240]	; (401778 <main+0x168>)
  401686:	4798      	blx	r3
			pio_clear(TRIGGER_PIO, TRIGGER_PIO_IDX_MASK);
  401688:	2140      	movs	r1, #64	; 0x40
  40168a:	4658      	mov	r0, fp
  40168c:	4b3b      	ldr	r3, [pc, #236]	; (40177c <main+0x16c>)
  40168e:	4798      	blx	r3
			start = 0;
  401690:	7025      	strb	r5, [r4, #0]
  401692:	e006      	b.n	4016a2 <main+0x92>
			
			stop = 0;
			start = 1;
		}
		
		if (error_flag) {
  401694:	4b3a      	ldr	r3, [pc, #232]	; (401780 <main+0x170>)
  401696:	781b      	ldrb	r3, [r3, #0]
  401698:	2b00      	cmp	r3, #0
  40169a:	d137      	bne.n	40170c <main+0xfc>
		if (start) {
  40169c:	7823      	ldrb	r3, [r4, #0]
  40169e:	2b00      	cmp	r3, #0
  4016a0:	d1eb      	bne.n	40167a <main+0x6a>
		pmc_sleep(SAM_PM_SMODE_SLEEP_WFI);
  4016a2:	2002      	movs	r0, #2
  4016a4:	4b37      	ldr	r3, [pc, #220]	; (401784 <main+0x174>)
  4016a6:	4798      	blx	r3
		if (stop) {
  4016a8:	4b37      	ldr	r3, [pc, #220]	; (401788 <main+0x178>)
  4016aa:	781b      	ldrb	r3, [r3, #0]
  4016ac:	2b00      	cmp	r3, #0
  4016ae:	d0f1      	beq.n	401694 <main+0x84>
			time = (double) counter_rtt / 32000;
  4016b0:	4b36      	ldr	r3, [pc, #216]	; (40178c <main+0x17c>)
  4016b2:	f8d3 8000 	ldr.w	r8, [r3]
			gfx_mono_draw_string("           ", 0, 0, &sysfont);
  4016b6:	f8df 9100 	ldr.w	r9, [pc, #256]	; 4017b8 <main+0x1a8>
  4016ba:	464b      	mov	r3, r9
  4016bc:	462a      	mov	r2, r5
  4016be:	4629      	mov	r1, r5
  4016c0:	4833      	ldr	r0, [pc, #204]	; (401790 <main+0x180>)
  4016c2:	4e34      	ldr	r6, [pc, #208]	; (401794 <main+0x184>)
  4016c4:	47b0      	blx	r6
			time = (double) counter_rtt / 32000;
  4016c6:	4640      	mov	r0, r8
  4016c8:	4b33      	ldr	r3, [pc, #204]	; (401798 <main+0x188>)
  4016ca:	4798      	blx	r3
  4016cc:	2200      	movs	r2, #0
  4016ce:	4b33      	ldr	r3, [pc, #204]	; (40179c <main+0x18c>)
  4016d0:	f8df 80e8 	ldr.w	r8, [pc, #232]	; 4017bc <main+0x1ac>
  4016d4:	47c0      	blx	r8
			distance = time * 170;
  4016d6:	f8df 80e8 	ldr.w	r8, [pc, #232]	; 4017c0 <main+0x1b0>
  4016da:	2200      	movs	r2, #0
  4016dc:	4b30      	ldr	r3, [pc, #192]	; (4017a0 <main+0x190>)
  4016de:	47c0      	blx	r8
			sprintf(str, "%.2lf cm", distance * 100);
  4016e0:	2200      	movs	r2, #0
  4016e2:	4b30      	ldr	r3, [pc, #192]	; (4017a4 <main+0x194>)
  4016e4:	47c0      	blx	r8
  4016e6:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 4017ac <main+0x19c>
  4016ea:	4602      	mov	r2, r0
  4016ec:	460b      	mov	r3, r1
  4016ee:	492e      	ldr	r1, [pc, #184]	; (4017a8 <main+0x198>)
  4016f0:	4640      	mov	r0, r8
  4016f2:	f8df a0d0 	ldr.w	sl, [pc, #208]	; 4017c4 <main+0x1b4>
  4016f6:	47d0      	blx	sl
			gfx_mono_draw_string(str, 0,0, &sysfont);
  4016f8:	464b      	mov	r3, r9
  4016fa:	462a      	mov	r2, r5
  4016fc:	4629      	mov	r1, r5
  4016fe:	4640      	mov	r0, r8
  401700:	47b0      	blx	r6
			stop = 0;
  401702:	4b21      	ldr	r3, [pc, #132]	; (401788 <main+0x178>)
  401704:	701d      	strb	r5, [r3, #0]
			start = 1;
  401706:	2301      	movs	r3, #1
  401708:	7023      	strb	r3, [r4, #0]
  40170a:	e7c3      	b.n	401694 <main+0x84>
			gfx_mono_draw_string("           ", 0, 0, &sysfont);
  40170c:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 4017b8 <main+0x1a8>
  401710:	4643      	mov	r3, r8
  401712:	462a      	mov	r2, r5
  401714:	4629      	mov	r1, r5
  401716:	481e      	ldr	r0, [pc, #120]	; (401790 <main+0x180>)
  401718:	4f1e      	ldr	r7, [pc, #120]	; (401794 <main+0x184>)
  40171a:	47b8      	blx	r7
			sprintf(str, "Mau Contato");
  40171c:	4e23      	ldr	r6, [pc, #140]	; (4017ac <main+0x19c>)
  40171e:	4b24      	ldr	r3, [pc, #144]	; (4017b0 <main+0x1a0>)
  401720:	cb07      	ldmia	r3!, {r0, r1, r2}
  401722:	6030      	str	r0, [r6, #0]
  401724:	6071      	str	r1, [r6, #4]
  401726:	60b2      	str	r2, [r6, #8]
			gfx_mono_draw_string(str, 0,0, &sysfont);
  401728:	4643      	mov	r3, r8
  40172a:	462a      	mov	r2, r5
  40172c:	4629      	mov	r1, r5
  40172e:	4630      	mov	r0, r6
  401730:	47b8      	blx	r7
			
			error_flag = 0;
  401732:	4b13      	ldr	r3, [pc, #76]	; (401780 <main+0x170>)
  401734:	701d      	strb	r5, [r3, #0]
			start = 1;
  401736:	2301      	movs	r3, #1
  401738:	7023      	strb	r3, [r4, #0]
 			pio_set(TRIGGER_PIO, TRIGGER_PIO_IDX_MASK);
  40173a:	f8df b014 	ldr.w	fp, [pc, #20]	; 401750 <main+0x140>
  40173e:	4f1d      	ldr	r7, [pc, #116]	; (4017b4 <main+0x1a4>)
  401740:	e7ac      	b.n	40169c <main+0x8c>
  401742:	bf00      	nop
  401744:	004009c5 	.word	0x004009c5
  401748:	00400955 	.word	0x00400955
  40174c:	00400f2d 	.word	0x00400f2d
  401750:	400e0e00 	.word	0x400e0e00
  401754:	00400bef 	.word	0x00400bef
  401758:	400e1400 	.word	0x400e1400
  40175c:	00400bb9 	.word	0x00400bb9
  401760:	00401599 	.word	0x00401599
  401764:	00400d39 	.word	0x00400d39
  401768:	00400cdb 	.word	0x00400cdb
  40176c:	e000e100 	.word	0xe000e100
  401770:	00400635 	.word	0x00400635
  401774:	20400020 	.word	0x20400020
  401778:	20400001 	.word	0x20400001
  40177c:	00400b09 	.word	0x00400b09
  401780:	20400c78 	.word	0x20400c78
  401784:	00400fd1 	.word	0x00400fd1
  401788:	20400c79 	.word	0x20400c79
  40178c:	20400c74 	.word	0x20400c74
  401790:	00406b28 	.word	0x00406b28
  401794:	0040059d 	.word	0x0040059d
  401798:	00401a4d 	.word	0x00401a4d
  40179c:	40df4000 	.word	0x40df4000
  4017a0:	40654000 	.word	0x40654000
  4017a4:	40590000 	.word	0x40590000
  4017a8:	00406b34 	.word	0x00406b34
  4017ac:	20400cb0 	.word	0x20400cb0
  4017b0:	00406b40 	.word	0x00406b40
  4017b4:	00400b05 	.word	0x00400b05
  4017b8:	2040000c 	.word	0x2040000c
  4017bc:	00401d8d 	.word	0x00401d8d
  4017c0:	00401b39 	.word	0x00401b39
  4017c4:	00402049 	.word	0x00402049

004017c8 <__aeabi_drsub>:
  4017c8:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  4017cc:	e002      	b.n	4017d4 <__adddf3>
  4017ce:	bf00      	nop

004017d0 <__aeabi_dsub>:
  4017d0:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

004017d4 <__adddf3>:
  4017d4:	b530      	push	{r4, r5, lr}
  4017d6:	ea4f 0441 	mov.w	r4, r1, lsl #1
  4017da:	ea4f 0543 	mov.w	r5, r3, lsl #1
  4017de:	ea94 0f05 	teq	r4, r5
  4017e2:	bf08      	it	eq
  4017e4:	ea90 0f02 	teqeq	r0, r2
  4017e8:	bf1f      	itttt	ne
  4017ea:	ea54 0c00 	orrsne.w	ip, r4, r0
  4017ee:	ea55 0c02 	orrsne.w	ip, r5, r2
  4017f2:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  4017f6:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  4017fa:	f000 80e2 	beq.w	4019c2 <__adddf3+0x1ee>
  4017fe:	ea4f 5454 	mov.w	r4, r4, lsr #21
  401802:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  401806:	bfb8      	it	lt
  401808:	426d      	neglt	r5, r5
  40180a:	dd0c      	ble.n	401826 <__adddf3+0x52>
  40180c:	442c      	add	r4, r5
  40180e:	ea80 0202 	eor.w	r2, r0, r2
  401812:	ea81 0303 	eor.w	r3, r1, r3
  401816:	ea82 0000 	eor.w	r0, r2, r0
  40181a:	ea83 0101 	eor.w	r1, r3, r1
  40181e:	ea80 0202 	eor.w	r2, r0, r2
  401822:	ea81 0303 	eor.w	r3, r1, r3
  401826:	2d36      	cmp	r5, #54	; 0x36
  401828:	bf88      	it	hi
  40182a:	bd30      	pophi	{r4, r5, pc}
  40182c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  401830:	ea4f 3101 	mov.w	r1, r1, lsl #12
  401834:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  401838:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  40183c:	d002      	beq.n	401844 <__adddf3+0x70>
  40183e:	4240      	negs	r0, r0
  401840:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401844:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  401848:	ea4f 3303 	mov.w	r3, r3, lsl #12
  40184c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  401850:	d002      	beq.n	401858 <__adddf3+0x84>
  401852:	4252      	negs	r2, r2
  401854:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  401858:	ea94 0f05 	teq	r4, r5
  40185c:	f000 80a7 	beq.w	4019ae <__adddf3+0x1da>
  401860:	f1a4 0401 	sub.w	r4, r4, #1
  401864:	f1d5 0e20 	rsbs	lr, r5, #32
  401868:	db0d      	blt.n	401886 <__adddf3+0xb2>
  40186a:	fa02 fc0e 	lsl.w	ip, r2, lr
  40186e:	fa22 f205 	lsr.w	r2, r2, r5
  401872:	1880      	adds	r0, r0, r2
  401874:	f141 0100 	adc.w	r1, r1, #0
  401878:	fa03 f20e 	lsl.w	r2, r3, lr
  40187c:	1880      	adds	r0, r0, r2
  40187e:	fa43 f305 	asr.w	r3, r3, r5
  401882:	4159      	adcs	r1, r3
  401884:	e00e      	b.n	4018a4 <__adddf3+0xd0>
  401886:	f1a5 0520 	sub.w	r5, r5, #32
  40188a:	f10e 0e20 	add.w	lr, lr, #32
  40188e:	2a01      	cmp	r2, #1
  401890:	fa03 fc0e 	lsl.w	ip, r3, lr
  401894:	bf28      	it	cs
  401896:	f04c 0c02 	orrcs.w	ip, ip, #2
  40189a:	fa43 f305 	asr.w	r3, r3, r5
  40189e:	18c0      	adds	r0, r0, r3
  4018a0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  4018a4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4018a8:	d507      	bpl.n	4018ba <__adddf3+0xe6>
  4018aa:	f04f 0e00 	mov.w	lr, #0
  4018ae:	f1dc 0c00 	rsbs	ip, ip, #0
  4018b2:	eb7e 0000 	sbcs.w	r0, lr, r0
  4018b6:	eb6e 0101 	sbc.w	r1, lr, r1
  4018ba:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  4018be:	d31b      	bcc.n	4018f8 <__adddf3+0x124>
  4018c0:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  4018c4:	d30c      	bcc.n	4018e0 <__adddf3+0x10c>
  4018c6:	0849      	lsrs	r1, r1, #1
  4018c8:	ea5f 0030 	movs.w	r0, r0, rrx
  4018cc:	ea4f 0c3c 	mov.w	ip, ip, rrx
  4018d0:	f104 0401 	add.w	r4, r4, #1
  4018d4:	ea4f 5244 	mov.w	r2, r4, lsl #21
  4018d8:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  4018dc:	f080 809a 	bcs.w	401a14 <__adddf3+0x240>
  4018e0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  4018e4:	bf08      	it	eq
  4018e6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4018ea:	f150 0000 	adcs.w	r0, r0, #0
  4018ee:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4018f2:	ea41 0105 	orr.w	r1, r1, r5
  4018f6:	bd30      	pop	{r4, r5, pc}
  4018f8:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  4018fc:	4140      	adcs	r0, r0
  4018fe:	eb41 0101 	adc.w	r1, r1, r1
  401902:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401906:	f1a4 0401 	sub.w	r4, r4, #1
  40190a:	d1e9      	bne.n	4018e0 <__adddf3+0x10c>
  40190c:	f091 0f00 	teq	r1, #0
  401910:	bf04      	itt	eq
  401912:	4601      	moveq	r1, r0
  401914:	2000      	moveq	r0, #0
  401916:	fab1 f381 	clz	r3, r1
  40191a:	bf08      	it	eq
  40191c:	3320      	addeq	r3, #32
  40191e:	f1a3 030b 	sub.w	r3, r3, #11
  401922:	f1b3 0220 	subs.w	r2, r3, #32
  401926:	da0c      	bge.n	401942 <__adddf3+0x16e>
  401928:	320c      	adds	r2, #12
  40192a:	dd08      	ble.n	40193e <__adddf3+0x16a>
  40192c:	f102 0c14 	add.w	ip, r2, #20
  401930:	f1c2 020c 	rsb	r2, r2, #12
  401934:	fa01 f00c 	lsl.w	r0, r1, ip
  401938:	fa21 f102 	lsr.w	r1, r1, r2
  40193c:	e00c      	b.n	401958 <__adddf3+0x184>
  40193e:	f102 0214 	add.w	r2, r2, #20
  401942:	bfd8      	it	le
  401944:	f1c2 0c20 	rsble	ip, r2, #32
  401948:	fa01 f102 	lsl.w	r1, r1, r2
  40194c:	fa20 fc0c 	lsr.w	ip, r0, ip
  401950:	bfdc      	itt	le
  401952:	ea41 010c 	orrle.w	r1, r1, ip
  401956:	4090      	lslle	r0, r2
  401958:	1ae4      	subs	r4, r4, r3
  40195a:	bfa2      	ittt	ge
  40195c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  401960:	4329      	orrge	r1, r5
  401962:	bd30      	popge	{r4, r5, pc}
  401964:	ea6f 0404 	mvn.w	r4, r4
  401968:	3c1f      	subs	r4, #31
  40196a:	da1c      	bge.n	4019a6 <__adddf3+0x1d2>
  40196c:	340c      	adds	r4, #12
  40196e:	dc0e      	bgt.n	40198e <__adddf3+0x1ba>
  401970:	f104 0414 	add.w	r4, r4, #20
  401974:	f1c4 0220 	rsb	r2, r4, #32
  401978:	fa20 f004 	lsr.w	r0, r0, r4
  40197c:	fa01 f302 	lsl.w	r3, r1, r2
  401980:	ea40 0003 	orr.w	r0, r0, r3
  401984:	fa21 f304 	lsr.w	r3, r1, r4
  401988:	ea45 0103 	orr.w	r1, r5, r3
  40198c:	bd30      	pop	{r4, r5, pc}
  40198e:	f1c4 040c 	rsb	r4, r4, #12
  401992:	f1c4 0220 	rsb	r2, r4, #32
  401996:	fa20 f002 	lsr.w	r0, r0, r2
  40199a:	fa01 f304 	lsl.w	r3, r1, r4
  40199e:	ea40 0003 	orr.w	r0, r0, r3
  4019a2:	4629      	mov	r1, r5
  4019a4:	bd30      	pop	{r4, r5, pc}
  4019a6:	fa21 f004 	lsr.w	r0, r1, r4
  4019aa:	4629      	mov	r1, r5
  4019ac:	bd30      	pop	{r4, r5, pc}
  4019ae:	f094 0f00 	teq	r4, #0
  4019b2:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  4019b6:	bf06      	itte	eq
  4019b8:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  4019bc:	3401      	addeq	r4, #1
  4019be:	3d01      	subne	r5, #1
  4019c0:	e74e      	b.n	401860 <__adddf3+0x8c>
  4019c2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  4019c6:	bf18      	it	ne
  4019c8:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  4019cc:	d029      	beq.n	401a22 <__adddf3+0x24e>
  4019ce:	ea94 0f05 	teq	r4, r5
  4019d2:	bf08      	it	eq
  4019d4:	ea90 0f02 	teqeq	r0, r2
  4019d8:	d005      	beq.n	4019e6 <__adddf3+0x212>
  4019da:	ea54 0c00 	orrs.w	ip, r4, r0
  4019de:	bf04      	itt	eq
  4019e0:	4619      	moveq	r1, r3
  4019e2:	4610      	moveq	r0, r2
  4019e4:	bd30      	pop	{r4, r5, pc}
  4019e6:	ea91 0f03 	teq	r1, r3
  4019ea:	bf1e      	ittt	ne
  4019ec:	2100      	movne	r1, #0
  4019ee:	2000      	movne	r0, #0
  4019f0:	bd30      	popne	{r4, r5, pc}
  4019f2:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  4019f6:	d105      	bne.n	401a04 <__adddf3+0x230>
  4019f8:	0040      	lsls	r0, r0, #1
  4019fa:	4149      	adcs	r1, r1
  4019fc:	bf28      	it	cs
  4019fe:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  401a02:	bd30      	pop	{r4, r5, pc}
  401a04:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  401a08:	bf3c      	itt	cc
  401a0a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  401a0e:	bd30      	popcc	{r4, r5, pc}
  401a10:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401a14:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  401a18:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  401a1c:	f04f 0000 	mov.w	r0, #0
  401a20:	bd30      	pop	{r4, r5, pc}
  401a22:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  401a26:	bf1a      	itte	ne
  401a28:	4619      	movne	r1, r3
  401a2a:	4610      	movne	r0, r2
  401a2c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  401a30:	bf1c      	itt	ne
  401a32:	460b      	movne	r3, r1
  401a34:	4602      	movne	r2, r0
  401a36:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  401a3a:	bf06      	itte	eq
  401a3c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  401a40:	ea91 0f03 	teqeq	r1, r3
  401a44:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  401a48:	bd30      	pop	{r4, r5, pc}
  401a4a:	bf00      	nop

00401a4c <__aeabi_ui2d>:
  401a4c:	f090 0f00 	teq	r0, #0
  401a50:	bf04      	itt	eq
  401a52:	2100      	moveq	r1, #0
  401a54:	4770      	bxeq	lr
  401a56:	b530      	push	{r4, r5, lr}
  401a58:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401a5c:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401a60:	f04f 0500 	mov.w	r5, #0
  401a64:	f04f 0100 	mov.w	r1, #0
  401a68:	e750      	b.n	40190c <__adddf3+0x138>
  401a6a:	bf00      	nop

00401a6c <__aeabi_i2d>:
  401a6c:	f090 0f00 	teq	r0, #0
  401a70:	bf04      	itt	eq
  401a72:	2100      	moveq	r1, #0
  401a74:	4770      	bxeq	lr
  401a76:	b530      	push	{r4, r5, lr}
  401a78:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401a7c:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401a80:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  401a84:	bf48      	it	mi
  401a86:	4240      	negmi	r0, r0
  401a88:	f04f 0100 	mov.w	r1, #0
  401a8c:	e73e      	b.n	40190c <__adddf3+0x138>
  401a8e:	bf00      	nop

00401a90 <__aeabi_f2d>:
  401a90:	0042      	lsls	r2, r0, #1
  401a92:	ea4f 01e2 	mov.w	r1, r2, asr #3
  401a96:	ea4f 0131 	mov.w	r1, r1, rrx
  401a9a:	ea4f 7002 	mov.w	r0, r2, lsl #28
  401a9e:	bf1f      	itttt	ne
  401aa0:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  401aa4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  401aa8:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  401aac:	4770      	bxne	lr
  401aae:	f092 0f00 	teq	r2, #0
  401ab2:	bf14      	ite	ne
  401ab4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  401ab8:	4770      	bxeq	lr
  401aba:	b530      	push	{r4, r5, lr}
  401abc:	f44f 7460 	mov.w	r4, #896	; 0x380
  401ac0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401ac4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  401ac8:	e720      	b.n	40190c <__adddf3+0x138>
  401aca:	bf00      	nop

00401acc <__aeabi_ul2d>:
  401acc:	ea50 0201 	orrs.w	r2, r0, r1
  401ad0:	bf08      	it	eq
  401ad2:	4770      	bxeq	lr
  401ad4:	b530      	push	{r4, r5, lr}
  401ad6:	f04f 0500 	mov.w	r5, #0
  401ada:	e00a      	b.n	401af2 <__aeabi_l2d+0x16>

00401adc <__aeabi_l2d>:
  401adc:	ea50 0201 	orrs.w	r2, r0, r1
  401ae0:	bf08      	it	eq
  401ae2:	4770      	bxeq	lr
  401ae4:	b530      	push	{r4, r5, lr}
  401ae6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  401aea:	d502      	bpl.n	401af2 <__aeabi_l2d+0x16>
  401aec:	4240      	negs	r0, r0
  401aee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401af2:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401af6:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401afa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  401afe:	f43f aedc 	beq.w	4018ba <__adddf3+0xe6>
  401b02:	f04f 0203 	mov.w	r2, #3
  401b06:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  401b0a:	bf18      	it	ne
  401b0c:	3203      	addne	r2, #3
  401b0e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  401b12:	bf18      	it	ne
  401b14:	3203      	addne	r2, #3
  401b16:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  401b1a:	f1c2 0320 	rsb	r3, r2, #32
  401b1e:	fa00 fc03 	lsl.w	ip, r0, r3
  401b22:	fa20 f002 	lsr.w	r0, r0, r2
  401b26:	fa01 fe03 	lsl.w	lr, r1, r3
  401b2a:	ea40 000e 	orr.w	r0, r0, lr
  401b2e:	fa21 f102 	lsr.w	r1, r1, r2
  401b32:	4414      	add	r4, r2
  401b34:	e6c1      	b.n	4018ba <__adddf3+0xe6>
  401b36:	bf00      	nop

00401b38 <__aeabi_dmul>:
  401b38:	b570      	push	{r4, r5, r6, lr}
  401b3a:	f04f 0cff 	mov.w	ip, #255	; 0xff
  401b3e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  401b42:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  401b46:	bf1d      	ittte	ne
  401b48:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  401b4c:	ea94 0f0c 	teqne	r4, ip
  401b50:	ea95 0f0c 	teqne	r5, ip
  401b54:	f000 f8de 	bleq	401d14 <__aeabi_dmul+0x1dc>
  401b58:	442c      	add	r4, r5
  401b5a:	ea81 0603 	eor.w	r6, r1, r3
  401b5e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  401b62:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  401b66:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  401b6a:	bf18      	it	ne
  401b6c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  401b70:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401b74:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  401b78:	d038      	beq.n	401bec <__aeabi_dmul+0xb4>
  401b7a:	fba0 ce02 	umull	ip, lr, r0, r2
  401b7e:	f04f 0500 	mov.w	r5, #0
  401b82:	fbe1 e502 	umlal	lr, r5, r1, r2
  401b86:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  401b8a:	fbe0 e503 	umlal	lr, r5, r0, r3
  401b8e:	f04f 0600 	mov.w	r6, #0
  401b92:	fbe1 5603 	umlal	r5, r6, r1, r3
  401b96:	f09c 0f00 	teq	ip, #0
  401b9a:	bf18      	it	ne
  401b9c:	f04e 0e01 	orrne.w	lr, lr, #1
  401ba0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  401ba4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  401ba8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  401bac:	d204      	bcs.n	401bb8 <__aeabi_dmul+0x80>
  401bae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  401bb2:	416d      	adcs	r5, r5
  401bb4:	eb46 0606 	adc.w	r6, r6, r6
  401bb8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  401bbc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  401bc0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  401bc4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  401bc8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  401bcc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  401bd0:	bf88      	it	hi
  401bd2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  401bd6:	d81e      	bhi.n	401c16 <__aeabi_dmul+0xde>
  401bd8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  401bdc:	bf08      	it	eq
  401bde:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  401be2:	f150 0000 	adcs.w	r0, r0, #0
  401be6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401bea:	bd70      	pop	{r4, r5, r6, pc}
  401bec:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  401bf0:	ea46 0101 	orr.w	r1, r6, r1
  401bf4:	ea40 0002 	orr.w	r0, r0, r2
  401bf8:	ea81 0103 	eor.w	r1, r1, r3
  401bfc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  401c00:	bfc2      	ittt	gt
  401c02:	ebd4 050c 	rsbsgt	r5, r4, ip
  401c06:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  401c0a:	bd70      	popgt	{r4, r5, r6, pc}
  401c0c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401c10:	f04f 0e00 	mov.w	lr, #0
  401c14:	3c01      	subs	r4, #1
  401c16:	f300 80ab 	bgt.w	401d70 <__aeabi_dmul+0x238>
  401c1a:	f114 0f36 	cmn.w	r4, #54	; 0x36
  401c1e:	bfde      	ittt	le
  401c20:	2000      	movle	r0, #0
  401c22:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  401c26:	bd70      	pople	{r4, r5, r6, pc}
  401c28:	f1c4 0400 	rsb	r4, r4, #0
  401c2c:	3c20      	subs	r4, #32
  401c2e:	da35      	bge.n	401c9c <__aeabi_dmul+0x164>
  401c30:	340c      	adds	r4, #12
  401c32:	dc1b      	bgt.n	401c6c <__aeabi_dmul+0x134>
  401c34:	f104 0414 	add.w	r4, r4, #20
  401c38:	f1c4 0520 	rsb	r5, r4, #32
  401c3c:	fa00 f305 	lsl.w	r3, r0, r5
  401c40:	fa20 f004 	lsr.w	r0, r0, r4
  401c44:	fa01 f205 	lsl.w	r2, r1, r5
  401c48:	ea40 0002 	orr.w	r0, r0, r2
  401c4c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  401c50:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  401c54:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  401c58:	fa21 f604 	lsr.w	r6, r1, r4
  401c5c:	eb42 0106 	adc.w	r1, r2, r6
  401c60:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401c64:	bf08      	it	eq
  401c66:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401c6a:	bd70      	pop	{r4, r5, r6, pc}
  401c6c:	f1c4 040c 	rsb	r4, r4, #12
  401c70:	f1c4 0520 	rsb	r5, r4, #32
  401c74:	fa00 f304 	lsl.w	r3, r0, r4
  401c78:	fa20 f005 	lsr.w	r0, r0, r5
  401c7c:	fa01 f204 	lsl.w	r2, r1, r4
  401c80:	ea40 0002 	orr.w	r0, r0, r2
  401c84:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401c88:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  401c8c:	f141 0100 	adc.w	r1, r1, #0
  401c90:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401c94:	bf08      	it	eq
  401c96:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401c9a:	bd70      	pop	{r4, r5, r6, pc}
  401c9c:	f1c4 0520 	rsb	r5, r4, #32
  401ca0:	fa00 f205 	lsl.w	r2, r0, r5
  401ca4:	ea4e 0e02 	orr.w	lr, lr, r2
  401ca8:	fa20 f304 	lsr.w	r3, r0, r4
  401cac:	fa01 f205 	lsl.w	r2, r1, r5
  401cb0:	ea43 0302 	orr.w	r3, r3, r2
  401cb4:	fa21 f004 	lsr.w	r0, r1, r4
  401cb8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401cbc:	fa21 f204 	lsr.w	r2, r1, r4
  401cc0:	ea20 0002 	bic.w	r0, r0, r2
  401cc4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  401cc8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401ccc:	bf08      	it	eq
  401cce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401cd2:	bd70      	pop	{r4, r5, r6, pc}
  401cd4:	f094 0f00 	teq	r4, #0
  401cd8:	d10f      	bne.n	401cfa <__aeabi_dmul+0x1c2>
  401cda:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  401cde:	0040      	lsls	r0, r0, #1
  401ce0:	eb41 0101 	adc.w	r1, r1, r1
  401ce4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401ce8:	bf08      	it	eq
  401cea:	3c01      	subeq	r4, #1
  401cec:	d0f7      	beq.n	401cde <__aeabi_dmul+0x1a6>
  401cee:	ea41 0106 	orr.w	r1, r1, r6
  401cf2:	f095 0f00 	teq	r5, #0
  401cf6:	bf18      	it	ne
  401cf8:	4770      	bxne	lr
  401cfa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  401cfe:	0052      	lsls	r2, r2, #1
  401d00:	eb43 0303 	adc.w	r3, r3, r3
  401d04:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  401d08:	bf08      	it	eq
  401d0a:	3d01      	subeq	r5, #1
  401d0c:	d0f7      	beq.n	401cfe <__aeabi_dmul+0x1c6>
  401d0e:	ea43 0306 	orr.w	r3, r3, r6
  401d12:	4770      	bx	lr
  401d14:	ea94 0f0c 	teq	r4, ip
  401d18:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  401d1c:	bf18      	it	ne
  401d1e:	ea95 0f0c 	teqne	r5, ip
  401d22:	d00c      	beq.n	401d3e <__aeabi_dmul+0x206>
  401d24:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401d28:	bf18      	it	ne
  401d2a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  401d2e:	d1d1      	bne.n	401cd4 <__aeabi_dmul+0x19c>
  401d30:	ea81 0103 	eor.w	r1, r1, r3
  401d34:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401d38:	f04f 0000 	mov.w	r0, #0
  401d3c:	bd70      	pop	{r4, r5, r6, pc}
  401d3e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401d42:	bf06      	itte	eq
  401d44:	4610      	moveq	r0, r2
  401d46:	4619      	moveq	r1, r3
  401d48:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  401d4c:	d019      	beq.n	401d82 <__aeabi_dmul+0x24a>
  401d4e:	ea94 0f0c 	teq	r4, ip
  401d52:	d102      	bne.n	401d5a <__aeabi_dmul+0x222>
  401d54:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  401d58:	d113      	bne.n	401d82 <__aeabi_dmul+0x24a>
  401d5a:	ea95 0f0c 	teq	r5, ip
  401d5e:	d105      	bne.n	401d6c <__aeabi_dmul+0x234>
  401d60:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  401d64:	bf1c      	itt	ne
  401d66:	4610      	movne	r0, r2
  401d68:	4619      	movne	r1, r3
  401d6a:	d10a      	bne.n	401d82 <__aeabi_dmul+0x24a>
  401d6c:	ea81 0103 	eor.w	r1, r1, r3
  401d70:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401d74:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  401d78:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  401d7c:	f04f 0000 	mov.w	r0, #0
  401d80:	bd70      	pop	{r4, r5, r6, pc}
  401d82:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  401d86:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  401d8a:	bd70      	pop	{r4, r5, r6, pc}

00401d8c <__aeabi_ddiv>:
  401d8c:	b570      	push	{r4, r5, r6, lr}
  401d8e:	f04f 0cff 	mov.w	ip, #255	; 0xff
  401d92:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  401d96:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  401d9a:	bf1d      	ittte	ne
  401d9c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  401da0:	ea94 0f0c 	teqne	r4, ip
  401da4:	ea95 0f0c 	teqne	r5, ip
  401da8:	f000 f8a7 	bleq	401efa <__aeabi_ddiv+0x16e>
  401dac:	eba4 0405 	sub.w	r4, r4, r5
  401db0:	ea81 0e03 	eor.w	lr, r1, r3
  401db4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  401db8:	ea4f 3101 	mov.w	r1, r1, lsl #12
  401dbc:	f000 8088 	beq.w	401ed0 <__aeabi_ddiv+0x144>
  401dc0:	ea4f 3303 	mov.w	r3, r3, lsl #12
  401dc4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  401dc8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  401dcc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  401dd0:	ea4f 2202 	mov.w	r2, r2, lsl #8
  401dd4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  401dd8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  401ddc:	ea4f 2600 	mov.w	r6, r0, lsl #8
  401de0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  401de4:	429d      	cmp	r5, r3
  401de6:	bf08      	it	eq
  401de8:	4296      	cmpeq	r6, r2
  401dea:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  401dee:	f504 7440 	add.w	r4, r4, #768	; 0x300
  401df2:	d202      	bcs.n	401dfa <__aeabi_ddiv+0x6e>
  401df4:	085b      	lsrs	r3, r3, #1
  401df6:	ea4f 0232 	mov.w	r2, r2, rrx
  401dfa:	1ab6      	subs	r6, r6, r2
  401dfc:	eb65 0503 	sbc.w	r5, r5, r3
  401e00:	085b      	lsrs	r3, r3, #1
  401e02:	ea4f 0232 	mov.w	r2, r2, rrx
  401e06:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  401e0a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  401e0e:	ebb6 0e02 	subs.w	lr, r6, r2
  401e12:	eb75 0e03 	sbcs.w	lr, r5, r3
  401e16:	bf22      	ittt	cs
  401e18:	1ab6      	subcs	r6, r6, r2
  401e1a:	4675      	movcs	r5, lr
  401e1c:	ea40 000c 	orrcs.w	r0, r0, ip
  401e20:	085b      	lsrs	r3, r3, #1
  401e22:	ea4f 0232 	mov.w	r2, r2, rrx
  401e26:	ebb6 0e02 	subs.w	lr, r6, r2
  401e2a:	eb75 0e03 	sbcs.w	lr, r5, r3
  401e2e:	bf22      	ittt	cs
  401e30:	1ab6      	subcs	r6, r6, r2
  401e32:	4675      	movcs	r5, lr
  401e34:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  401e38:	085b      	lsrs	r3, r3, #1
  401e3a:	ea4f 0232 	mov.w	r2, r2, rrx
  401e3e:	ebb6 0e02 	subs.w	lr, r6, r2
  401e42:	eb75 0e03 	sbcs.w	lr, r5, r3
  401e46:	bf22      	ittt	cs
  401e48:	1ab6      	subcs	r6, r6, r2
  401e4a:	4675      	movcs	r5, lr
  401e4c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  401e50:	085b      	lsrs	r3, r3, #1
  401e52:	ea4f 0232 	mov.w	r2, r2, rrx
  401e56:	ebb6 0e02 	subs.w	lr, r6, r2
  401e5a:	eb75 0e03 	sbcs.w	lr, r5, r3
  401e5e:	bf22      	ittt	cs
  401e60:	1ab6      	subcs	r6, r6, r2
  401e62:	4675      	movcs	r5, lr
  401e64:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  401e68:	ea55 0e06 	orrs.w	lr, r5, r6
  401e6c:	d018      	beq.n	401ea0 <__aeabi_ddiv+0x114>
  401e6e:	ea4f 1505 	mov.w	r5, r5, lsl #4
  401e72:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  401e76:	ea4f 1606 	mov.w	r6, r6, lsl #4
  401e7a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  401e7e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  401e82:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  401e86:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  401e8a:	d1c0      	bne.n	401e0e <__aeabi_ddiv+0x82>
  401e8c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401e90:	d10b      	bne.n	401eaa <__aeabi_ddiv+0x11e>
  401e92:	ea41 0100 	orr.w	r1, r1, r0
  401e96:	f04f 0000 	mov.w	r0, #0
  401e9a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  401e9e:	e7b6      	b.n	401e0e <__aeabi_ddiv+0x82>
  401ea0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401ea4:	bf04      	itt	eq
  401ea6:	4301      	orreq	r1, r0
  401ea8:	2000      	moveq	r0, #0
  401eaa:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  401eae:	bf88      	it	hi
  401eb0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  401eb4:	f63f aeaf 	bhi.w	401c16 <__aeabi_dmul+0xde>
  401eb8:	ebb5 0c03 	subs.w	ip, r5, r3
  401ebc:	bf04      	itt	eq
  401ebe:	ebb6 0c02 	subseq.w	ip, r6, r2
  401ec2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  401ec6:	f150 0000 	adcs.w	r0, r0, #0
  401eca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401ece:	bd70      	pop	{r4, r5, r6, pc}
  401ed0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  401ed4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  401ed8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  401edc:	bfc2      	ittt	gt
  401ede:	ebd4 050c 	rsbsgt	r5, r4, ip
  401ee2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  401ee6:	bd70      	popgt	{r4, r5, r6, pc}
  401ee8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401eec:	f04f 0e00 	mov.w	lr, #0
  401ef0:	3c01      	subs	r4, #1
  401ef2:	e690      	b.n	401c16 <__aeabi_dmul+0xde>
  401ef4:	ea45 0e06 	orr.w	lr, r5, r6
  401ef8:	e68d      	b.n	401c16 <__aeabi_dmul+0xde>
  401efa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  401efe:	ea94 0f0c 	teq	r4, ip
  401f02:	bf08      	it	eq
  401f04:	ea95 0f0c 	teqeq	r5, ip
  401f08:	f43f af3b 	beq.w	401d82 <__aeabi_dmul+0x24a>
  401f0c:	ea94 0f0c 	teq	r4, ip
  401f10:	d10a      	bne.n	401f28 <__aeabi_ddiv+0x19c>
  401f12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  401f16:	f47f af34 	bne.w	401d82 <__aeabi_dmul+0x24a>
  401f1a:	ea95 0f0c 	teq	r5, ip
  401f1e:	f47f af25 	bne.w	401d6c <__aeabi_dmul+0x234>
  401f22:	4610      	mov	r0, r2
  401f24:	4619      	mov	r1, r3
  401f26:	e72c      	b.n	401d82 <__aeabi_dmul+0x24a>
  401f28:	ea95 0f0c 	teq	r5, ip
  401f2c:	d106      	bne.n	401f3c <__aeabi_ddiv+0x1b0>
  401f2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  401f32:	f43f aefd 	beq.w	401d30 <__aeabi_dmul+0x1f8>
  401f36:	4610      	mov	r0, r2
  401f38:	4619      	mov	r1, r3
  401f3a:	e722      	b.n	401d82 <__aeabi_dmul+0x24a>
  401f3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401f40:	bf18      	it	ne
  401f42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  401f46:	f47f aec5 	bne.w	401cd4 <__aeabi_dmul+0x19c>
  401f4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  401f4e:	f47f af0d 	bne.w	401d6c <__aeabi_dmul+0x234>
  401f52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  401f56:	f47f aeeb 	bne.w	401d30 <__aeabi_dmul+0x1f8>
  401f5a:	e712      	b.n	401d82 <__aeabi_dmul+0x24a>

00401f5c <__libc_init_array>:
  401f5c:	b570      	push	{r4, r5, r6, lr}
  401f5e:	4e0f      	ldr	r6, [pc, #60]	; (401f9c <__libc_init_array+0x40>)
  401f60:	4d0f      	ldr	r5, [pc, #60]	; (401fa0 <__libc_init_array+0x44>)
  401f62:	1b76      	subs	r6, r6, r5
  401f64:	10b6      	asrs	r6, r6, #2
  401f66:	bf18      	it	ne
  401f68:	2400      	movne	r4, #0
  401f6a:	d005      	beq.n	401f78 <__libc_init_array+0x1c>
  401f6c:	3401      	adds	r4, #1
  401f6e:	f855 3b04 	ldr.w	r3, [r5], #4
  401f72:	4798      	blx	r3
  401f74:	42a6      	cmp	r6, r4
  401f76:	d1f9      	bne.n	401f6c <__libc_init_array+0x10>
  401f78:	4e0a      	ldr	r6, [pc, #40]	; (401fa4 <__libc_init_array+0x48>)
  401f7a:	4d0b      	ldr	r5, [pc, #44]	; (401fa8 <__libc_init_array+0x4c>)
  401f7c:	1b76      	subs	r6, r6, r5
  401f7e:	f004 ff2b 	bl	406dd8 <_init>
  401f82:	10b6      	asrs	r6, r6, #2
  401f84:	bf18      	it	ne
  401f86:	2400      	movne	r4, #0
  401f88:	d006      	beq.n	401f98 <__libc_init_array+0x3c>
  401f8a:	3401      	adds	r4, #1
  401f8c:	f855 3b04 	ldr.w	r3, [r5], #4
  401f90:	4798      	blx	r3
  401f92:	42a6      	cmp	r6, r4
  401f94:	d1f9      	bne.n	401f8a <__libc_init_array+0x2e>
  401f96:	bd70      	pop	{r4, r5, r6, pc}
  401f98:	bd70      	pop	{r4, r5, r6, pc}
  401f9a:	bf00      	nop
  401f9c:	00406de4 	.word	0x00406de4
  401fa0:	00406de4 	.word	0x00406de4
  401fa4:	00406dec 	.word	0x00406dec
  401fa8:	00406de4 	.word	0x00406de4

00401fac <memset>:
  401fac:	b470      	push	{r4, r5, r6}
  401fae:	0786      	lsls	r6, r0, #30
  401fb0:	d046      	beq.n	402040 <memset+0x94>
  401fb2:	1e54      	subs	r4, r2, #1
  401fb4:	2a00      	cmp	r2, #0
  401fb6:	d041      	beq.n	40203c <memset+0x90>
  401fb8:	b2ca      	uxtb	r2, r1
  401fba:	4603      	mov	r3, r0
  401fbc:	e002      	b.n	401fc4 <memset+0x18>
  401fbe:	f114 34ff 	adds.w	r4, r4, #4294967295
  401fc2:	d33b      	bcc.n	40203c <memset+0x90>
  401fc4:	f803 2b01 	strb.w	r2, [r3], #1
  401fc8:	079d      	lsls	r5, r3, #30
  401fca:	d1f8      	bne.n	401fbe <memset+0x12>
  401fcc:	2c03      	cmp	r4, #3
  401fce:	d92e      	bls.n	40202e <memset+0x82>
  401fd0:	b2cd      	uxtb	r5, r1
  401fd2:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  401fd6:	2c0f      	cmp	r4, #15
  401fd8:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  401fdc:	d919      	bls.n	402012 <memset+0x66>
  401fde:	f103 0210 	add.w	r2, r3, #16
  401fe2:	4626      	mov	r6, r4
  401fe4:	3e10      	subs	r6, #16
  401fe6:	2e0f      	cmp	r6, #15
  401fe8:	f842 5c10 	str.w	r5, [r2, #-16]
  401fec:	f842 5c0c 	str.w	r5, [r2, #-12]
  401ff0:	f842 5c08 	str.w	r5, [r2, #-8]
  401ff4:	f842 5c04 	str.w	r5, [r2, #-4]
  401ff8:	f102 0210 	add.w	r2, r2, #16
  401ffc:	d8f2      	bhi.n	401fe4 <memset+0x38>
  401ffe:	f1a4 0210 	sub.w	r2, r4, #16
  402002:	f022 020f 	bic.w	r2, r2, #15
  402006:	f004 040f 	and.w	r4, r4, #15
  40200a:	3210      	adds	r2, #16
  40200c:	2c03      	cmp	r4, #3
  40200e:	4413      	add	r3, r2
  402010:	d90d      	bls.n	40202e <memset+0x82>
  402012:	461e      	mov	r6, r3
  402014:	4622      	mov	r2, r4
  402016:	3a04      	subs	r2, #4
  402018:	2a03      	cmp	r2, #3
  40201a:	f846 5b04 	str.w	r5, [r6], #4
  40201e:	d8fa      	bhi.n	402016 <memset+0x6a>
  402020:	1f22      	subs	r2, r4, #4
  402022:	f022 0203 	bic.w	r2, r2, #3
  402026:	3204      	adds	r2, #4
  402028:	4413      	add	r3, r2
  40202a:	f004 0403 	and.w	r4, r4, #3
  40202e:	b12c      	cbz	r4, 40203c <memset+0x90>
  402030:	b2c9      	uxtb	r1, r1
  402032:	441c      	add	r4, r3
  402034:	f803 1b01 	strb.w	r1, [r3], #1
  402038:	429c      	cmp	r4, r3
  40203a:	d1fb      	bne.n	402034 <memset+0x88>
  40203c:	bc70      	pop	{r4, r5, r6}
  40203e:	4770      	bx	lr
  402040:	4614      	mov	r4, r2
  402042:	4603      	mov	r3, r0
  402044:	e7c2      	b.n	401fcc <memset+0x20>
  402046:	bf00      	nop

00402048 <sprintf>:
  402048:	b40e      	push	{r1, r2, r3}
  40204a:	b5f0      	push	{r4, r5, r6, r7, lr}
  40204c:	b09c      	sub	sp, #112	; 0x70
  40204e:	ab21      	add	r3, sp, #132	; 0x84
  402050:	490f      	ldr	r1, [pc, #60]	; (402090 <sprintf+0x48>)
  402052:	f853 2b04 	ldr.w	r2, [r3], #4
  402056:	9301      	str	r3, [sp, #4]
  402058:	4605      	mov	r5, r0
  40205a:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  40205e:	6808      	ldr	r0, [r1, #0]
  402060:	9502      	str	r5, [sp, #8]
  402062:	f44f 7702 	mov.w	r7, #520	; 0x208
  402066:	f64f 76ff 	movw	r6, #65535	; 0xffff
  40206a:	a902      	add	r1, sp, #8
  40206c:	9506      	str	r5, [sp, #24]
  40206e:	f8ad 7014 	strh.w	r7, [sp, #20]
  402072:	9404      	str	r4, [sp, #16]
  402074:	9407      	str	r4, [sp, #28]
  402076:	f8ad 6016 	strh.w	r6, [sp, #22]
  40207a:	f000 f80b 	bl	402094 <_svfprintf_r>
  40207e:	9b02      	ldr	r3, [sp, #8]
  402080:	2200      	movs	r2, #0
  402082:	701a      	strb	r2, [r3, #0]
  402084:	b01c      	add	sp, #112	; 0x70
  402086:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  40208a:	b003      	add	sp, #12
  40208c:	4770      	bx	lr
  40208e:	bf00      	nop
  402090:	20400024 	.word	0x20400024

00402094 <_svfprintf_r>:
  402094:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402098:	b0c3      	sub	sp, #268	; 0x10c
  40209a:	460c      	mov	r4, r1
  40209c:	910b      	str	r1, [sp, #44]	; 0x2c
  40209e:	4692      	mov	sl, r2
  4020a0:	930f      	str	r3, [sp, #60]	; 0x3c
  4020a2:	900c      	str	r0, [sp, #48]	; 0x30
  4020a4:	f002 fa0c 	bl	4044c0 <_localeconv_r>
  4020a8:	6803      	ldr	r3, [r0, #0]
  4020aa:	931a      	str	r3, [sp, #104]	; 0x68
  4020ac:	4618      	mov	r0, r3
  4020ae:	f003 f8e7 	bl	405280 <strlen>
  4020b2:	89a3      	ldrh	r3, [r4, #12]
  4020b4:	9019      	str	r0, [sp, #100]	; 0x64
  4020b6:	0619      	lsls	r1, r3, #24
  4020b8:	d503      	bpl.n	4020c2 <_svfprintf_r+0x2e>
  4020ba:	6923      	ldr	r3, [r4, #16]
  4020bc:	2b00      	cmp	r3, #0
  4020be:	f001 8003 	beq.w	4030c8 <_svfprintf_r+0x1034>
  4020c2:	2300      	movs	r3, #0
  4020c4:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  4020c8:	9313      	str	r3, [sp, #76]	; 0x4c
  4020ca:	9315      	str	r3, [sp, #84]	; 0x54
  4020cc:	9314      	str	r3, [sp, #80]	; 0x50
  4020ce:	9327      	str	r3, [sp, #156]	; 0x9c
  4020d0:	9326      	str	r3, [sp, #152]	; 0x98
  4020d2:	9318      	str	r3, [sp, #96]	; 0x60
  4020d4:	931b      	str	r3, [sp, #108]	; 0x6c
  4020d6:	9309      	str	r3, [sp, #36]	; 0x24
  4020d8:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  4020dc:	46c8      	mov	r8, r9
  4020de:	9316      	str	r3, [sp, #88]	; 0x58
  4020e0:	9317      	str	r3, [sp, #92]	; 0x5c
  4020e2:	f89a 3000 	ldrb.w	r3, [sl]
  4020e6:	4654      	mov	r4, sl
  4020e8:	b1e3      	cbz	r3, 402124 <_svfprintf_r+0x90>
  4020ea:	2b25      	cmp	r3, #37	; 0x25
  4020ec:	d102      	bne.n	4020f4 <_svfprintf_r+0x60>
  4020ee:	e019      	b.n	402124 <_svfprintf_r+0x90>
  4020f0:	2b25      	cmp	r3, #37	; 0x25
  4020f2:	d003      	beq.n	4020fc <_svfprintf_r+0x68>
  4020f4:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  4020f8:	2b00      	cmp	r3, #0
  4020fa:	d1f9      	bne.n	4020f0 <_svfprintf_r+0x5c>
  4020fc:	eba4 050a 	sub.w	r5, r4, sl
  402100:	b185      	cbz	r5, 402124 <_svfprintf_r+0x90>
  402102:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402104:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402106:	f8c8 a000 	str.w	sl, [r8]
  40210a:	3301      	adds	r3, #1
  40210c:	442a      	add	r2, r5
  40210e:	2b07      	cmp	r3, #7
  402110:	f8c8 5004 	str.w	r5, [r8, #4]
  402114:	9227      	str	r2, [sp, #156]	; 0x9c
  402116:	9326      	str	r3, [sp, #152]	; 0x98
  402118:	dc7f      	bgt.n	40221a <_svfprintf_r+0x186>
  40211a:	f108 0808 	add.w	r8, r8, #8
  40211e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402120:	442b      	add	r3, r5
  402122:	9309      	str	r3, [sp, #36]	; 0x24
  402124:	7823      	ldrb	r3, [r4, #0]
  402126:	2b00      	cmp	r3, #0
  402128:	d07f      	beq.n	40222a <_svfprintf_r+0x196>
  40212a:	2300      	movs	r3, #0
  40212c:	461a      	mov	r2, r3
  40212e:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402132:	4619      	mov	r1, r3
  402134:	930d      	str	r3, [sp, #52]	; 0x34
  402136:	469b      	mov	fp, r3
  402138:	f04f 30ff 	mov.w	r0, #4294967295
  40213c:	7863      	ldrb	r3, [r4, #1]
  40213e:	900a      	str	r0, [sp, #40]	; 0x28
  402140:	f104 0a01 	add.w	sl, r4, #1
  402144:	f10a 0a01 	add.w	sl, sl, #1
  402148:	f1a3 0020 	sub.w	r0, r3, #32
  40214c:	2858      	cmp	r0, #88	; 0x58
  40214e:	f200 83c1 	bhi.w	4028d4 <_svfprintf_r+0x840>
  402152:	e8df f010 	tbh	[pc, r0, lsl #1]
  402156:	0238      	.short	0x0238
  402158:	03bf03bf 	.word	0x03bf03bf
  40215c:	03bf0240 	.word	0x03bf0240
  402160:	03bf03bf 	.word	0x03bf03bf
  402164:	03bf03bf 	.word	0x03bf03bf
  402168:	024503bf 	.word	0x024503bf
  40216c:	03bf0203 	.word	0x03bf0203
  402170:	026b005d 	.word	0x026b005d
  402174:	028603bf 	.word	0x028603bf
  402178:	039d039d 	.word	0x039d039d
  40217c:	039d039d 	.word	0x039d039d
  402180:	039d039d 	.word	0x039d039d
  402184:	039d039d 	.word	0x039d039d
  402188:	03bf039d 	.word	0x03bf039d
  40218c:	03bf03bf 	.word	0x03bf03bf
  402190:	03bf03bf 	.word	0x03bf03bf
  402194:	03bf03bf 	.word	0x03bf03bf
  402198:	03bf03bf 	.word	0x03bf03bf
  40219c:	033703bf 	.word	0x033703bf
  4021a0:	03bf0357 	.word	0x03bf0357
  4021a4:	03bf0357 	.word	0x03bf0357
  4021a8:	03bf03bf 	.word	0x03bf03bf
  4021ac:	039803bf 	.word	0x039803bf
  4021b0:	03bf03bf 	.word	0x03bf03bf
  4021b4:	03bf03ad 	.word	0x03bf03ad
  4021b8:	03bf03bf 	.word	0x03bf03bf
  4021bc:	03bf03bf 	.word	0x03bf03bf
  4021c0:	03bf0259 	.word	0x03bf0259
  4021c4:	031e03bf 	.word	0x031e03bf
  4021c8:	03bf03bf 	.word	0x03bf03bf
  4021cc:	03bf03bf 	.word	0x03bf03bf
  4021d0:	03bf03bf 	.word	0x03bf03bf
  4021d4:	03bf03bf 	.word	0x03bf03bf
  4021d8:	03bf03bf 	.word	0x03bf03bf
  4021dc:	02db02c6 	.word	0x02db02c6
  4021e0:	03570357 	.word	0x03570357
  4021e4:	028b0357 	.word	0x028b0357
  4021e8:	03bf02db 	.word	0x03bf02db
  4021ec:	029003bf 	.word	0x029003bf
  4021f0:	029d03bf 	.word	0x029d03bf
  4021f4:	02b401cc 	.word	0x02b401cc
  4021f8:	03bf0208 	.word	0x03bf0208
  4021fc:	03bf01e1 	.word	0x03bf01e1
  402200:	03bf007e 	.word	0x03bf007e
  402204:	020d03bf 	.word	0x020d03bf
  402208:	980d      	ldr	r0, [sp, #52]	; 0x34
  40220a:	930f      	str	r3, [sp, #60]	; 0x3c
  40220c:	4240      	negs	r0, r0
  40220e:	900d      	str	r0, [sp, #52]	; 0x34
  402210:	f04b 0b04 	orr.w	fp, fp, #4
  402214:	f89a 3000 	ldrb.w	r3, [sl]
  402218:	e794      	b.n	402144 <_svfprintf_r+0xb0>
  40221a:	aa25      	add	r2, sp, #148	; 0x94
  40221c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40221e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402220:	f003 f89c 	bl	40535c <__ssprint_r>
  402224:	b940      	cbnz	r0, 402238 <_svfprintf_r+0x1a4>
  402226:	46c8      	mov	r8, r9
  402228:	e779      	b.n	40211e <_svfprintf_r+0x8a>
  40222a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  40222c:	b123      	cbz	r3, 402238 <_svfprintf_r+0x1a4>
  40222e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402230:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402232:	aa25      	add	r2, sp, #148	; 0x94
  402234:	f003 f892 	bl	40535c <__ssprint_r>
  402238:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40223a:	899b      	ldrh	r3, [r3, #12]
  40223c:	f013 0f40 	tst.w	r3, #64	; 0x40
  402240:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402242:	bf18      	it	ne
  402244:	f04f 33ff 	movne.w	r3, #4294967295
  402248:	9309      	str	r3, [sp, #36]	; 0x24
  40224a:	9809      	ldr	r0, [sp, #36]	; 0x24
  40224c:	b043      	add	sp, #268	; 0x10c
  40224e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402252:	f01b 0f20 	tst.w	fp, #32
  402256:	9311      	str	r3, [sp, #68]	; 0x44
  402258:	f040 81dd 	bne.w	402616 <_svfprintf_r+0x582>
  40225c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40225e:	f01b 0f10 	tst.w	fp, #16
  402262:	4613      	mov	r3, r2
  402264:	f040 856e 	bne.w	402d44 <_svfprintf_r+0xcb0>
  402268:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40226c:	f000 856a 	beq.w	402d44 <_svfprintf_r+0xcb0>
  402270:	8814      	ldrh	r4, [r2, #0]
  402272:	3204      	adds	r2, #4
  402274:	2500      	movs	r5, #0
  402276:	2301      	movs	r3, #1
  402278:	920f      	str	r2, [sp, #60]	; 0x3c
  40227a:	2700      	movs	r7, #0
  40227c:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402280:	990a      	ldr	r1, [sp, #40]	; 0x28
  402282:	1c4a      	adds	r2, r1, #1
  402284:	f000 8265 	beq.w	402752 <_svfprintf_r+0x6be>
  402288:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  40228c:	9207      	str	r2, [sp, #28]
  40228e:	ea54 0205 	orrs.w	r2, r4, r5
  402292:	f040 8264 	bne.w	40275e <_svfprintf_r+0x6ca>
  402296:	2900      	cmp	r1, #0
  402298:	f040 843c 	bne.w	402b14 <_svfprintf_r+0xa80>
  40229c:	2b00      	cmp	r3, #0
  40229e:	f040 84d7 	bne.w	402c50 <_svfprintf_r+0xbbc>
  4022a2:	f01b 0301 	ands.w	r3, fp, #1
  4022a6:	930e      	str	r3, [sp, #56]	; 0x38
  4022a8:	f000 8604 	beq.w	402eb4 <_svfprintf_r+0xe20>
  4022ac:	ae42      	add	r6, sp, #264	; 0x108
  4022ae:	2330      	movs	r3, #48	; 0x30
  4022b0:	f806 3d41 	strb.w	r3, [r6, #-65]!
  4022b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4022b6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4022b8:	4293      	cmp	r3, r2
  4022ba:	bfb8      	it	lt
  4022bc:	4613      	movlt	r3, r2
  4022be:	9308      	str	r3, [sp, #32]
  4022c0:	2300      	movs	r3, #0
  4022c2:	9312      	str	r3, [sp, #72]	; 0x48
  4022c4:	b117      	cbz	r7, 4022cc <_svfprintf_r+0x238>
  4022c6:	9b08      	ldr	r3, [sp, #32]
  4022c8:	3301      	adds	r3, #1
  4022ca:	9308      	str	r3, [sp, #32]
  4022cc:	9b07      	ldr	r3, [sp, #28]
  4022ce:	f013 0302 	ands.w	r3, r3, #2
  4022d2:	9310      	str	r3, [sp, #64]	; 0x40
  4022d4:	d002      	beq.n	4022dc <_svfprintf_r+0x248>
  4022d6:	9b08      	ldr	r3, [sp, #32]
  4022d8:	3302      	adds	r3, #2
  4022da:	9308      	str	r3, [sp, #32]
  4022dc:	9b07      	ldr	r3, [sp, #28]
  4022de:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  4022e2:	f040 830e 	bne.w	402902 <_svfprintf_r+0x86e>
  4022e6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4022e8:	9a08      	ldr	r2, [sp, #32]
  4022ea:	eba3 0b02 	sub.w	fp, r3, r2
  4022ee:	f1bb 0f00 	cmp.w	fp, #0
  4022f2:	f340 8306 	ble.w	402902 <_svfprintf_r+0x86e>
  4022f6:	f1bb 0f10 	cmp.w	fp, #16
  4022fa:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4022fc:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4022fe:	dd29      	ble.n	402354 <_svfprintf_r+0x2c0>
  402300:	4643      	mov	r3, r8
  402302:	4621      	mov	r1, r4
  402304:	46a8      	mov	r8, r5
  402306:	2710      	movs	r7, #16
  402308:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40230a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  40230c:	e006      	b.n	40231c <_svfprintf_r+0x288>
  40230e:	f1ab 0b10 	sub.w	fp, fp, #16
  402312:	f1bb 0f10 	cmp.w	fp, #16
  402316:	f103 0308 	add.w	r3, r3, #8
  40231a:	dd18      	ble.n	40234e <_svfprintf_r+0x2ba>
  40231c:	3201      	adds	r2, #1
  40231e:	48b7      	ldr	r0, [pc, #732]	; (4025fc <_svfprintf_r+0x568>)
  402320:	9226      	str	r2, [sp, #152]	; 0x98
  402322:	3110      	adds	r1, #16
  402324:	2a07      	cmp	r2, #7
  402326:	9127      	str	r1, [sp, #156]	; 0x9c
  402328:	e883 0081 	stmia.w	r3, {r0, r7}
  40232c:	ddef      	ble.n	40230e <_svfprintf_r+0x27a>
  40232e:	aa25      	add	r2, sp, #148	; 0x94
  402330:	4629      	mov	r1, r5
  402332:	4620      	mov	r0, r4
  402334:	f003 f812 	bl	40535c <__ssprint_r>
  402338:	2800      	cmp	r0, #0
  40233a:	f47f af7d 	bne.w	402238 <_svfprintf_r+0x1a4>
  40233e:	f1ab 0b10 	sub.w	fp, fp, #16
  402342:	f1bb 0f10 	cmp.w	fp, #16
  402346:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402348:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40234a:	464b      	mov	r3, r9
  40234c:	dce6      	bgt.n	40231c <_svfprintf_r+0x288>
  40234e:	4645      	mov	r5, r8
  402350:	460c      	mov	r4, r1
  402352:	4698      	mov	r8, r3
  402354:	3201      	adds	r2, #1
  402356:	4ba9      	ldr	r3, [pc, #676]	; (4025fc <_svfprintf_r+0x568>)
  402358:	9226      	str	r2, [sp, #152]	; 0x98
  40235a:	445c      	add	r4, fp
  40235c:	2a07      	cmp	r2, #7
  40235e:	9427      	str	r4, [sp, #156]	; 0x9c
  402360:	e888 0808 	stmia.w	r8, {r3, fp}
  402364:	f300 8498 	bgt.w	402c98 <_svfprintf_r+0xc04>
  402368:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40236c:	f108 0808 	add.w	r8, r8, #8
  402370:	b177      	cbz	r7, 402390 <_svfprintf_r+0x2fc>
  402372:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402374:	3301      	adds	r3, #1
  402376:	3401      	adds	r4, #1
  402378:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  40237c:	2201      	movs	r2, #1
  40237e:	2b07      	cmp	r3, #7
  402380:	9427      	str	r4, [sp, #156]	; 0x9c
  402382:	9326      	str	r3, [sp, #152]	; 0x98
  402384:	e888 0006 	stmia.w	r8, {r1, r2}
  402388:	f300 83db 	bgt.w	402b42 <_svfprintf_r+0xaae>
  40238c:	f108 0808 	add.w	r8, r8, #8
  402390:	9b10      	ldr	r3, [sp, #64]	; 0x40
  402392:	b16b      	cbz	r3, 4023b0 <_svfprintf_r+0x31c>
  402394:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402396:	3301      	adds	r3, #1
  402398:	3402      	adds	r4, #2
  40239a:	a91e      	add	r1, sp, #120	; 0x78
  40239c:	2202      	movs	r2, #2
  40239e:	2b07      	cmp	r3, #7
  4023a0:	9427      	str	r4, [sp, #156]	; 0x9c
  4023a2:	9326      	str	r3, [sp, #152]	; 0x98
  4023a4:	e888 0006 	stmia.w	r8, {r1, r2}
  4023a8:	f300 83d6 	bgt.w	402b58 <_svfprintf_r+0xac4>
  4023ac:	f108 0808 	add.w	r8, r8, #8
  4023b0:	2d80      	cmp	r5, #128	; 0x80
  4023b2:	f000 8315 	beq.w	4029e0 <_svfprintf_r+0x94c>
  4023b6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4023b8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4023ba:	1a9f      	subs	r7, r3, r2
  4023bc:	2f00      	cmp	r7, #0
  4023be:	dd36      	ble.n	40242e <_svfprintf_r+0x39a>
  4023c0:	2f10      	cmp	r7, #16
  4023c2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4023c4:	4d8e      	ldr	r5, [pc, #568]	; (402600 <_svfprintf_r+0x56c>)
  4023c6:	dd27      	ble.n	402418 <_svfprintf_r+0x384>
  4023c8:	4642      	mov	r2, r8
  4023ca:	4621      	mov	r1, r4
  4023cc:	46b0      	mov	r8, r6
  4023ce:	f04f 0b10 	mov.w	fp, #16
  4023d2:	462e      	mov	r6, r5
  4023d4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4023d6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4023d8:	e004      	b.n	4023e4 <_svfprintf_r+0x350>
  4023da:	3f10      	subs	r7, #16
  4023dc:	2f10      	cmp	r7, #16
  4023de:	f102 0208 	add.w	r2, r2, #8
  4023e2:	dd15      	ble.n	402410 <_svfprintf_r+0x37c>
  4023e4:	3301      	adds	r3, #1
  4023e6:	3110      	adds	r1, #16
  4023e8:	2b07      	cmp	r3, #7
  4023ea:	9127      	str	r1, [sp, #156]	; 0x9c
  4023ec:	9326      	str	r3, [sp, #152]	; 0x98
  4023ee:	e882 0840 	stmia.w	r2, {r6, fp}
  4023f2:	ddf2      	ble.n	4023da <_svfprintf_r+0x346>
  4023f4:	aa25      	add	r2, sp, #148	; 0x94
  4023f6:	4629      	mov	r1, r5
  4023f8:	4620      	mov	r0, r4
  4023fa:	f002 ffaf 	bl	40535c <__ssprint_r>
  4023fe:	2800      	cmp	r0, #0
  402400:	f47f af1a 	bne.w	402238 <_svfprintf_r+0x1a4>
  402404:	3f10      	subs	r7, #16
  402406:	2f10      	cmp	r7, #16
  402408:	9927      	ldr	r1, [sp, #156]	; 0x9c
  40240a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40240c:	464a      	mov	r2, r9
  40240e:	dce9      	bgt.n	4023e4 <_svfprintf_r+0x350>
  402410:	4635      	mov	r5, r6
  402412:	460c      	mov	r4, r1
  402414:	4646      	mov	r6, r8
  402416:	4690      	mov	r8, r2
  402418:	3301      	adds	r3, #1
  40241a:	443c      	add	r4, r7
  40241c:	2b07      	cmp	r3, #7
  40241e:	9427      	str	r4, [sp, #156]	; 0x9c
  402420:	9326      	str	r3, [sp, #152]	; 0x98
  402422:	e888 00a0 	stmia.w	r8, {r5, r7}
  402426:	f300 8381 	bgt.w	402b2c <_svfprintf_r+0xa98>
  40242a:	f108 0808 	add.w	r8, r8, #8
  40242e:	9b07      	ldr	r3, [sp, #28]
  402430:	05df      	lsls	r7, r3, #23
  402432:	f100 8268 	bmi.w	402906 <_svfprintf_r+0x872>
  402436:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402438:	990e      	ldr	r1, [sp, #56]	; 0x38
  40243a:	f8c8 6000 	str.w	r6, [r8]
  40243e:	3301      	adds	r3, #1
  402440:	440c      	add	r4, r1
  402442:	2b07      	cmp	r3, #7
  402444:	9427      	str	r4, [sp, #156]	; 0x9c
  402446:	f8c8 1004 	str.w	r1, [r8, #4]
  40244a:	9326      	str	r3, [sp, #152]	; 0x98
  40244c:	f300 834d 	bgt.w	402aea <_svfprintf_r+0xa56>
  402450:	f108 0808 	add.w	r8, r8, #8
  402454:	9b07      	ldr	r3, [sp, #28]
  402456:	075b      	lsls	r3, r3, #29
  402458:	d53a      	bpl.n	4024d0 <_svfprintf_r+0x43c>
  40245a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40245c:	9a08      	ldr	r2, [sp, #32]
  40245e:	1a9d      	subs	r5, r3, r2
  402460:	2d00      	cmp	r5, #0
  402462:	dd35      	ble.n	4024d0 <_svfprintf_r+0x43c>
  402464:	2d10      	cmp	r5, #16
  402466:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402468:	dd20      	ble.n	4024ac <_svfprintf_r+0x418>
  40246a:	2610      	movs	r6, #16
  40246c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  40246e:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  402472:	e004      	b.n	40247e <_svfprintf_r+0x3ea>
  402474:	3d10      	subs	r5, #16
  402476:	2d10      	cmp	r5, #16
  402478:	f108 0808 	add.w	r8, r8, #8
  40247c:	dd16      	ble.n	4024ac <_svfprintf_r+0x418>
  40247e:	3301      	adds	r3, #1
  402480:	4a5e      	ldr	r2, [pc, #376]	; (4025fc <_svfprintf_r+0x568>)
  402482:	9326      	str	r3, [sp, #152]	; 0x98
  402484:	3410      	adds	r4, #16
  402486:	2b07      	cmp	r3, #7
  402488:	9427      	str	r4, [sp, #156]	; 0x9c
  40248a:	e888 0044 	stmia.w	r8, {r2, r6}
  40248e:	ddf1      	ble.n	402474 <_svfprintf_r+0x3e0>
  402490:	aa25      	add	r2, sp, #148	; 0x94
  402492:	4659      	mov	r1, fp
  402494:	4638      	mov	r0, r7
  402496:	f002 ff61 	bl	40535c <__ssprint_r>
  40249a:	2800      	cmp	r0, #0
  40249c:	f47f aecc 	bne.w	402238 <_svfprintf_r+0x1a4>
  4024a0:	3d10      	subs	r5, #16
  4024a2:	2d10      	cmp	r5, #16
  4024a4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4024a6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4024a8:	46c8      	mov	r8, r9
  4024aa:	dce8      	bgt.n	40247e <_svfprintf_r+0x3ea>
  4024ac:	3301      	adds	r3, #1
  4024ae:	4a53      	ldr	r2, [pc, #332]	; (4025fc <_svfprintf_r+0x568>)
  4024b0:	9326      	str	r3, [sp, #152]	; 0x98
  4024b2:	442c      	add	r4, r5
  4024b4:	2b07      	cmp	r3, #7
  4024b6:	9427      	str	r4, [sp, #156]	; 0x9c
  4024b8:	e888 0024 	stmia.w	r8, {r2, r5}
  4024bc:	dd08      	ble.n	4024d0 <_svfprintf_r+0x43c>
  4024be:	aa25      	add	r2, sp, #148	; 0x94
  4024c0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4024c2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4024c4:	f002 ff4a 	bl	40535c <__ssprint_r>
  4024c8:	2800      	cmp	r0, #0
  4024ca:	f47f aeb5 	bne.w	402238 <_svfprintf_r+0x1a4>
  4024ce:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4024d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4024d2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  4024d4:	9908      	ldr	r1, [sp, #32]
  4024d6:	428a      	cmp	r2, r1
  4024d8:	bfac      	ite	ge
  4024da:	189b      	addge	r3, r3, r2
  4024dc:	185b      	addlt	r3, r3, r1
  4024de:	9309      	str	r3, [sp, #36]	; 0x24
  4024e0:	2c00      	cmp	r4, #0
  4024e2:	f040 830d 	bne.w	402b00 <_svfprintf_r+0xa6c>
  4024e6:	2300      	movs	r3, #0
  4024e8:	9326      	str	r3, [sp, #152]	; 0x98
  4024ea:	46c8      	mov	r8, r9
  4024ec:	e5f9      	b.n	4020e2 <_svfprintf_r+0x4e>
  4024ee:	9311      	str	r3, [sp, #68]	; 0x44
  4024f0:	f01b 0320 	ands.w	r3, fp, #32
  4024f4:	f040 81e3 	bne.w	4028be <_svfprintf_r+0x82a>
  4024f8:	f01b 0210 	ands.w	r2, fp, #16
  4024fc:	f040 842e 	bne.w	402d5c <_svfprintf_r+0xcc8>
  402500:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  402504:	f000 842a 	beq.w	402d5c <_svfprintf_r+0xcc8>
  402508:	990f      	ldr	r1, [sp, #60]	; 0x3c
  40250a:	4613      	mov	r3, r2
  40250c:	460a      	mov	r2, r1
  40250e:	3204      	adds	r2, #4
  402510:	880c      	ldrh	r4, [r1, #0]
  402512:	920f      	str	r2, [sp, #60]	; 0x3c
  402514:	2500      	movs	r5, #0
  402516:	e6b0      	b.n	40227a <_svfprintf_r+0x1e6>
  402518:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40251a:	9311      	str	r3, [sp, #68]	; 0x44
  40251c:	6816      	ldr	r6, [r2, #0]
  40251e:	2400      	movs	r4, #0
  402520:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  402524:	1d15      	adds	r5, r2, #4
  402526:	2e00      	cmp	r6, #0
  402528:	f000 86a7 	beq.w	40327a <_svfprintf_r+0x11e6>
  40252c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40252e:	1c53      	adds	r3, r2, #1
  402530:	f000 8609 	beq.w	403146 <_svfprintf_r+0x10b2>
  402534:	4621      	mov	r1, r4
  402536:	4630      	mov	r0, r6
  402538:	f002 fa8a 	bl	404a50 <memchr>
  40253c:	2800      	cmp	r0, #0
  40253e:	f000 86e1 	beq.w	403304 <_svfprintf_r+0x1270>
  402542:	1b83      	subs	r3, r0, r6
  402544:	930e      	str	r3, [sp, #56]	; 0x38
  402546:	940a      	str	r4, [sp, #40]	; 0x28
  402548:	950f      	str	r5, [sp, #60]	; 0x3c
  40254a:	f8cd b01c 	str.w	fp, [sp, #28]
  40254e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402552:	9308      	str	r3, [sp, #32]
  402554:	9412      	str	r4, [sp, #72]	; 0x48
  402556:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40255a:	e6b3      	b.n	4022c4 <_svfprintf_r+0x230>
  40255c:	f89a 3000 	ldrb.w	r3, [sl]
  402560:	2201      	movs	r2, #1
  402562:	212b      	movs	r1, #43	; 0x2b
  402564:	e5ee      	b.n	402144 <_svfprintf_r+0xb0>
  402566:	f04b 0b20 	orr.w	fp, fp, #32
  40256a:	f89a 3000 	ldrb.w	r3, [sl]
  40256e:	e5e9      	b.n	402144 <_svfprintf_r+0xb0>
  402570:	9311      	str	r3, [sp, #68]	; 0x44
  402572:	2a00      	cmp	r2, #0
  402574:	f040 8795 	bne.w	4034a2 <_svfprintf_r+0x140e>
  402578:	4b22      	ldr	r3, [pc, #136]	; (402604 <_svfprintf_r+0x570>)
  40257a:	9318      	str	r3, [sp, #96]	; 0x60
  40257c:	f01b 0f20 	tst.w	fp, #32
  402580:	f040 8111 	bne.w	4027a6 <_svfprintf_r+0x712>
  402584:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402586:	f01b 0f10 	tst.w	fp, #16
  40258a:	4613      	mov	r3, r2
  40258c:	f040 83e1 	bne.w	402d52 <_svfprintf_r+0xcbe>
  402590:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402594:	f000 83dd 	beq.w	402d52 <_svfprintf_r+0xcbe>
  402598:	3304      	adds	r3, #4
  40259a:	8814      	ldrh	r4, [r2, #0]
  40259c:	930f      	str	r3, [sp, #60]	; 0x3c
  40259e:	2500      	movs	r5, #0
  4025a0:	f01b 0f01 	tst.w	fp, #1
  4025a4:	f000 810c 	beq.w	4027c0 <_svfprintf_r+0x72c>
  4025a8:	ea54 0305 	orrs.w	r3, r4, r5
  4025ac:	f000 8108 	beq.w	4027c0 <_svfprintf_r+0x72c>
  4025b0:	2330      	movs	r3, #48	; 0x30
  4025b2:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  4025b6:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  4025ba:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  4025be:	f04b 0b02 	orr.w	fp, fp, #2
  4025c2:	2302      	movs	r3, #2
  4025c4:	e659      	b.n	40227a <_svfprintf_r+0x1e6>
  4025c6:	f89a 3000 	ldrb.w	r3, [sl]
  4025ca:	2900      	cmp	r1, #0
  4025cc:	f47f adba 	bne.w	402144 <_svfprintf_r+0xb0>
  4025d0:	2201      	movs	r2, #1
  4025d2:	2120      	movs	r1, #32
  4025d4:	e5b6      	b.n	402144 <_svfprintf_r+0xb0>
  4025d6:	f04b 0b01 	orr.w	fp, fp, #1
  4025da:	f89a 3000 	ldrb.w	r3, [sl]
  4025de:	e5b1      	b.n	402144 <_svfprintf_r+0xb0>
  4025e0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  4025e2:	6823      	ldr	r3, [r4, #0]
  4025e4:	930d      	str	r3, [sp, #52]	; 0x34
  4025e6:	4618      	mov	r0, r3
  4025e8:	2800      	cmp	r0, #0
  4025ea:	4623      	mov	r3, r4
  4025ec:	f103 0304 	add.w	r3, r3, #4
  4025f0:	f6ff ae0a 	blt.w	402208 <_svfprintf_r+0x174>
  4025f4:	930f      	str	r3, [sp, #60]	; 0x3c
  4025f6:	f89a 3000 	ldrb.w	r3, [sl]
  4025fa:	e5a3      	b.n	402144 <_svfprintf_r+0xb0>
  4025fc:	00406b94 	.word	0x00406b94
  402600:	00406ba4 	.word	0x00406ba4
  402604:	00406b74 	.word	0x00406b74
  402608:	f04b 0b10 	orr.w	fp, fp, #16
  40260c:	f01b 0f20 	tst.w	fp, #32
  402610:	9311      	str	r3, [sp, #68]	; 0x44
  402612:	f43f ae23 	beq.w	40225c <_svfprintf_r+0x1c8>
  402616:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402618:	3507      	adds	r5, #7
  40261a:	f025 0307 	bic.w	r3, r5, #7
  40261e:	f103 0208 	add.w	r2, r3, #8
  402622:	e9d3 4500 	ldrd	r4, r5, [r3]
  402626:	920f      	str	r2, [sp, #60]	; 0x3c
  402628:	2301      	movs	r3, #1
  40262a:	e626      	b.n	40227a <_svfprintf_r+0x1e6>
  40262c:	f89a 3000 	ldrb.w	r3, [sl]
  402630:	2b2a      	cmp	r3, #42	; 0x2a
  402632:	f10a 0401 	add.w	r4, sl, #1
  402636:	f000 8727 	beq.w	403488 <_svfprintf_r+0x13f4>
  40263a:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40263e:	2809      	cmp	r0, #9
  402640:	46a2      	mov	sl, r4
  402642:	f200 86ad 	bhi.w	4033a0 <_svfprintf_r+0x130c>
  402646:	2300      	movs	r3, #0
  402648:	461c      	mov	r4, r3
  40264a:	f81a 3b01 	ldrb.w	r3, [sl], #1
  40264e:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  402652:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  402656:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40265a:	2809      	cmp	r0, #9
  40265c:	d9f5      	bls.n	40264a <_svfprintf_r+0x5b6>
  40265e:	940a      	str	r4, [sp, #40]	; 0x28
  402660:	e572      	b.n	402148 <_svfprintf_r+0xb4>
  402662:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  402666:	f89a 3000 	ldrb.w	r3, [sl]
  40266a:	e56b      	b.n	402144 <_svfprintf_r+0xb0>
  40266c:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  402670:	f89a 3000 	ldrb.w	r3, [sl]
  402674:	e566      	b.n	402144 <_svfprintf_r+0xb0>
  402676:	f89a 3000 	ldrb.w	r3, [sl]
  40267a:	2b6c      	cmp	r3, #108	; 0x6c
  40267c:	bf03      	ittte	eq
  40267e:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  402682:	f04b 0b20 	orreq.w	fp, fp, #32
  402686:	f10a 0a01 	addeq.w	sl, sl, #1
  40268a:	f04b 0b10 	orrne.w	fp, fp, #16
  40268e:	e559      	b.n	402144 <_svfprintf_r+0xb0>
  402690:	2a00      	cmp	r2, #0
  402692:	f040 8711 	bne.w	4034b8 <_svfprintf_r+0x1424>
  402696:	f01b 0f20 	tst.w	fp, #32
  40269a:	f040 84f9 	bne.w	403090 <_svfprintf_r+0xffc>
  40269e:	f01b 0f10 	tst.w	fp, #16
  4026a2:	f040 84ac 	bne.w	402ffe <_svfprintf_r+0xf6a>
  4026a6:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4026aa:	f000 84a8 	beq.w	402ffe <_svfprintf_r+0xf6a>
  4026ae:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4026b0:	6813      	ldr	r3, [r2, #0]
  4026b2:	3204      	adds	r2, #4
  4026b4:	920f      	str	r2, [sp, #60]	; 0x3c
  4026b6:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  4026ba:	801a      	strh	r2, [r3, #0]
  4026bc:	e511      	b.n	4020e2 <_svfprintf_r+0x4e>
  4026be:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4026c0:	4bb3      	ldr	r3, [pc, #716]	; (402990 <_svfprintf_r+0x8fc>)
  4026c2:	680c      	ldr	r4, [r1, #0]
  4026c4:	9318      	str	r3, [sp, #96]	; 0x60
  4026c6:	2230      	movs	r2, #48	; 0x30
  4026c8:	2378      	movs	r3, #120	; 0x78
  4026ca:	3104      	adds	r1, #4
  4026cc:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  4026d0:	9311      	str	r3, [sp, #68]	; 0x44
  4026d2:	f04b 0b02 	orr.w	fp, fp, #2
  4026d6:	910f      	str	r1, [sp, #60]	; 0x3c
  4026d8:	2500      	movs	r5, #0
  4026da:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  4026de:	2302      	movs	r3, #2
  4026e0:	e5cb      	b.n	40227a <_svfprintf_r+0x1e6>
  4026e2:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4026e4:	9311      	str	r3, [sp, #68]	; 0x44
  4026e6:	680a      	ldr	r2, [r1, #0]
  4026e8:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  4026ec:	2300      	movs	r3, #0
  4026ee:	460a      	mov	r2, r1
  4026f0:	461f      	mov	r7, r3
  4026f2:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4026f6:	3204      	adds	r2, #4
  4026f8:	2301      	movs	r3, #1
  4026fa:	9308      	str	r3, [sp, #32]
  4026fc:	f8cd b01c 	str.w	fp, [sp, #28]
  402700:	970a      	str	r7, [sp, #40]	; 0x28
  402702:	9712      	str	r7, [sp, #72]	; 0x48
  402704:	920f      	str	r2, [sp, #60]	; 0x3c
  402706:	930e      	str	r3, [sp, #56]	; 0x38
  402708:	ae28      	add	r6, sp, #160	; 0xa0
  40270a:	e5df      	b.n	4022cc <_svfprintf_r+0x238>
  40270c:	9311      	str	r3, [sp, #68]	; 0x44
  40270e:	2a00      	cmp	r2, #0
  402710:	f040 86ea 	bne.w	4034e8 <_svfprintf_r+0x1454>
  402714:	f01b 0f20 	tst.w	fp, #32
  402718:	d15d      	bne.n	4027d6 <_svfprintf_r+0x742>
  40271a:	f01b 0f10 	tst.w	fp, #16
  40271e:	f040 8308 	bne.w	402d32 <_svfprintf_r+0xc9e>
  402722:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402726:	f000 8304 	beq.w	402d32 <_svfprintf_r+0xc9e>
  40272a:	990f      	ldr	r1, [sp, #60]	; 0x3c
  40272c:	f9b1 4000 	ldrsh.w	r4, [r1]
  402730:	3104      	adds	r1, #4
  402732:	17e5      	asrs	r5, r4, #31
  402734:	4622      	mov	r2, r4
  402736:	462b      	mov	r3, r5
  402738:	910f      	str	r1, [sp, #60]	; 0x3c
  40273a:	2a00      	cmp	r2, #0
  40273c:	f173 0300 	sbcs.w	r3, r3, #0
  402740:	db58      	blt.n	4027f4 <_svfprintf_r+0x760>
  402742:	990a      	ldr	r1, [sp, #40]	; 0x28
  402744:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402748:	1c4a      	adds	r2, r1, #1
  40274a:	f04f 0301 	mov.w	r3, #1
  40274e:	f47f ad9b 	bne.w	402288 <_svfprintf_r+0x1f4>
  402752:	ea54 0205 	orrs.w	r2, r4, r5
  402756:	f000 81df 	beq.w	402b18 <_svfprintf_r+0xa84>
  40275a:	f8cd b01c 	str.w	fp, [sp, #28]
  40275e:	2b01      	cmp	r3, #1
  402760:	f000 827b 	beq.w	402c5a <_svfprintf_r+0xbc6>
  402764:	2b02      	cmp	r3, #2
  402766:	f040 8206 	bne.w	402b76 <_svfprintf_r+0xae2>
  40276a:	9818      	ldr	r0, [sp, #96]	; 0x60
  40276c:	464e      	mov	r6, r9
  40276e:	0923      	lsrs	r3, r4, #4
  402770:	f004 010f 	and.w	r1, r4, #15
  402774:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  402778:	092a      	lsrs	r2, r5, #4
  40277a:	461c      	mov	r4, r3
  40277c:	4615      	mov	r5, r2
  40277e:	5c43      	ldrb	r3, [r0, r1]
  402780:	f806 3d01 	strb.w	r3, [r6, #-1]!
  402784:	ea54 0305 	orrs.w	r3, r4, r5
  402788:	d1f1      	bne.n	40276e <_svfprintf_r+0x6da>
  40278a:	eba9 0306 	sub.w	r3, r9, r6
  40278e:	930e      	str	r3, [sp, #56]	; 0x38
  402790:	e590      	b.n	4022b4 <_svfprintf_r+0x220>
  402792:	9311      	str	r3, [sp, #68]	; 0x44
  402794:	2a00      	cmp	r2, #0
  402796:	f040 86a3 	bne.w	4034e0 <_svfprintf_r+0x144c>
  40279a:	4b7e      	ldr	r3, [pc, #504]	; (402994 <_svfprintf_r+0x900>)
  40279c:	9318      	str	r3, [sp, #96]	; 0x60
  40279e:	f01b 0f20 	tst.w	fp, #32
  4027a2:	f43f aeef 	beq.w	402584 <_svfprintf_r+0x4f0>
  4027a6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4027a8:	3507      	adds	r5, #7
  4027aa:	f025 0307 	bic.w	r3, r5, #7
  4027ae:	f103 0208 	add.w	r2, r3, #8
  4027b2:	f01b 0f01 	tst.w	fp, #1
  4027b6:	920f      	str	r2, [sp, #60]	; 0x3c
  4027b8:	e9d3 4500 	ldrd	r4, r5, [r3]
  4027bc:	f47f aef4 	bne.w	4025a8 <_svfprintf_r+0x514>
  4027c0:	2302      	movs	r3, #2
  4027c2:	e55a      	b.n	40227a <_svfprintf_r+0x1e6>
  4027c4:	9311      	str	r3, [sp, #68]	; 0x44
  4027c6:	2a00      	cmp	r2, #0
  4027c8:	f040 8686 	bne.w	4034d8 <_svfprintf_r+0x1444>
  4027cc:	f04b 0b10 	orr.w	fp, fp, #16
  4027d0:	f01b 0f20 	tst.w	fp, #32
  4027d4:	d0a1      	beq.n	40271a <_svfprintf_r+0x686>
  4027d6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4027d8:	3507      	adds	r5, #7
  4027da:	f025 0507 	bic.w	r5, r5, #7
  4027de:	e9d5 2300 	ldrd	r2, r3, [r5]
  4027e2:	2a00      	cmp	r2, #0
  4027e4:	f105 0108 	add.w	r1, r5, #8
  4027e8:	461d      	mov	r5, r3
  4027ea:	f173 0300 	sbcs.w	r3, r3, #0
  4027ee:	910f      	str	r1, [sp, #60]	; 0x3c
  4027f0:	4614      	mov	r4, r2
  4027f2:	daa6      	bge.n	402742 <_svfprintf_r+0x6ae>
  4027f4:	272d      	movs	r7, #45	; 0x2d
  4027f6:	4264      	negs	r4, r4
  4027f8:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  4027fc:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402800:	2301      	movs	r3, #1
  402802:	e53d      	b.n	402280 <_svfprintf_r+0x1ec>
  402804:	9311      	str	r3, [sp, #68]	; 0x44
  402806:	2a00      	cmp	r2, #0
  402808:	f040 8662 	bne.w	4034d0 <_svfprintf_r+0x143c>
  40280c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  40280e:	3507      	adds	r5, #7
  402810:	f025 0307 	bic.w	r3, r5, #7
  402814:	f103 0208 	add.w	r2, r3, #8
  402818:	920f      	str	r2, [sp, #60]	; 0x3c
  40281a:	681a      	ldr	r2, [r3, #0]
  40281c:	9215      	str	r2, [sp, #84]	; 0x54
  40281e:	685b      	ldr	r3, [r3, #4]
  402820:	9314      	str	r3, [sp, #80]	; 0x50
  402822:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402824:	9d15      	ldr	r5, [sp, #84]	; 0x54
  402826:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  40282a:	4628      	mov	r0, r5
  40282c:	4621      	mov	r1, r4
  40282e:	f04f 32ff 	mov.w	r2, #4294967295
  402832:	4b59      	ldr	r3, [pc, #356]	; (402998 <_svfprintf_r+0x904>)
  402834:	f003 fa8e 	bl	405d54 <__aeabi_dcmpun>
  402838:	2800      	cmp	r0, #0
  40283a:	f040 834a 	bne.w	402ed2 <_svfprintf_r+0xe3e>
  40283e:	4628      	mov	r0, r5
  402840:	4621      	mov	r1, r4
  402842:	f04f 32ff 	mov.w	r2, #4294967295
  402846:	4b54      	ldr	r3, [pc, #336]	; (402998 <_svfprintf_r+0x904>)
  402848:	f003 fa66 	bl	405d18 <__aeabi_dcmple>
  40284c:	2800      	cmp	r0, #0
  40284e:	f040 8340 	bne.w	402ed2 <_svfprintf_r+0xe3e>
  402852:	a815      	add	r0, sp, #84	; 0x54
  402854:	c80d      	ldmia	r0, {r0, r2, r3}
  402856:	9914      	ldr	r1, [sp, #80]	; 0x50
  402858:	f003 fa54 	bl	405d04 <__aeabi_dcmplt>
  40285c:	2800      	cmp	r0, #0
  40285e:	f040 8530 	bne.w	4032c2 <_svfprintf_r+0x122e>
  402862:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402866:	4e4d      	ldr	r6, [pc, #308]	; (40299c <_svfprintf_r+0x908>)
  402868:	4b4d      	ldr	r3, [pc, #308]	; (4029a0 <_svfprintf_r+0x90c>)
  40286a:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  40286e:	9007      	str	r0, [sp, #28]
  402870:	9811      	ldr	r0, [sp, #68]	; 0x44
  402872:	2203      	movs	r2, #3
  402874:	2100      	movs	r1, #0
  402876:	9208      	str	r2, [sp, #32]
  402878:	910a      	str	r1, [sp, #40]	; 0x28
  40287a:	2847      	cmp	r0, #71	; 0x47
  40287c:	bfd8      	it	le
  40287e:	461e      	movle	r6, r3
  402880:	920e      	str	r2, [sp, #56]	; 0x38
  402882:	9112      	str	r1, [sp, #72]	; 0x48
  402884:	e51e      	b.n	4022c4 <_svfprintf_r+0x230>
  402886:	f04b 0b08 	orr.w	fp, fp, #8
  40288a:	f89a 3000 	ldrb.w	r3, [sl]
  40288e:	e459      	b.n	402144 <_svfprintf_r+0xb0>
  402890:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402894:	2300      	movs	r3, #0
  402896:	461c      	mov	r4, r3
  402898:	f81a 3b01 	ldrb.w	r3, [sl], #1
  40289c:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4028a0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  4028a4:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4028a8:	2809      	cmp	r0, #9
  4028aa:	d9f5      	bls.n	402898 <_svfprintf_r+0x804>
  4028ac:	940d      	str	r4, [sp, #52]	; 0x34
  4028ae:	e44b      	b.n	402148 <_svfprintf_r+0xb4>
  4028b0:	f04b 0b10 	orr.w	fp, fp, #16
  4028b4:	9311      	str	r3, [sp, #68]	; 0x44
  4028b6:	f01b 0320 	ands.w	r3, fp, #32
  4028ba:	f43f ae1d 	beq.w	4024f8 <_svfprintf_r+0x464>
  4028be:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4028c0:	3507      	adds	r5, #7
  4028c2:	f025 0307 	bic.w	r3, r5, #7
  4028c6:	f103 0208 	add.w	r2, r3, #8
  4028ca:	e9d3 4500 	ldrd	r4, r5, [r3]
  4028ce:	920f      	str	r2, [sp, #60]	; 0x3c
  4028d0:	2300      	movs	r3, #0
  4028d2:	e4d2      	b.n	40227a <_svfprintf_r+0x1e6>
  4028d4:	9311      	str	r3, [sp, #68]	; 0x44
  4028d6:	2a00      	cmp	r2, #0
  4028d8:	f040 85e7 	bne.w	4034aa <_svfprintf_r+0x1416>
  4028dc:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4028de:	2a00      	cmp	r2, #0
  4028e0:	f43f aca3 	beq.w	40222a <_svfprintf_r+0x196>
  4028e4:	2300      	movs	r3, #0
  4028e6:	2101      	movs	r1, #1
  4028e8:	461f      	mov	r7, r3
  4028ea:	9108      	str	r1, [sp, #32]
  4028ec:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  4028f0:	f8cd b01c 	str.w	fp, [sp, #28]
  4028f4:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4028f8:	930a      	str	r3, [sp, #40]	; 0x28
  4028fa:	9312      	str	r3, [sp, #72]	; 0x48
  4028fc:	910e      	str	r1, [sp, #56]	; 0x38
  4028fe:	ae28      	add	r6, sp, #160	; 0xa0
  402900:	e4e4      	b.n	4022cc <_svfprintf_r+0x238>
  402902:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402904:	e534      	b.n	402370 <_svfprintf_r+0x2dc>
  402906:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402908:	2b65      	cmp	r3, #101	; 0x65
  40290a:	f340 80a7 	ble.w	402a5c <_svfprintf_r+0x9c8>
  40290e:	a815      	add	r0, sp, #84	; 0x54
  402910:	c80d      	ldmia	r0, {r0, r2, r3}
  402912:	9914      	ldr	r1, [sp, #80]	; 0x50
  402914:	f003 f9ec 	bl	405cf0 <__aeabi_dcmpeq>
  402918:	2800      	cmp	r0, #0
  40291a:	f000 8150 	beq.w	402bbe <_svfprintf_r+0xb2a>
  40291e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402920:	4a20      	ldr	r2, [pc, #128]	; (4029a4 <_svfprintf_r+0x910>)
  402922:	f8c8 2000 	str.w	r2, [r8]
  402926:	3301      	adds	r3, #1
  402928:	3401      	adds	r4, #1
  40292a:	2201      	movs	r2, #1
  40292c:	2b07      	cmp	r3, #7
  40292e:	9427      	str	r4, [sp, #156]	; 0x9c
  402930:	9326      	str	r3, [sp, #152]	; 0x98
  402932:	f8c8 2004 	str.w	r2, [r8, #4]
  402936:	f300 836a 	bgt.w	40300e <_svfprintf_r+0xf7a>
  40293a:	f108 0808 	add.w	r8, r8, #8
  40293e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402940:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402942:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402944:	4293      	cmp	r3, r2
  402946:	db03      	blt.n	402950 <_svfprintf_r+0x8bc>
  402948:	9b07      	ldr	r3, [sp, #28]
  40294a:	07dd      	lsls	r5, r3, #31
  40294c:	f57f ad82 	bpl.w	402454 <_svfprintf_r+0x3c0>
  402950:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402952:	9919      	ldr	r1, [sp, #100]	; 0x64
  402954:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  402956:	f8c8 2000 	str.w	r2, [r8]
  40295a:	3301      	adds	r3, #1
  40295c:	440c      	add	r4, r1
  40295e:	2b07      	cmp	r3, #7
  402960:	f8c8 1004 	str.w	r1, [r8, #4]
  402964:	9427      	str	r4, [sp, #156]	; 0x9c
  402966:	9326      	str	r3, [sp, #152]	; 0x98
  402968:	f300 839e 	bgt.w	4030a8 <_svfprintf_r+0x1014>
  40296c:	f108 0808 	add.w	r8, r8, #8
  402970:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402972:	1e5e      	subs	r6, r3, #1
  402974:	2e00      	cmp	r6, #0
  402976:	f77f ad6d 	ble.w	402454 <_svfprintf_r+0x3c0>
  40297a:	2e10      	cmp	r6, #16
  40297c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40297e:	4d0a      	ldr	r5, [pc, #40]	; (4029a8 <_svfprintf_r+0x914>)
  402980:	f340 81f5 	ble.w	402d6e <_svfprintf_r+0xcda>
  402984:	4622      	mov	r2, r4
  402986:	2710      	movs	r7, #16
  402988:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  40298c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  40298e:	e013      	b.n	4029b8 <_svfprintf_r+0x924>
  402990:	00406b74 	.word	0x00406b74
  402994:	00406b60 	.word	0x00406b60
  402998:	7fefffff 	.word	0x7fefffff
  40299c:	00406b54 	.word	0x00406b54
  4029a0:	00406b50 	.word	0x00406b50
  4029a4:	00406b90 	.word	0x00406b90
  4029a8:	00406ba4 	.word	0x00406ba4
  4029ac:	f108 0808 	add.w	r8, r8, #8
  4029b0:	3e10      	subs	r6, #16
  4029b2:	2e10      	cmp	r6, #16
  4029b4:	f340 81da 	ble.w	402d6c <_svfprintf_r+0xcd8>
  4029b8:	3301      	adds	r3, #1
  4029ba:	3210      	adds	r2, #16
  4029bc:	2b07      	cmp	r3, #7
  4029be:	9227      	str	r2, [sp, #156]	; 0x9c
  4029c0:	9326      	str	r3, [sp, #152]	; 0x98
  4029c2:	e888 00a0 	stmia.w	r8, {r5, r7}
  4029c6:	ddf1      	ble.n	4029ac <_svfprintf_r+0x918>
  4029c8:	aa25      	add	r2, sp, #148	; 0x94
  4029ca:	4621      	mov	r1, r4
  4029cc:	4658      	mov	r0, fp
  4029ce:	f002 fcc5 	bl	40535c <__ssprint_r>
  4029d2:	2800      	cmp	r0, #0
  4029d4:	f47f ac30 	bne.w	402238 <_svfprintf_r+0x1a4>
  4029d8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4029da:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4029dc:	46c8      	mov	r8, r9
  4029de:	e7e7      	b.n	4029b0 <_svfprintf_r+0x91c>
  4029e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4029e2:	9a08      	ldr	r2, [sp, #32]
  4029e4:	1a9f      	subs	r7, r3, r2
  4029e6:	2f00      	cmp	r7, #0
  4029e8:	f77f ace5 	ble.w	4023b6 <_svfprintf_r+0x322>
  4029ec:	2f10      	cmp	r7, #16
  4029ee:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4029f0:	4db6      	ldr	r5, [pc, #728]	; (402ccc <_svfprintf_r+0xc38>)
  4029f2:	dd27      	ble.n	402a44 <_svfprintf_r+0x9b0>
  4029f4:	4642      	mov	r2, r8
  4029f6:	4621      	mov	r1, r4
  4029f8:	46b0      	mov	r8, r6
  4029fa:	f04f 0b10 	mov.w	fp, #16
  4029fe:	462e      	mov	r6, r5
  402a00:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402a02:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402a04:	e004      	b.n	402a10 <_svfprintf_r+0x97c>
  402a06:	3f10      	subs	r7, #16
  402a08:	2f10      	cmp	r7, #16
  402a0a:	f102 0208 	add.w	r2, r2, #8
  402a0e:	dd15      	ble.n	402a3c <_svfprintf_r+0x9a8>
  402a10:	3301      	adds	r3, #1
  402a12:	3110      	adds	r1, #16
  402a14:	2b07      	cmp	r3, #7
  402a16:	9127      	str	r1, [sp, #156]	; 0x9c
  402a18:	9326      	str	r3, [sp, #152]	; 0x98
  402a1a:	e882 0840 	stmia.w	r2, {r6, fp}
  402a1e:	ddf2      	ble.n	402a06 <_svfprintf_r+0x972>
  402a20:	aa25      	add	r2, sp, #148	; 0x94
  402a22:	4629      	mov	r1, r5
  402a24:	4620      	mov	r0, r4
  402a26:	f002 fc99 	bl	40535c <__ssprint_r>
  402a2a:	2800      	cmp	r0, #0
  402a2c:	f47f ac04 	bne.w	402238 <_svfprintf_r+0x1a4>
  402a30:	3f10      	subs	r7, #16
  402a32:	2f10      	cmp	r7, #16
  402a34:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402a36:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402a38:	464a      	mov	r2, r9
  402a3a:	dce9      	bgt.n	402a10 <_svfprintf_r+0x97c>
  402a3c:	4635      	mov	r5, r6
  402a3e:	460c      	mov	r4, r1
  402a40:	4646      	mov	r6, r8
  402a42:	4690      	mov	r8, r2
  402a44:	3301      	adds	r3, #1
  402a46:	443c      	add	r4, r7
  402a48:	2b07      	cmp	r3, #7
  402a4a:	9427      	str	r4, [sp, #156]	; 0x9c
  402a4c:	9326      	str	r3, [sp, #152]	; 0x98
  402a4e:	e888 00a0 	stmia.w	r8, {r5, r7}
  402a52:	f300 8232 	bgt.w	402eba <_svfprintf_r+0xe26>
  402a56:	f108 0808 	add.w	r8, r8, #8
  402a5a:	e4ac      	b.n	4023b6 <_svfprintf_r+0x322>
  402a5c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402a5e:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402a60:	2b01      	cmp	r3, #1
  402a62:	f340 81fe 	ble.w	402e62 <_svfprintf_r+0xdce>
  402a66:	3701      	adds	r7, #1
  402a68:	3401      	adds	r4, #1
  402a6a:	2301      	movs	r3, #1
  402a6c:	2f07      	cmp	r7, #7
  402a6e:	9427      	str	r4, [sp, #156]	; 0x9c
  402a70:	9726      	str	r7, [sp, #152]	; 0x98
  402a72:	f8c8 6000 	str.w	r6, [r8]
  402a76:	f8c8 3004 	str.w	r3, [r8, #4]
  402a7a:	f300 8203 	bgt.w	402e84 <_svfprintf_r+0xdf0>
  402a7e:	f108 0808 	add.w	r8, r8, #8
  402a82:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402a84:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  402a86:	f8c8 3000 	str.w	r3, [r8]
  402a8a:	3701      	adds	r7, #1
  402a8c:	4414      	add	r4, r2
  402a8e:	2f07      	cmp	r7, #7
  402a90:	9427      	str	r4, [sp, #156]	; 0x9c
  402a92:	9726      	str	r7, [sp, #152]	; 0x98
  402a94:	f8c8 2004 	str.w	r2, [r8, #4]
  402a98:	f300 8200 	bgt.w	402e9c <_svfprintf_r+0xe08>
  402a9c:	f108 0808 	add.w	r8, r8, #8
  402aa0:	a815      	add	r0, sp, #84	; 0x54
  402aa2:	c80d      	ldmia	r0, {r0, r2, r3}
  402aa4:	9914      	ldr	r1, [sp, #80]	; 0x50
  402aa6:	f003 f923 	bl	405cf0 <__aeabi_dcmpeq>
  402aaa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402aac:	2800      	cmp	r0, #0
  402aae:	f040 8101 	bne.w	402cb4 <_svfprintf_r+0xc20>
  402ab2:	3b01      	subs	r3, #1
  402ab4:	3701      	adds	r7, #1
  402ab6:	3601      	adds	r6, #1
  402ab8:	441c      	add	r4, r3
  402aba:	2f07      	cmp	r7, #7
  402abc:	9726      	str	r7, [sp, #152]	; 0x98
  402abe:	9427      	str	r4, [sp, #156]	; 0x9c
  402ac0:	f8c8 6000 	str.w	r6, [r8]
  402ac4:	f8c8 3004 	str.w	r3, [r8, #4]
  402ac8:	f300 8127 	bgt.w	402d1a <_svfprintf_r+0xc86>
  402acc:	f108 0808 	add.w	r8, r8, #8
  402ad0:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  402ad2:	f8c8 2004 	str.w	r2, [r8, #4]
  402ad6:	3701      	adds	r7, #1
  402ad8:	4414      	add	r4, r2
  402ada:	ab21      	add	r3, sp, #132	; 0x84
  402adc:	2f07      	cmp	r7, #7
  402ade:	9427      	str	r4, [sp, #156]	; 0x9c
  402ae0:	9726      	str	r7, [sp, #152]	; 0x98
  402ae2:	f8c8 3000 	str.w	r3, [r8]
  402ae6:	f77f acb3 	ble.w	402450 <_svfprintf_r+0x3bc>
  402aea:	aa25      	add	r2, sp, #148	; 0x94
  402aec:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402aee:	980c      	ldr	r0, [sp, #48]	; 0x30
  402af0:	f002 fc34 	bl	40535c <__ssprint_r>
  402af4:	2800      	cmp	r0, #0
  402af6:	f47f ab9f 	bne.w	402238 <_svfprintf_r+0x1a4>
  402afa:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402afc:	46c8      	mov	r8, r9
  402afe:	e4a9      	b.n	402454 <_svfprintf_r+0x3c0>
  402b00:	aa25      	add	r2, sp, #148	; 0x94
  402b02:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402b04:	980c      	ldr	r0, [sp, #48]	; 0x30
  402b06:	f002 fc29 	bl	40535c <__ssprint_r>
  402b0a:	2800      	cmp	r0, #0
  402b0c:	f43f aceb 	beq.w	4024e6 <_svfprintf_r+0x452>
  402b10:	f7ff bb92 	b.w	402238 <_svfprintf_r+0x1a4>
  402b14:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402b18:	2b01      	cmp	r3, #1
  402b1a:	f000 8134 	beq.w	402d86 <_svfprintf_r+0xcf2>
  402b1e:	2b02      	cmp	r3, #2
  402b20:	d125      	bne.n	402b6e <_svfprintf_r+0xada>
  402b22:	f8cd b01c 	str.w	fp, [sp, #28]
  402b26:	2400      	movs	r4, #0
  402b28:	2500      	movs	r5, #0
  402b2a:	e61e      	b.n	40276a <_svfprintf_r+0x6d6>
  402b2c:	aa25      	add	r2, sp, #148	; 0x94
  402b2e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402b30:	980c      	ldr	r0, [sp, #48]	; 0x30
  402b32:	f002 fc13 	bl	40535c <__ssprint_r>
  402b36:	2800      	cmp	r0, #0
  402b38:	f47f ab7e 	bne.w	402238 <_svfprintf_r+0x1a4>
  402b3c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402b3e:	46c8      	mov	r8, r9
  402b40:	e475      	b.n	40242e <_svfprintf_r+0x39a>
  402b42:	aa25      	add	r2, sp, #148	; 0x94
  402b44:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402b46:	980c      	ldr	r0, [sp, #48]	; 0x30
  402b48:	f002 fc08 	bl	40535c <__ssprint_r>
  402b4c:	2800      	cmp	r0, #0
  402b4e:	f47f ab73 	bne.w	402238 <_svfprintf_r+0x1a4>
  402b52:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402b54:	46c8      	mov	r8, r9
  402b56:	e41b      	b.n	402390 <_svfprintf_r+0x2fc>
  402b58:	aa25      	add	r2, sp, #148	; 0x94
  402b5a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402b5c:	980c      	ldr	r0, [sp, #48]	; 0x30
  402b5e:	f002 fbfd 	bl	40535c <__ssprint_r>
  402b62:	2800      	cmp	r0, #0
  402b64:	f47f ab68 	bne.w	402238 <_svfprintf_r+0x1a4>
  402b68:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402b6a:	46c8      	mov	r8, r9
  402b6c:	e420      	b.n	4023b0 <_svfprintf_r+0x31c>
  402b6e:	f8cd b01c 	str.w	fp, [sp, #28]
  402b72:	2400      	movs	r4, #0
  402b74:	2500      	movs	r5, #0
  402b76:	4649      	mov	r1, r9
  402b78:	e000      	b.n	402b7c <_svfprintf_r+0xae8>
  402b7a:	4631      	mov	r1, r6
  402b7c:	08e2      	lsrs	r2, r4, #3
  402b7e:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  402b82:	08e8      	lsrs	r0, r5, #3
  402b84:	f004 0307 	and.w	r3, r4, #7
  402b88:	4605      	mov	r5, r0
  402b8a:	4614      	mov	r4, r2
  402b8c:	3330      	adds	r3, #48	; 0x30
  402b8e:	ea54 0205 	orrs.w	r2, r4, r5
  402b92:	f801 3c01 	strb.w	r3, [r1, #-1]
  402b96:	f101 36ff 	add.w	r6, r1, #4294967295
  402b9a:	d1ee      	bne.n	402b7a <_svfprintf_r+0xae6>
  402b9c:	9a07      	ldr	r2, [sp, #28]
  402b9e:	07d2      	lsls	r2, r2, #31
  402ba0:	f57f adf3 	bpl.w	40278a <_svfprintf_r+0x6f6>
  402ba4:	2b30      	cmp	r3, #48	; 0x30
  402ba6:	f43f adf0 	beq.w	40278a <_svfprintf_r+0x6f6>
  402baa:	3902      	subs	r1, #2
  402bac:	2330      	movs	r3, #48	; 0x30
  402bae:	f806 3c01 	strb.w	r3, [r6, #-1]
  402bb2:	eba9 0301 	sub.w	r3, r9, r1
  402bb6:	930e      	str	r3, [sp, #56]	; 0x38
  402bb8:	460e      	mov	r6, r1
  402bba:	f7ff bb7b 	b.w	4022b4 <_svfprintf_r+0x220>
  402bbe:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402bc0:	2900      	cmp	r1, #0
  402bc2:	f340 822e 	ble.w	403022 <_svfprintf_r+0xf8e>
  402bc6:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402bc8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402bca:	4293      	cmp	r3, r2
  402bcc:	bfa8      	it	ge
  402bce:	4613      	movge	r3, r2
  402bd0:	2b00      	cmp	r3, #0
  402bd2:	461f      	mov	r7, r3
  402bd4:	dd0d      	ble.n	402bf2 <_svfprintf_r+0xb5e>
  402bd6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402bd8:	f8c8 6000 	str.w	r6, [r8]
  402bdc:	3301      	adds	r3, #1
  402bde:	443c      	add	r4, r7
  402be0:	2b07      	cmp	r3, #7
  402be2:	9427      	str	r4, [sp, #156]	; 0x9c
  402be4:	f8c8 7004 	str.w	r7, [r8, #4]
  402be8:	9326      	str	r3, [sp, #152]	; 0x98
  402bea:	f300 831f 	bgt.w	40322c <_svfprintf_r+0x1198>
  402bee:	f108 0808 	add.w	r8, r8, #8
  402bf2:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402bf4:	2f00      	cmp	r7, #0
  402bf6:	bfa8      	it	ge
  402bf8:	1bdb      	subge	r3, r3, r7
  402bfa:	2b00      	cmp	r3, #0
  402bfc:	461f      	mov	r7, r3
  402bfe:	f340 80d6 	ble.w	402dae <_svfprintf_r+0xd1a>
  402c02:	2f10      	cmp	r7, #16
  402c04:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402c06:	4d31      	ldr	r5, [pc, #196]	; (402ccc <_svfprintf_r+0xc38>)
  402c08:	f340 81ed 	ble.w	402fe6 <_svfprintf_r+0xf52>
  402c0c:	4642      	mov	r2, r8
  402c0e:	4621      	mov	r1, r4
  402c10:	46b0      	mov	r8, r6
  402c12:	f04f 0b10 	mov.w	fp, #16
  402c16:	462e      	mov	r6, r5
  402c18:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402c1a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402c1c:	e004      	b.n	402c28 <_svfprintf_r+0xb94>
  402c1e:	3208      	adds	r2, #8
  402c20:	3f10      	subs	r7, #16
  402c22:	2f10      	cmp	r7, #16
  402c24:	f340 81db 	ble.w	402fde <_svfprintf_r+0xf4a>
  402c28:	3301      	adds	r3, #1
  402c2a:	3110      	adds	r1, #16
  402c2c:	2b07      	cmp	r3, #7
  402c2e:	9127      	str	r1, [sp, #156]	; 0x9c
  402c30:	9326      	str	r3, [sp, #152]	; 0x98
  402c32:	e882 0840 	stmia.w	r2, {r6, fp}
  402c36:	ddf2      	ble.n	402c1e <_svfprintf_r+0xb8a>
  402c38:	aa25      	add	r2, sp, #148	; 0x94
  402c3a:	4629      	mov	r1, r5
  402c3c:	4620      	mov	r0, r4
  402c3e:	f002 fb8d 	bl	40535c <__ssprint_r>
  402c42:	2800      	cmp	r0, #0
  402c44:	f47f aaf8 	bne.w	402238 <_svfprintf_r+0x1a4>
  402c48:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402c4a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402c4c:	464a      	mov	r2, r9
  402c4e:	e7e7      	b.n	402c20 <_svfprintf_r+0xb8c>
  402c50:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402c52:	930e      	str	r3, [sp, #56]	; 0x38
  402c54:	464e      	mov	r6, r9
  402c56:	f7ff bb2d 	b.w	4022b4 <_svfprintf_r+0x220>
  402c5a:	2d00      	cmp	r5, #0
  402c5c:	bf08      	it	eq
  402c5e:	2c0a      	cmpeq	r4, #10
  402c60:	f0c0 808f 	bcc.w	402d82 <_svfprintf_r+0xcee>
  402c64:	464e      	mov	r6, r9
  402c66:	4620      	mov	r0, r4
  402c68:	4629      	mov	r1, r5
  402c6a:	220a      	movs	r2, #10
  402c6c:	2300      	movs	r3, #0
  402c6e:	f003 f8af 	bl	405dd0 <__aeabi_uldivmod>
  402c72:	3230      	adds	r2, #48	; 0x30
  402c74:	f806 2d01 	strb.w	r2, [r6, #-1]!
  402c78:	4620      	mov	r0, r4
  402c7a:	4629      	mov	r1, r5
  402c7c:	2300      	movs	r3, #0
  402c7e:	220a      	movs	r2, #10
  402c80:	f003 f8a6 	bl	405dd0 <__aeabi_uldivmod>
  402c84:	4604      	mov	r4, r0
  402c86:	460d      	mov	r5, r1
  402c88:	ea54 0305 	orrs.w	r3, r4, r5
  402c8c:	d1eb      	bne.n	402c66 <_svfprintf_r+0xbd2>
  402c8e:	eba9 0306 	sub.w	r3, r9, r6
  402c92:	930e      	str	r3, [sp, #56]	; 0x38
  402c94:	f7ff bb0e 	b.w	4022b4 <_svfprintf_r+0x220>
  402c98:	aa25      	add	r2, sp, #148	; 0x94
  402c9a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402c9c:	980c      	ldr	r0, [sp, #48]	; 0x30
  402c9e:	f002 fb5d 	bl	40535c <__ssprint_r>
  402ca2:	2800      	cmp	r0, #0
  402ca4:	f47f aac8 	bne.w	402238 <_svfprintf_r+0x1a4>
  402ca8:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402cac:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402cae:	46c8      	mov	r8, r9
  402cb0:	f7ff bb5e 	b.w	402370 <_svfprintf_r+0x2dc>
  402cb4:	1e5e      	subs	r6, r3, #1
  402cb6:	2e00      	cmp	r6, #0
  402cb8:	f77f af0a 	ble.w	402ad0 <_svfprintf_r+0xa3c>
  402cbc:	2e10      	cmp	r6, #16
  402cbe:	4d03      	ldr	r5, [pc, #12]	; (402ccc <_svfprintf_r+0xc38>)
  402cc0:	dd22      	ble.n	402d08 <_svfprintf_r+0xc74>
  402cc2:	4622      	mov	r2, r4
  402cc4:	f04f 0b10 	mov.w	fp, #16
  402cc8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402cca:	e006      	b.n	402cda <_svfprintf_r+0xc46>
  402ccc:	00406ba4 	.word	0x00406ba4
  402cd0:	3e10      	subs	r6, #16
  402cd2:	2e10      	cmp	r6, #16
  402cd4:	f108 0808 	add.w	r8, r8, #8
  402cd8:	dd15      	ble.n	402d06 <_svfprintf_r+0xc72>
  402cda:	3701      	adds	r7, #1
  402cdc:	3210      	adds	r2, #16
  402cde:	2f07      	cmp	r7, #7
  402ce0:	9227      	str	r2, [sp, #156]	; 0x9c
  402ce2:	9726      	str	r7, [sp, #152]	; 0x98
  402ce4:	e888 0820 	stmia.w	r8, {r5, fp}
  402ce8:	ddf2      	ble.n	402cd0 <_svfprintf_r+0xc3c>
  402cea:	aa25      	add	r2, sp, #148	; 0x94
  402cec:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402cee:	4620      	mov	r0, r4
  402cf0:	f002 fb34 	bl	40535c <__ssprint_r>
  402cf4:	2800      	cmp	r0, #0
  402cf6:	f47f aa9f 	bne.w	402238 <_svfprintf_r+0x1a4>
  402cfa:	3e10      	subs	r6, #16
  402cfc:	2e10      	cmp	r6, #16
  402cfe:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402d00:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402d02:	46c8      	mov	r8, r9
  402d04:	dce9      	bgt.n	402cda <_svfprintf_r+0xc46>
  402d06:	4614      	mov	r4, r2
  402d08:	3701      	adds	r7, #1
  402d0a:	4434      	add	r4, r6
  402d0c:	2f07      	cmp	r7, #7
  402d0e:	9427      	str	r4, [sp, #156]	; 0x9c
  402d10:	9726      	str	r7, [sp, #152]	; 0x98
  402d12:	e888 0060 	stmia.w	r8, {r5, r6}
  402d16:	f77f aed9 	ble.w	402acc <_svfprintf_r+0xa38>
  402d1a:	aa25      	add	r2, sp, #148	; 0x94
  402d1c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402d1e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402d20:	f002 fb1c 	bl	40535c <__ssprint_r>
  402d24:	2800      	cmp	r0, #0
  402d26:	f47f aa87 	bne.w	402238 <_svfprintf_r+0x1a4>
  402d2a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402d2c:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402d2e:	46c8      	mov	r8, r9
  402d30:	e6ce      	b.n	402ad0 <_svfprintf_r+0xa3c>
  402d32:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402d34:	6814      	ldr	r4, [r2, #0]
  402d36:	4613      	mov	r3, r2
  402d38:	3304      	adds	r3, #4
  402d3a:	17e5      	asrs	r5, r4, #31
  402d3c:	930f      	str	r3, [sp, #60]	; 0x3c
  402d3e:	4622      	mov	r2, r4
  402d40:	462b      	mov	r3, r5
  402d42:	e4fa      	b.n	40273a <_svfprintf_r+0x6a6>
  402d44:	3204      	adds	r2, #4
  402d46:	681c      	ldr	r4, [r3, #0]
  402d48:	920f      	str	r2, [sp, #60]	; 0x3c
  402d4a:	2301      	movs	r3, #1
  402d4c:	2500      	movs	r5, #0
  402d4e:	f7ff ba94 	b.w	40227a <_svfprintf_r+0x1e6>
  402d52:	681c      	ldr	r4, [r3, #0]
  402d54:	3304      	adds	r3, #4
  402d56:	930f      	str	r3, [sp, #60]	; 0x3c
  402d58:	2500      	movs	r5, #0
  402d5a:	e421      	b.n	4025a0 <_svfprintf_r+0x50c>
  402d5c:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402d5e:	460a      	mov	r2, r1
  402d60:	3204      	adds	r2, #4
  402d62:	680c      	ldr	r4, [r1, #0]
  402d64:	920f      	str	r2, [sp, #60]	; 0x3c
  402d66:	2500      	movs	r5, #0
  402d68:	f7ff ba87 	b.w	40227a <_svfprintf_r+0x1e6>
  402d6c:	4614      	mov	r4, r2
  402d6e:	3301      	adds	r3, #1
  402d70:	4434      	add	r4, r6
  402d72:	2b07      	cmp	r3, #7
  402d74:	9427      	str	r4, [sp, #156]	; 0x9c
  402d76:	9326      	str	r3, [sp, #152]	; 0x98
  402d78:	e888 0060 	stmia.w	r8, {r5, r6}
  402d7c:	f77f ab68 	ble.w	402450 <_svfprintf_r+0x3bc>
  402d80:	e6b3      	b.n	402aea <_svfprintf_r+0xa56>
  402d82:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402d86:	f8cd b01c 	str.w	fp, [sp, #28]
  402d8a:	ae42      	add	r6, sp, #264	; 0x108
  402d8c:	3430      	adds	r4, #48	; 0x30
  402d8e:	2301      	movs	r3, #1
  402d90:	f806 4d41 	strb.w	r4, [r6, #-65]!
  402d94:	930e      	str	r3, [sp, #56]	; 0x38
  402d96:	f7ff ba8d 	b.w	4022b4 <_svfprintf_r+0x220>
  402d9a:	aa25      	add	r2, sp, #148	; 0x94
  402d9c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402d9e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402da0:	f002 fadc 	bl	40535c <__ssprint_r>
  402da4:	2800      	cmp	r0, #0
  402da6:	f47f aa47 	bne.w	402238 <_svfprintf_r+0x1a4>
  402daa:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402dac:	46c8      	mov	r8, r9
  402dae:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402db0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402db2:	429a      	cmp	r2, r3
  402db4:	db44      	blt.n	402e40 <_svfprintf_r+0xdac>
  402db6:	9b07      	ldr	r3, [sp, #28]
  402db8:	07d9      	lsls	r1, r3, #31
  402dba:	d441      	bmi.n	402e40 <_svfprintf_r+0xdac>
  402dbc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402dbe:	9812      	ldr	r0, [sp, #72]	; 0x48
  402dc0:	1a9a      	subs	r2, r3, r2
  402dc2:	1a1d      	subs	r5, r3, r0
  402dc4:	4295      	cmp	r5, r2
  402dc6:	bfa8      	it	ge
  402dc8:	4615      	movge	r5, r2
  402dca:	2d00      	cmp	r5, #0
  402dcc:	dd0e      	ble.n	402dec <_svfprintf_r+0xd58>
  402dce:	9926      	ldr	r1, [sp, #152]	; 0x98
  402dd0:	f8c8 5004 	str.w	r5, [r8, #4]
  402dd4:	3101      	adds	r1, #1
  402dd6:	4406      	add	r6, r0
  402dd8:	442c      	add	r4, r5
  402dda:	2907      	cmp	r1, #7
  402ddc:	f8c8 6000 	str.w	r6, [r8]
  402de0:	9427      	str	r4, [sp, #156]	; 0x9c
  402de2:	9126      	str	r1, [sp, #152]	; 0x98
  402de4:	f300 823b 	bgt.w	40325e <_svfprintf_r+0x11ca>
  402de8:	f108 0808 	add.w	r8, r8, #8
  402dec:	2d00      	cmp	r5, #0
  402dee:	bfac      	ite	ge
  402df0:	1b56      	subge	r6, r2, r5
  402df2:	4616      	movlt	r6, r2
  402df4:	2e00      	cmp	r6, #0
  402df6:	f77f ab2d 	ble.w	402454 <_svfprintf_r+0x3c0>
  402dfa:	2e10      	cmp	r6, #16
  402dfc:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402dfe:	4db0      	ldr	r5, [pc, #704]	; (4030c0 <_svfprintf_r+0x102c>)
  402e00:	ddb5      	ble.n	402d6e <_svfprintf_r+0xcda>
  402e02:	4622      	mov	r2, r4
  402e04:	2710      	movs	r7, #16
  402e06:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402e0a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  402e0c:	e004      	b.n	402e18 <_svfprintf_r+0xd84>
  402e0e:	f108 0808 	add.w	r8, r8, #8
  402e12:	3e10      	subs	r6, #16
  402e14:	2e10      	cmp	r6, #16
  402e16:	dda9      	ble.n	402d6c <_svfprintf_r+0xcd8>
  402e18:	3301      	adds	r3, #1
  402e1a:	3210      	adds	r2, #16
  402e1c:	2b07      	cmp	r3, #7
  402e1e:	9227      	str	r2, [sp, #156]	; 0x9c
  402e20:	9326      	str	r3, [sp, #152]	; 0x98
  402e22:	e888 00a0 	stmia.w	r8, {r5, r7}
  402e26:	ddf2      	ble.n	402e0e <_svfprintf_r+0xd7a>
  402e28:	aa25      	add	r2, sp, #148	; 0x94
  402e2a:	4621      	mov	r1, r4
  402e2c:	4658      	mov	r0, fp
  402e2e:	f002 fa95 	bl	40535c <__ssprint_r>
  402e32:	2800      	cmp	r0, #0
  402e34:	f47f aa00 	bne.w	402238 <_svfprintf_r+0x1a4>
  402e38:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402e3a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402e3c:	46c8      	mov	r8, r9
  402e3e:	e7e8      	b.n	402e12 <_svfprintf_r+0xd7e>
  402e40:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402e42:	9819      	ldr	r0, [sp, #100]	; 0x64
  402e44:	991a      	ldr	r1, [sp, #104]	; 0x68
  402e46:	f8c8 1000 	str.w	r1, [r8]
  402e4a:	3301      	adds	r3, #1
  402e4c:	4404      	add	r4, r0
  402e4e:	2b07      	cmp	r3, #7
  402e50:	9427      	str	r4, [sp, #156]	; 0x9c
  402e52:	f8c8 0004 	str.w	r0, [r8, #4]
  402e56:	9326      	str	r3, [sp, #152]	; 0x98
  402e58:	f300 81f5 	bgt.w	403246 <_svfprintf_r+0x11b2>
  402e5c:	f108 0808 	add.w	r8, r8, #8
  402e60:	e7ac      	b.n	402dbc <_svfprintf_r+0xd28>
  402e62:	9b07      	ldr	r3, [sp, #28]
  402e64:	07da      	lsls	r2, r3, #31
  402e66:	f53f adfe 	bmi.w	402a66 <_svfprintf_r+0x9d2>
  402e6a:	3701      	adds	r7, #1
  402e6c:	3401      	adds	r4, #1
  402e6e:	2301      	movs	r3, #1
  402e70:	2f07      	cmp	r7, #7
  402e72:	9427      	str	r4, [sp, #156]	; 0x9c
  402e74:	9726      	str	r7, [sp, #152]	; 0x98
  402e76:	f8c8 6000 	str.w	r6, [r8]
  402e7a:	f8c8 3004 	str.w	r3, [r8, #4]
  402e7e:	f77f ae25 	ble.w	402acc <_svfprintf_r+0xa38>
  402e82:	e74a      	b.n	402d1a <_svfprintf_r+0xc86>
  402e84:	aa25      	add	r2, sp, #148	; 0x94
  402e86:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402e88:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e8a:	f002 fa67 	bl	40535c <__ssprint_r>
  402e8e:	2800      	cmp	r0, #0
  402e90:	f47f a9d2 	bne.w	402238 <_svfprintf_r+0x1a4>
  402e94:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402e96:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402e98:	46c8      	mov	r8, r9
  402e9a:	e5f2      	b.n	402a82 <_svfprintf_r+0x9ee>
  402e9c:	aa25      	add	r2, sp, #148	; 0x94
  402e9e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402ea0:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ea2:	f002 fa5b 	bl	40535c <__ssprint_r>
  402ea6:	2800      	cmp	r0, #0
  402ea8:	f47f a9c6 	bne.w	402238 <_svfprintf_r+0x1a4>
  402eac:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402eae:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402eb0:	46c8      	mov	r8, r9
  402eb2:	e5f5      	b.n	402aa0 <_svfprintf_r+0xa0c>
  402eb4:	464e      	mov	r6, r9
  402eb6:	f7ff b9fd 	b.w	4022b4 <_svfprintf_r+0x220>
  402eba:	aa25      	add	r2, sp, #148	; 0x94
  402ebc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402ebe:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ec0:	f002 fa4c 	bl	40535c <__ssprint_r>
  402ec4:	2800      	cmp	r0, #0
  402ec6:	f47f a9b7 	bne.w	402238 <_svfprintf_r+0x1a4>
  402eca:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402ecc:	46c8      	mov	r8, r9
  402ece:	f7ff ba72 	b.w	4023b6 <_svfprintf_r+0x322>
  402ed2:	9c15      	ldr	r4, [sp, #84]	; 0x54
  402ed4:	4622      	mov	r2, r4
  402ed6:	4620      	mov	r0, r4
  402ed8:	9c14      	ldr	r4, [sp, #80]	; 0x50
  402eda:	4623      	mov	r3, r4
  402edc:	4621      	mov	r1, r4
  402ede:	f002 ff39 	bl	405d54 <__aeabi_dcmpun>
  402ee2:	2800      	cmp	r0, #0
  402ee4:	f040 8286 	bne.w	4033f4 <_svfprintf_r+0x1360>
  402ee8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402eea:	3301      	adds	r3, #1
  402eec:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402eee:	f023 0320 	bic.w	r3, r3, #32
  402ef2:	930e      	str	r3, [sp, #56]	; 0x38
  402ef4:	f000 81e2 	beq.w	4032bc <_svfprintf_r+0x1228>
  402ef8:	2b47      	cmp	r3, #71	; 0x47
  402efa:	f000 811e 	beq.w	40313a <_svfprintf_r+0x10a6>
  402efe:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  402f02:	9307      	str	r3, [sp, #28]
  402f04:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402f06:	1e1f      	subs	r7, r3, #0
  402f08:	9b15      	ldr	r3, [sp, #84]	; 0x54
  402f0a:	9308      	str	r3, [sp, #32]
  402f0c:	bfbb      	ittet	lt
  402f0e:	463b      	movlt	r3, r7
  402f10:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  402f14:	2300      	movge	r3, #0
  402f16:	232d      	movlt	r3, #45	; 0x2d
  402f18:	9310      	str	r3, [sp, #64]	; 0x40
  402f1a:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402f1c:	2b66      	cmp	r3, #102	; 0x66
  402f1e:	f000 81bb 	beq.w	403298 <_svfprintf_r+0x1204>
  402f22:	2b46      	cmp	r3, #70	; 0x46
  402f24:	f000 80df 	beq.w	4030e6 <_svfprintf_r+0x1052>
  402f28:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402f2a:	9a08      	ldr	r2, [sp, #32]
  402f2c:	2b45      	cmp	r3, #69	; 0x45
  402f2e:	bf0c      	ite	eq
  402f30:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  402f32:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  402f34:	a823      	add	r0, sp, #140	; 0x8c
  402f36:	a920      	add	r1, sp, #128	; 0x80
  402f38:	bf08      	it	eq
  402f3a:	1c5d      	addeq	r5, r3, #1
  402f3c:	9004      	str	r0, [sp, #16]
  402f3e:	9103      	str	r1, [sp, #12]
  402f40:	a81f      	add	r0, sp, #124	; 0x7c
  402f42:	2102      	movs	r1, #2
  402f44:	463b      	mov	r3, r7
  402f46:	9002      	str	r0, [sp, #8]
  402f48:	9501      	str	r5, [sp, #4]
  402f4a:	9100      	str	r1, [sp, #0]
  402f4c:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f4e:	f000 fb73 	bl	403638 <_dtoa_r>
  402f52:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402f54:	2b67      	cmp	r3, #103	; 0x67
  402f56:	4606      	mov	r6, r0
  402f58:	f040 81e0 	bne.w	40331c <_svfprintf_r+0x1288>
  402f5c:	f01b 0f01 	tst.w	fp, #1
  402f60:	f000 8246 	beq.w	4033f0 <_svfprintf_r+0x135c>
  402f64:	1974      	adds	r4, r6, r5
  402f66:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402f68:	9808      	ldr	r0, [sp, #32]
  402f6a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  402f6c:	4639      	mov	r1, r7
  402f6e:	f002 febf 	bl	405cf0 <__aeabi_dcmpeq>
  402f72:	2800      	cmp	r0, #0
  402f74:	f040 8165 	bne.w	403242 <_svfprintf_r+0x11ae>
  402f78:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402f7a:	42a3      	cmp	r3, r4
  402f7c:	d206      	bcs.n	402f8c <_svfprintf_r+0xef8>
  402f7e:	2130      	movs	r1, #48	; 0x30
  402f80:	1c5a      	adds	r2, r3, #1
  402f82:	9223      	str	r2, [sp, #140]	; 0x8c
  402f84:	7019      	strb	r1, [r3, #0]
  402f86:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402f88:	429c      	cmp	r4, r3
  402f8a:	d8f9      	bhi.n	402f80 <_svfprintf_r+0xeec>
  402f8c:	1b9b      	subs	r3, r3, r6
  402f8e:	9313      	str	r3, [sp, #76]	; 0x4c
  402f90:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402f92:	2b47      	cmp	r3, #71	; 0x47
  402f94:	f000 80e9 	beq.w	40316a <_svfprintf_r+0x10d6>
  402f98:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402f9a:	2b65      	cmp	r3, #101	; 0x65
  402f9c:	f340 81cd 	ble.w	40333a <_svfprintf_r+0x12a6>
  402fa0:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402fa2:	2b66      	cmp	r3, #102	; 0x66
  402fa4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402fa6:	9312      	str	r3, [sp, #72]	; 0x48
  402fa8:	f000 819e 	beq.w	4032e8 <_svfprintf_r+0x1254>
  402fac:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402fae:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402fb0:	4619      	mov	r1, r3
  402fb2:	4291      	cmp	r1, r2
  402fb4:	f300 818a 	bgt.w	4032cc <_svfprintf_r+0x1238>
  402fb8:	f01b 0f01 	tst.w	fp, #1
  402fbc:	f040 8213 	bne.w	4033e6 <_svfprintf_r+0x1352>
  402fc0:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  402fc4:	9308      	str	r3, [sp, #32]
  402fc6:	2367      	movs	r3, #103	; 0x67
  402fc8:	920e      	str	r2, [sp, #56]	; 0x38
  402fca:	9311      	str	r3, [sp, #68]	; 0x44
  402fcc:	9b10      	ldr	r3, [sp, #64]	; 0x40
  402fce:	2b00      	cmp	r3, #0
  402fd0:	f040 80c4 	bne.w	40315c <_svfprintf_r+0x10c8>
  402fd4:	930a      	str	r3, [sp, #40]	; 0x28
  402fd6:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402fda:	f7ff b973 	b.w	4022c4 <_svfprintf_r+0x230>
  402fde:	4635      	mov	r5, r6
  402fe0:	460c      	mov	r4, r1
  402fe2:	4646      	mov	r6, r8
  402fe4:	4690      	mov	r8, r2
  402fe6:	3301      	adds	r3, #1
  402fe8:	443c      	add	r4, r7
  402fea:	2b07      	cmp	r3, #7
  402fec:	9427      	str	r4, [sp, #156]	; 0x9c
  402fee:	9326      	str	r3, [sp, #152]	; 0x98
  402ff0:	e888 00a0 	stmia.w	r8, {r5, r7}
  402ff4:	f73f aed1 	bgt.w	402d9a <_svfprintf_r+0xd06>
  402ff8:	f108 0808 	add.w	r8, r8, #8
  402ffc:	e6d7      	b.n	402dae <_svfprintf_r+0xd1a>
  402ffe:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403000:	6813      	ldr	r3, [r2, #0]
  403002:	3204      	adds	r2, #4
  403004:	920f      	str	r2, [sp, #60]	; 0x3c
  403006:	9a09      	ldr	r2, [sp, #36]	; 0x24
  403008:	601a      	str	r2, [r3, #0]
  40300a:	f7ff b86a 	b.w	4020e2 <_svfprintf_r+0x4e>
  40300e:	aa25      	add	r2, sp, #148	; 0x94
  403010:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403012:	980c      	ldr	r0, [sp, #48]	; 0x30
  403014:	f002 f9a2 	bl	40535c <__ssprint_r>
  403018:	2800      	cmp	r0, #0
  40301a:	f47f a90d 	bne.w	402238 <_svfprintf_r+0x1a4>
  40301e:	46c8      	mov	r8, r9
  403020:	e48d      	b.n	40293e <_svfprintf_r+0x8aa>
  403022:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403024:	4a27      	ldr	r2, [pc, #156]	; (4030c4 <_svfprintf_r+0x1030>)
  403026:	f8c8 2000 	str.w	r2, [r8]
  40302a:	3301      	adds	r3, #1
  40302c:	3401      	adds	r4, #1
  40302e:	2201      	movs	r2, #1
  403030:	2b07      	cmp	r3, #7
  403032:	9427      	str	r4, [sp, #156]	; 0x9c
  403034:	9326      	str	r3, [sp, #152]	; 0x98
  403036:	f8c8 2004 	str.w	r2, [r8, #4]
  40303a:	dc72      	bgt.n	403122 <_svfprintf_r+0x108e>
  40303c:	f108 0808 	add.w	r8, r8, #8
  403040:	b929      	cbnz	r1, 40304e <_svfprintf_r+0xfba>
  403042:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403044:	b91b      	cbnz	r3, 40304e <_svfprintf_r+0xfba>
  403046:	9b07      	ldr	r3, [sp, #28]
  403048:	07d8      	lsls	r0, r3, #31
  40304a:	f57f aa03 	bpl.w	402454 <_svfprintf_r+0x3c0>
  40304e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403050:	9819      	ldr	r0, [sp, #100]	; 0x64
  403052:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  403054:	f8c8 2000 	str.w	r2, [r8]
  403058:	3301      	adds	r3, #1
  40305a:	4602      	mov	r2, r0
  40305c:	4422      	add	r2, r4
  40305e:	2b07      	cmp	r3, #7
  403060:	9227      	str	r2, [sp, #156]	; 0x9c
  403062:	f8c8 0004 	str.w	r0, [r8, #4]
  403066:	9326      	str	r3, [sp, #152]	; 0x98
  403068:	f300 818d 	bgt.w	403386 <_svfprintf_r+0x12f2>
  40306c:	f108 0808 	add.w	r8, r8, #8
  403070:	2900      	cmp	r1, #0
  403072:	f2c0 8165 	blt.w	403340 <_svfprintf_r+0x12ac>
  403076:	9913      	ldr	r1, [sp, #76]	; 0x4c
  403078:	f8c8 6000 	str.w	r6, [r8]
  40307c:	3301      	adds	r3, #1
  40307e:	188c      	adds	r4, r1, r2
  403080:	2b07      	cmp	r3, #7
  403082:	9427      	str	r4, [sp, #156]	; 0x9c
  403084:	9326      	str	r3, [sp, #152]	; 0x98
  403086:	f8c8 1004 	str.w	r1, [r8, #4]
  40308a:	f77f a9e1 	ble.w	402450 <_svfprintf_r+0x3bc>
  40308e:	e52c      	b.n	402aea <_svfprintf_r+0xa56>
  403090:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403092:	9909      	ldr	r1, [sp, #36]	; 0x24
  403094:	6813      	ldr	r3, [r2, #0]
  403096:	17cd      	asrs	r5, r1, #31
  403098:	4608      	mov	r0, r1
  40309a:	3204      	adds	r2, #4
  40309c:	4629      	mov	r1, r5
  40309e:	920f      	str	r2, [sp, #60]	; 0x3c
  4030a0:	e9c3 0100 	strd	r0, r1, [r3]
  4030a4:	f7ff b81d 	b.w	4020e2 <_svfprintf_r+0x4e>
  4030a8:	aa25      	add	r2, sp, #148	; 0x94
  4030aa:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4030ac:	980c      	ldr	r0, [sp, #48]	; 0x30
  4030ae:	f002 f955 	bl	40535c <__ssprint_r>
  4030b2:	2800      	cmp	r0, #0
  4030b4:	f47f a8c0 	bne.w	402238 <_svfprintf_r+0x1a4>
  4030b8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4030ba:	46c8      	mov	r8, r9
  4030bc:	e458      	b.n	402970 <_svfprintf_r+0x8dc>
  4030be:	bf00      	nop
  4030c0:	00406ba4 	.word	0x00406ba4
  4030c4:	00406b90 	.word	0x00406b90
  4030c8:	2140      	movs	r1, #64	; 0x40
  4030ca:	980c      	ldr	r0, [sp, #48]	; 0x30
  4030cc:	f001 fa0a 	bl	4044e4 <_malloc_r>
  4030d0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4030d2:	6010      	str	r0, [r2, #0]
  4030d4:	6110      	str	r0, [r2, #16]
  4030d6:	2800      	cmp	r0, #0
  4030d8:	f000 81f2 	beq.w	4034c0 <_svfprintf_r+0x142c>
  4030dc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4030de:	2340      	movs	r3, #64	; 0x40
  4030e0:	6153      	str	r3, [r2, #20]
  4030e2:	f7fe bfee 	b.w	4020c2 <_svfprintf_r+0x2e>
  4030e6:	a823      	add	r0, sp, #140	; 0x8c
  4030e8:	a920      	add	r1, sp, #128	; 0x80
  4030ea:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  4030ec:	9004      	str	r0, [sp, #16]
  4030ee:	9103      	str	r1, [sp, #12]
  4030f0:	a81f      	add	r0, sp, #124	; 0x7c
  4030f2:	2103      	movs	r1, #3
  4030f4:	9002      	str	r0, [sp, #8]
  4030f6:	9a08      	ldr	r2, [sp, #32]
  4030f8:	9401      	str	r4, [sp, #4]
  4030fa:	463b      	mov	r3, r7
  4030fc:	9100      	str	r1, [sp, #0]
  4030fe:	980c      	ldr	r0, [sp, #48]	; 0x30
  403100:	f000 fa9a 	bl	403638 <_dtoa_r>
  403104:	4625      	mov	r5, r4
  403106:	4606      	mov	r6, r0
  403108:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40310a:	2b46      	cmp	r3, #70	; 0x46
  40310c:	eb06 0405 	add.w	r4, r6, r5
  403110:	f47f af29 	bne.w	402f66 <_svfprintf_r+0xed2>
  403114:	7833      	ldrb	r3, [r6, #0]
  403116:	2b30      	cmp	r3, #48	; 0x30
  403118:	f000 8178 	beq.w	40340c <_svfprintf_r+0x1378>
  40311c:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  40311e:	442c      	add	r4, r5
  403120:	e721      	b.n	402f66 <_svfprintf_r+0xed2>
  403122:	aa25      	add	r2, sp, #148	; 0x94
  403124:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403126:	980c      	ldr	r0, [sp, #48]	; 0x30
  403128:	f002 f918 	bl	40535c <__ssprint_r>
  40312c:	2800      	cmp	r0, #0
  40312e:	f47f a883 	bne.w	402238 <_svfprintf_r+0x1a4>
  403132:	991f      	ldr	r1, [sp, #124]	; 0x7c
  403134:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403136:	46c8      	mov	r8, r9
  403138:	e782      	b.n	403040 <_svfprintf_r+0xfac>
  40313a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40313c:	2b00      	cmp	r3, #0
  40313e:	bf08      	it	eq
  403140:	2301      	moveq	r3, #1
  403142:	930a      	str	r3, [sp, #40]	; 0x28
  403144:	e6db      	b.n	402efe <_svfprintf_r+0xe6a>
  403146:	4630      	mov	r0, r6
  403148:	940a      	str	r4, [sp, #40]	; 0x28
  40314a:	f002 f899 	bl	405280 <strlen>
  40314e:	950f      	str	r5, [sp, #60]	; 0x3c
  403150:	900e      	str	r0, [sp, #56]	; 0x38
  403152:	f8cd b01c 	str.w	fp, [sp, #28]
  403156:	4603      	mov	r3, r0
  403158:	f7ff b9f9 	b.w	40254e <_svfprintf_r+0x4ba>
  40315c:	272d      	movs	r7, #45	; 0x2d
  40315e:	2300      	movs	r3, #0
  403160:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  403164:	930a      	str	r3, [sp, #40]	; 0x28
  403166:	f7ff b8ae 	b.w	4022c6 <_svfprintf_r+0x232>
  40316a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  40316c:	9312      	str	r3, [sp, #72]	; 0x48
  40316e:	461a      	mov	r2, r3
  403170:	3303      	adds	r3, #3
  403172:	db04      	blt.n	40317e <_svfprintf_r+0x10ea>
  403174:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403176:	4619      	mov	r1, r3
  403178:	4291      	cmp	r1, r2
  40317a:	f6bf af17 	bge.w	402fac <_svfprintf_r+0xf18>
  40317e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403180:	3b02      	subs	r3, #2
  403182:	9311      	str	r3, [sp, #68]	; 0x44
  403184:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  403188:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  40318c:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40318e:	3b01      	subs	r3, #1
  403190:	2b00      	cmp	r3, #0
  403192:	931f      	str	r3, [sp, #124]	; 0x7c
  403194:	bfbd      	ittte	lt
  403196:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  403198:	f1c3 0301 	rsblt	r3, r3, #1
  40319c:	222d      	movlt	r2, #45	; 0x2d
  40319e:	222b      	movge	r2, #43	; 0x2b
  4031a0:	2b09      	cmp	r3, #9
  4031a2:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  4031a6:	f340 8116 	ble.w	4033d6 <_svfprintf_r+0x1342>
  4031aa:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  4031ae:	4620      	mov	r0, r4
  4031b0:	4dab      	ldr	r5, [pc, #684]	; (403460 <_svfprintf_r+0x13cc>)
  4031b2:	e000      	b.n	4031b6 <_svfprintf_r+0x1122>
  4031b4:	4610      	mov	r0, r2
  4031b6:	fb85 1203 	smull	r1, r2, r5, r3
  4031ba:	17d9      	asrs	r1, r3, #31
  4031bc:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  4031c0:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  4031c4:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  4031c8:	3230      	adds	r2, #48	; 0x30
  4031ca:	2909      	cmp	r1, #9
  4031cc:	f800 2c01 	strb.w	r2, [r0, #-1]
  4031d0:	460b      	mov	r3, r1
  4031d2:	f100 32ff 	add.w	r2, r0, #4294967295
  4031d6:	dced      	bgt.n	4031b4 <_svfprintf_r+0x1120>
  4031d8:	3330      	adds	r3, #48	; 0x30
  4031da:	3802      	subs	r0, #2
  4031dc:	b2d9      	uxtb	r1, r3
  4031de:	4284      	cmp	r4, r0
  4031e0:	f802 1c01 	strb.w	r1, [r2, #-1]
  4031e4:	f240 8165 	bls.w	4034b2 <_svfprintf_r+0x141e>
  4031e8:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  4031ec:	4613      	mov	r3, r2
  4031ee:	e001      	b.n	4031f4 <_svfprintf_r+0x1160>
  4031f0:	f813 1b01 	ldrb.w	r1, [r3], #1
  4031f4:	f800 1b01 	strb.w	r1, [r0], #1
  4031f8:	42a3      	cmp	r3, r4
  4031fa:	d1f9      	bne.n	4031f0 <_svfprintf_r+0x115c>
  4031fc:	3301      	adds	r3, #1
  4031fe:	1a9b      	subs	r3, r3, r2
  403200:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  403204:	4413      	add	r3, r2
  403206:	aa21      	add	r2, sp, #132	; 0x84
  403208:	1a9b      	subs	r3, r3, r2
  40320a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  40320c:	931b      	str	r3, [sp, #108]	; 0x6c
  40320e:	2a01      	cmp	r2, #1
  403210:	4413      	add	r3, r2
  403212:	930e      	str	r3, [sp, #56]	; 0x38
  403214:	f340 8119 	ble.w	40344a <_svfprintf_r+0x13b6>
  403218:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40321a:	9a19      	ldr	r2, [sp, #100]	; 0x64
  40321c:	4413      	add	r3, r2
  40321e:	930e      	str	r3, [sp, #56]	; 0x38
  403220:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403224:	9308      	str	r3, [sp, #32]
  403226:	2300      	movs	r3, #0
  403228:	9312      	str	r3, [sp, #72]	; 0x48
  40322a:	e6cf      	b.n	402fcc <_svfprintf_r+0xf38>
  40322c:	aa25      	add	r2, sp, #148	; 0x94
  40322e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403230:	980c      	ldr	r0, [sp, #48]	; 0x30
  403232:	f002 f893 	bl	40535c <__ssprint_r>
  403236:	2800      	cmp	r0, #0
  403238:	f47e affe 	bne.w	402238 <_svfprintf_r+0x1a4>
  40323c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40323e:	46c8      	mov	r8, r9
  403240:	e4d7      	b.n	402bf2 <_svfprintf_r+0xb5e>
  403242:	4623      	mov	r3, r4
  403244:	e6a2      	b.n	402f8c <_svfprintf_r+0xef8>
  403246:	aa25      	add	r2, sp, #148	; 0x94
  403248:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40324a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40324c:	f002 f886 	bl	40535c <__ssprint_r>
  403250:	2800      	cmp	r0, #0
  403252:	f47e aff1 	bne.w	402238 <_svfprintf_r+0x1a4>
  403256:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  403258:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40325a:	46c8      	mov	r8, r9
  40325c:	e5ae      	b.n	402dbc <_svfprintf_r+0xd28>
  40325e:	aa25      	add	r2, sp, #148	; 0x94
  403260:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403262:	980c      	ldr	r0, [sp, #48]	; 0x30
  403264:	f002 f87a 	bl	40535c <__ssprint_r>
  403268:	2800      	cmp	r0, #0
  40326a:	f47e afe5 	bne.w	402238 <_svfprintf_r+0x1a4>
  40326e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  403270:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403272:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403274:	1a9a      	subs	r2, r3, r2
  403276:	46c8      	mov	r8, r9
  403278:	e5b8      	b.n	402dec <_svfprintf_r+0xd58>
  40327a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40327c:	9612      	str	r6, [sp, #72]	; 0x48
  40327e:	2b06      	cmp	r3, #6
  403280:	bf28      	it	cs
  403282:	2306      	movcs	r3, #6
  403284:	960a      	str	r6, [sp, #40]	; 0x28
  403286:	4637      	mov	r7, r6
  403288:	9308      	str	r3, [sp, #32]
  40328a:	950f      	str	r5, [sp, #60]	; 0x3c
  40328c:	f8cd b01c 	str.w	fp, [sp, #28]
  403290:	930e      	str	r3, [sp, #56]	; 0x38
  403292:	4e74      	ldr	r6, [pc, #464]	; (403464 <_svfprintf_r+0x13d0>)
  403294:	f7ff b816 	b.w	4022c4 <_svfprintf_r+0x230>
  403298:	a823      	add	r0, sp, #140	; 0x8c
  40329a:	a920      	add	r1, sp, #128	; 0x80
  40329c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  40329e:	9004      	str	r0, [sp, #16]
  4032a0:	9103      	str	r1, [sp, #12]
  4032a2:	a81f      	add	r0, sp, #124	; 0x7c
  4032a4:	2103      	movs	r1, #3
  4032a6:	9002      	str	r0, [sp, #8]
  4032a8:	9a08      	ldr	r2, [sp, #32]
  4032aa:	9501      	str	r5, [sp, #4]
  4032ac:	463b      	mov	r3, r7
  4032ae:	9100      	str	r1, [sp, #0]
  4032b0:	980c      	ldr	r0, [sp, #48]	; 0x30
  4032b2:	f000 f9c1 	bl	403638 <_dtoa_r>
  4032b6:	4606      	mov	r6, r0
  4032b8:	1944      	adds	r4, r0, r5
  4032ba:	e72b      	b.n	403114 <_svfprintf_r+0x1080>
  4032bc:	2306      	movs	r3, #6
  4032be:	930a      	str	r3, [sp, #40]	; 0x28
  4032c0:	e61d      	b.n	402efe <_svfprintf_r+0xe6a>
  4032c2:	272d      	movs	r7, #45	; 0x2d
  4032c4:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4032c8:	f7ff bacd 	b.w	402866 <_svfprintf_r+0x7d2>
  4032cc:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4032ce:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4032d0:	4413      	add	r3, r2
  4032d2:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4032d4:	930e      	str	r3, [sp, #56]	; 0x38
  4032d6:	2a00      	cmp	r2, #0
  4032d8:	f340 80b0 	ble.w	40343c <_svfprintf_r+0x13a8>
  4032dc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4032e0:	9308      	str	r3, [sp, #32]
  4032e2:	2367      	movs	r3, #103	; 0x67
  4032e4:	9311      	str	r3, [sp, #68]	; 0x44
  4032e6:	e671      	b.n	402fcc <_svfprintf_r+0xf38>
  4032e8:	2b00      	cmp	r3, #0
  4032ea:	f340 80c3 	ble.w	403474 <_svfprintf_r+0x13e0>
  4032ee:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4032f0:	2a00      	cmp	r2, #0
  4032f2:	f040 8099 	bne.w	403428 <_svfprintf_r+0x1394>
  4032f6:	f01b 0f01 	tst.w	fp, #1
  4032fa:	f040 8095 	bne.w	403428 <_svfprintf_r+0x1394>
  4032fe:	9308      	str	r3, [sp, #32]
  403300:	930e      	str	r3, [sp, #56]	; 0x38
  403302:	e663      	b.n	402fcc <_svfprintf_r+0xf38>
  403304:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403306:	9308      	str	r3, [sp, #32]
  403308:	930e      	str	r3, [sp, #56]	; 0x38
  40330a:	900a      	str	r0, [sp, #40]	; 0x28
  40330c:	950f      	str	r5, [sp, #60]	; 0x3c
  40330e:	f8cd b01c 	str.w	fp, [sp, #28]
  403312:	9012      	str	r0, [sp, #72]	; 0x48
  403314:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403318:	f7fe bfd4 	b.w	4022c4 <_svfprintf_r+0x230>
  40331c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40331e:	2b47      	cmp	r3, #71	; 0x47
  403320:	f47f ae20 	bne.w	402f64 <_svfprintf_r+0xed0>
  403324:	f01b 0f01 	tst.w	fp, #1
  403328:	f47f aeee 	bne.w	403108 <_svfprintf_r+0x1074>
  40332c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  40332e:	1b9b      	subs	r3, r3, r6
  403330:	9313      	str	r3, [sp, #76]	; 0x4c
  403332:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403334:	2b47      	cmp	r3, #71	; 0x47
  403336:	f43f af18 	beq.w	40316a <_svfprintf_r+0x10d6>
  40333a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  40333c:	9312      	str	r3, [sp, #72]	; 0x48
  40333e:	e721      	b.n	403184 <_svfprintf_r+0x10f0>
  403340:	424f      	negs	r7, r1
  403342:	3110      	adds	r1, #16
  403344:	4d48      	ldr	r5, [pc, #288]	; (403468 <_svfprintf_r+0x13d4>)
  403346:	da2f      	bge.n	4033a8 <_svfprintf_r+0x1314>
  403348:	2410      	movs	r4, #16
  40334a:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  40334e:	e004      	b.n	40335a <_svfprintf_r+0x12c6>
  403350:	f108 0808 	add.w	r8, r8, #8
  403354:	3f10      	subs	r7, #16
  403356:	2f10      	cmp	r7, #16
  403358:	dd26      	ble.n	4033a8 <_svfprintf_r+0x1314>
  40335a:	3301      	adds	r3, #1
  40335c:	3210      	adds	r2, #16
  40335e:	2b07      	cmp	r3, #7
  403360:	9227      	str	r2, [sp, #156]	; 0x9c
  403362:	9326      	str	r3, [sp, #152]	; 0x98
  403364:	f8c8 5000 	str.w	r5, [r8]
  403368:	f8c8 4004 	str.w	r4, [r8, #4]
  40336c:	ddf0      	ble.n	403350 <_svfprintf_r+0x12bc>
  40336e:	aa25      	add	r2, sp, #148	; 0x94
  403370:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403372:	4658      	mov	r0, fp
  403374:	f001 fff2 	bl	40535c <__ssprint_r>
  403378:	2800      	cmp	r0, #0
  40337a:	f47e af5d 	bne.w	402238 <_svfprintf_r+0x1a4>
  40337e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403380:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403382:	46c8      	mov	r8, r9
  403384:	e7e6      	b.n	403354 <_svfprintf_r+0x12c0>
  403386:	aa25      	add	r2, sp, #148	; 0x94
  403388:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40338a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40338c:	f001 ffe6 	bl	40535c <__ssprint_r>
  403390:	2800      	cmp	r0, #0
  403392:	f47e af51 	bne.w	402238 <_svfprintf_r+0x1a4>
  403396:	991f      	ldr	r1, [sp, #124]	; 0x7c
  403398:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40339a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40339c:	46c8      	mov	r8, r9
  40339e:	e667      	b.n	403070 <_svfprintf_r+0xfdc>
  4033a0:	2000      	movs	r0, #0
  4033a2:	900a      	str	r0, [sp, #40]	; 0x28
  4033a4:	f7fe bed0 	b.w	402148 <_svfprintf_r+0xb4>
  4033a8:	3301      	adds	r3, #1
  4033aa:	443a      	add	r2, r7
  4033ac:	2b07      	cmp	r3, #7
  4033ae:	e888 00a0 	stmia.w	r8, {r5, r7}
  4033b2:	9227      	str	r2, [sp, #156]	; 0x9c
  4033b4:	9326      	str	r3, [sp, #152]	; 0x98
  4033b6:	f108 0808 	add.w	r8, r8, #8
  4033ba:	f77f ae5c 	ble.w	403076 <_svfprintf_r+0xfe2>
  4033be:	aa25      	add	r2, sp, #148	; 0x94
  4033c0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4033c2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4033c4:	f001 ffca 	bl	40535c <__ssprint_r>
  4033c8:	2800      	cmp	r0, #0
  4033ca:	f47e af35 	bne.w	402238 <_svfprintf_r+0x1a4>
  4033ce:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4033d0:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4033d2:	46c8      	mov	r8, r9
  4033d4:	e64f      	b.n	403076 <_svfprintf_r+0xfe2>
  4033d6:	3330      	adds	r3, #48	; 0x30
  4033d8:	2230      	movs	r2, #48	; 0x30
  4033da:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  4033de:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  4033e2:	ab22      	add	r3, sp, #136	; 0x88
  4033e4:	e70f      	b.n	403206 <_svfprintf_r+0x1172>
  4033e6:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4033e8:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4033ea:	4413      	add	r3, r2
  4033ec:	930e      	str	r3, [sp, #56]	; 0x38
  4033ee:	e775      	b.n	4032dc <_svfprintf_r+0x1248>
  4033f0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4033f2:	e5cb      	b.n	402f8c <_svfprintf_r+0xef8>
  4033f4:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4033f6:	4e1d      	ldr	r6, [pc, #116]	; (40346c <_svfprintf_r+0x13d8>)
  4033f8:	2b00      	cmp	r3, #0
  4033fa:	bfb6      	itet	lt
  4033fc:	272d      	movlt	r7, #45	; 0x2d
  4033fe:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  403402:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  403406:	4b1a      	ldr	r3, [pc, #104]	; (403470 <_svfprintf_r+0x13dc>)
  403408:	f7ff ba2f 	b.w	40286a <_svfprintf_r+0x7d6>
  40340c:	9a16      	ldr	r2, [sp, #88]	; 0x58
  40340e:	9808      	ldr	r0, [sp, #32]
  403410:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  403412:	4639      	mov	r1, r7
  403414:	f002 fc6c 	bl	405cf0 <__aeabi_dcmpeq>
  403418:	2800      	cmp	r0, #0
  40341a:	f47f ae7f 	bne.w	40311c <_svfprintf_r+0x1088>
  40341e:	f1c5 0501 	rsb	r5, r5, #1
  403422:	951f      	str	r5, [sp, #124]	; 0x7c
  403424:	442c      	add	r4, r5
  403426:	e59e      	b.n	402f66 <_svfprintf_r+0xed2>
  403428:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40342a:	9a19      	ldr	r2, [sp, #100]	; 0x64
  40342c:	4413      	add	r3, r2
  40342e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403430:	441a      	add	r2, r3
  403432:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  403436:	920e      	str	r2, [sp, #56]	; 0x38
  403438:	9308      	str	r3, [sp, #32]
  40343a:	e5c7      	b.n	402fcc <_svfprintf_r+0xf38>
  40343c:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40343e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  403440:	f1c3 0301 	rsb	r3, r3, #1
  403444:	441a      	add	r2, r3
  403446:	4613      	mov	r3, r2
  403448:	e7d0      	b.n	4033ec <_svfprintf_r+0x1358>
  40344a:	f01b 0301 	ands.w	r3, fp, #1
  40344e:	9312      	str	r3, [sp, #72]	; 0x48
  403450:	f47f aee2 	bne.w	403218 <_svfprintf_r+0x1184>
  403454:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403456:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40345a:	9308      	str	r3, [sp, #32]
  40345c:	e5b6      	b.n	402fcc <_svfprintf_r+0xf38>
  40345e:	bf00      	nop
  403460:	66666667 	.word	0x66666667
  403464:	00406b88 	.word	0x00406b88
  403468:	00406ba4 	.word	0x00406ba4
  40346c:	00406b5c 	.word	0x00406b5c
  403470:	00406b58 	.word	0x00406b58
  403474:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403476:	b913      	cbnz	r3, 40347e <_svfprintf_r+0x13ea>
  403478:	f01b 0f01 	tst.w	fp, #1
  40347c:	d002      	beq.n	403484 <_svfprintf_r+0x13f0>
  40347e:	9b19      	ldr	r3, [sp, #100]	; 0x64
  403480:	3301      	adds	r3, #1
  403482:	e7d4      	b.n	40342e <_svfprintf_r+0x139a>
  403484:	2301      	movs	r3, #1
  403486:	e73a      	b.n	4032fe <_svfprintf_r+0x126a>
  403488:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  40348a:	f89a 3001 	ldrb.w	r3, [sl, #1]
  40348e:	6828      	ldr	r0, [r5, #0]
  403490:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  403494:	900a      	str	r0, [sp, #40]	; 0x28
  403496:	4628      	mov	r0, r5
  403498:	3004      	adds	r0, #4
  40349a:	46a2      	mov	sl, r4
  40349c:	900f      	str	r0, [sp, #60]	; 0x3c
  40349e:	f7fe be51 	b.w	402144 <_svfprintf_r+0xb0>
  4034a2:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4034a6:	f7ff b867 	b.w	402578 <_svfprintf_r+0x4e4>
  4034aa:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4034ae:	f7ff ba15 	b.w	4028dc <_svfprintf_r+0x848>
  4034b2:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  4034b6:	e6a6      	b.n	403206 <_svfprintf_r+0x1172>
  4034b8:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4034bc:	f7ff b8eb 	b.w	402696 <_svfprintf_r+0x602>
  4034c0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4034c2:	230c      	movs	r3, #12
  4034c4:	6013      	str	r3, [r2, #0]
  4034c6:	f04f 33ff 	mov.w	r3, #4294967295
  4034ca:	9309      	str	r3, [sp, #36]	; 0x24
  4034cc:	f7fe bebd 	b.w	40224a <_svfprintf_r+0x1b6>
  4034d0:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4034d4:	f7ff b99a 	b.w	40280c <_svfprintf_r+0x778>
  4034d8:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4034dc:	f7ff b976 	b.w	4027cc <_svfprintf_r+0x738>
  4034e0:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4034e4:	f7ff b959 	b.w	40279a <_svfprintf_r+0x706>
  4034e8:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4034ec:	f7ff b912 	b.w	402714 <_svfprintf_r+0x680>

004034f0 <register_fini>:
  4034f0:	4b02      	ldr	r3, [pc, #8]	; (4034fc <register_fini+0xc>)
  4034f2:	b113      	cbz	r3, 4034fa <register_fini+0xa>
  4034f4:	4802      	ldr	r0, [pc, #8]	; (403500 <register_fini+0x10>)
  4034f6:	f000 b805 	b.w	403504 <atexit>
  4034fa:	4770      	bx	lr
  4034fc:	00000000 	.word	0x00000000
  403500:	0040448d 	.word	0x0040448d

00403504 <atexit>:
  403504:	2300      	movs	r3, #0
  403506:	4601      	mov	r1, r0
  403508:	461a      	mov	r2, r3
  40350a:	4618      	mov	r0, r3
  40350c:	f001 bfa4 	b.w	405458 <__register_exitproc>

00403510 <quorem>:
  403510:	6902      	ldr	r2, [r0, #16]
  403512:	690b      	ldr	r3, [r1, #16]
  403514:	4293      	cmp	r3, r2
  403516:	f300 808d 	bgt.w	403634 <quorem+0x124>
  40351a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40351e:	f103 38ff 	add.w	r8, r3, #4294967295
  403522:	f101 0714 	add.w	r7, r1, #20
  403526:	f100 0b14 	add.w	fp, r0, #20
  40352a:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  40352e:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  403532:	ea4f 0488 	mov.w	r4, r8, lsl #2
  403536:	b083      	sub	sp, #12
  403538:	3201      	adds	r2, #1
  40353a:	fbb3 f9f2 	udiv	r9, r3, r2
  40353e:	eb0b 0304 	add.w	r3, fp, r4
  403542:	9400      	str	r4, [sp, #0]
  403544:	eb07 0a04 	add.w	sl, r7, r4
  403548:	9301      	str	r3, [sp, #4]
  40354a:	f1b9 0f00 	cmp.w	r9, #0
  40354e:	d039      	beq.n	4035c4 <quorem+0xb4>
  403550:	2500      	movs	r5, #0
  403552:	462e      	mov	r6, r5
  403554:	46bc      	mov	ip, r7
  403556:	46de      	mov	lr, fp
  403558:	f85c 4b04 	ldr.w	r4, [ip], #4
  40355c:	f8de 3000 	ldr.w	r3, [lr]
  403560:	b2a2      	uxth	r2, r4
  403562:	fb09 5502 	mla	r5, r9, r2, r5
  403566:	0c22      	lsrs	r2, r4, #16
  403568:	0c2c      	lsrs	r4, r5, #16
  40356a:	fb09 4202 	mla	r2, r9, r2, r4
  40356e:	b2ad      	uxth	r5, r5
  403570:	1b75      	subs	r5, r6, r5
  403572:	b296      	uxth	r6, r2
  403574:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  403578:	fa15 f383 	uxtah	r3, r5, r3
  40357c:	eb06 4623 	add.w	r6, r6, r3, asr #16
  403580:	b29b      	uxth	r3, r3
  403582:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  403586:	45e2      	cmp	sl, ip
  403588:	ea4f 4512 	mov.w	r5, r2, lsr #16
  40358c:	f84e 3b04 	str.w	r3, [lr], #4
  403590:	ea4f 4626 	mov.w	r6, r6, asr #16
  403594:	d2e0      	bcs.n	403558 <quorem+0x48>
  403596:	9b00      	ldr	r3, [sp, #0]
  403598:	f85b 3003 	ldr.w	r3, [fp, r3]
  40359c:	b993      	cbnz	r3, 4035c4 <quorem+0xb4>
  40359e:	9c01      	ldr	r4, [sp, #4]
  4035a0:	1f23      	subs	r3, r4, #4
  4035a2:	459b      	cmp	fp, r3
  4035a4:	d20c      	bcs.n	4035c0 <quorem+0xb0>
  4035a6:	f854 3c04 	ldr.w	r3, [r4, #-4]
  4035aa:	b94b      	cbnz	r3, 4035c0 <quorem+0xb0>
  4035ac:	f1a4 0308 	sub.w	r3, r4, #8
  4035b0:	e002      	b.n	4035b8 <quorem+0xa8>
  4035b2:	681a      	ldr	r2, [r3, #0]
  4035b4:	3b04      	subs	r3, #4
  4035b6:	b91a      	cbnz	r2, 4035c0 <quorem+0xb0>
  4035b8:	459b      	cmp	fp, r3
  4035ba:	f108 38ff 	add.w	r8, r8, #4294967295
  4035be:	d3f8      	bcc.n	4035b2 <quorem+0xa2>
  4035c0:	f8c0 8010 	str.w	r8, [r0, #16]
  4035c4:	4604      	mov	r4, r0
  4035c6:	f001 fd37 	bl	405038 <__mcmp>
  4035ca:	2800      	cmp	r0, #0
  4035cc:	db2e      	blt.n	40362c <quorem+0x11c>
  4035ce:	f109 0901 	add.w	r9, r9, #1
  4035d2:	465d      	mov	r5, fp
  4035d4:	2300      	movs	r3, #0
  4035d6:	f857 1b04 	ldr.w	r1, [r7], #4
  4035da:	6828      	ldr	r0, [r5, #0]
  4035dc:	b28a      	uxth	r2, r1
  4035de:	1a9a      	subs	r2, r3, r2
  4035e0:	0c0b      	lsrs	r3, r1, #16
  4035e2:	fa12 f280 	uxtah	r2, r2, r0
  4035e6:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  4035ea:	eb03 4322 	add.w	r3, r3, r2, asr #16
  4035ee:	b292      	uxth	r2, r2
  4035f0:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  4035f4:	45ba      	cmp	sl, r7
  4035f6:	f845 2b04 	str.w	r2, [r5], #4
  4035fa:	ea4f 4323 	mov.w	r3, r3, asr #16
  4035fe:	d2ea      	bcs.n	4035d6 <quorem+0xc6>
  403600:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  403604:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  403608:	b982      	cbnz	r2, 40362c <quorem+0x11c>
  40360a:	1f1a      	subs	r2, r3, #4
  40360c:	4593      	cmp	fp, r2
  40360e:	d20b      	bcs.n	403628 <quorem+0x118>
  403610:	f853 2c04 	ldr.w	r2, [r3, #-4]
  403614:	b942      	cbnz	r2, 403628 <quorem+0x118>
  403616:	3b08      	subs	r3, #8
  403618:	e002      	b.n	403620 <quorem+0x110>
  40361a:	681a      	ldr	r2, [r3, #0]
  40361c:	3b04      	subs	r3, #4
  40361e:	b91a      	cbnz	r2, 403628 <quorem+0x118>
  403620:	459b      	cmp	fp, r3
  403622:	f108 38ff 	add.w	r8, r8, #4294967295
  403626:	d3f8      	bcc.n	40361a <quorem+0x10a>
  403628:	f8c4 8010 	str.w	r8, [r4, #16]
  40362c:	4648      	mov	r0, r9
  40362e:	b003      	add	sp, #12
  403630:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403634:	2000      	movs	r0, #0
  403636:	4770      	bx	lr

00403638 <_dtoa_r>:
  403638:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40363c:	6c01      	ldr	r1, [r0, #64]	; 0x40
  40363e:	b09b      	sub	sp, #108	; 0x6c
  403640:	4604      	mov	r4, r0
  403642:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  403644:	4692      	mov	sl, r2
  403646:	469b      	mov	fp, r3
  403648:	b141      	cbz	r1, 40365c <_dtoa_r+0x24>
  40364a:	6c42      	ldr	r2, [r0, #68]	; 0x44
  40364c:	604a      	str	r2, [r1, #4]
  40364e:	2301      	movs	r3, #1
  403650:	4093      	lsls	r3, r2
  403652:	608b      	str	r3, [r1, #8]
  403654:	f001 fb18 	bl	404c88 <_Bfree>
  403658:	2300      	movs	r3, #0
  40365a:	6423      	str	r3, [r4, #64]	; 0x40
  40365c:	f1bb 0f00 	cmp.w	fp, #0
  403660:	465d      	mov	r5, fp
  403662:	db35      	blt.n	4036d0 <_dtoa_r+0x98>
  403664:	2300      	movs	r3, #0
  403666:	6033      	str	r3, [r6, #0]
  403668:	4b9d      	ldr	r3, [pc, #628]	; (4038e0 <_dtoa_r+0x2a8>)
  40366a:	43ab      	bics	r3, r5
  40366c:	d015      	beq.n	40369a <_dtoa_r+0x62>
  40366e:	4650      	mov	r0, sl
  403670:	4659      	mov	r1, fp
  403672:	2200      	movs	r2, #0
  403674:	2300      	movs	r3, #0
  403676:	f002 fb3b 	bl	405cf0 <__aeabi_dcmpeq>
  40367a:	4680      	mov	r8, r0
  40367c:	2800      	cmp	r0, #0
  40367e:	d02d      	beq.n	4036dc <_dtoa_r+0xa4>
  403680:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403682:	2301      	movs	r3, #1
  403684:	6013      	str	r3, [r2, #0]
  403686:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403688:	2b00      	cmp	r3, #0
  40368a:	f000 80bd 	beq.w	403808 <_dtoa_r+0x1d0>
  40368e:	4895      	ldr	r0, [pc, #596]	; (4038e4 <_dtoa_r+0x2ac>)
  403690:	6018      	str	r0, [r3, #0]
  403692:	3801      	subs	r0, #1
  403694:	b01b      	add	sp, #108	; 0x6c
  403696:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40369a:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40369c:	f242 730f 	movw	r3, #9999	; 0x270f
  4036a0:	6013      	str	r3, [r2, #0]
  4036a2:	f1ba 0f00 	cmp.w	sl, #0
  4036a6:	d10d      	bne.n	4036c4 <_dtoa_r+0x8c>
  4036a8:	f3c5 0513 	ubfx	r5, r5, #0, #20
  4036ac:	b955      	cbnz	r5, 4036c4 <_dtoa_r+0x8c>
  4036ae:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4036b0:	488d      	ldr	r0, [pc, #564]	; (4038e8 <_dtoa_r+0x2b0>)
  4036b2:	2b00      	cmp	r3, #0
  4036b4:	d0ee      	beq.n	403694 <_dtoa_r+0x5c>
  4036b6:	f100 0308 	add.w	r3, r0, #8
  4036ba:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  4036bc:	6013      	str	r3, [r2, #0]
  4036be:	b01b      	add	sp, #108	; 0x6c
  4036c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4036c4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4036c6:	4889      	ldr	r0, [pc, #548]	; (4038ec <_dtoa_r+0x2b4>)
  4036c8:	2b00      	cmp	r3, #0
  4036ca:	d0e3      	beq.n	403694 <_dtoa_r+0x5c>
  4036cc:	1cc3      	adds	r3, r0, #3
  4036ce:	e7f4      	b.n	4036ba <_dtoa_r+0x82>
  4036d0:	2301      	movs	r3, #1
  4036d2:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  4036d6:	6033      	str	r3, [r6, #0]
  4036d8:	46ab      	mov	fp, r5
  4036da:	e7c5      	b.n	403668 <_dtoa_r+0x30>
  4036dc:	aa18      	add	r2, sp, #96	; 0x60
  4036de:	ab19      	add	r3, sp, #100	; 0x64
  4036e0:	9201      	str	r2, [sp, #4]
  4036e2:	9300      	str	r3, [sp, #0]
  4036e4:	4652      	mov	r2, sl
  4036e6:	465b      	mov	r3, fp
  4036e8:	4620      	mov	r0, r4
  4036ea:	f001 fd45 	bl	405178 <__d2b>
  4036ee:	0d2b      	lsrs	r3, r5, #20
  4036f0:	4681      	mov	r9, r0
  4036f2:	d071      	beq.n	4037d8 <_dtoa_r+0x1a0>
  4036f4:	f3cb 0213 	ubfx	r2, fp, #0, #20
  4036f8:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  4036fc:	9f18      	ldr	r7, [sp, #96]	; 0x60
  4036fe:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  403702:	4650      	mov	r0, sl
  403704:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  403708:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  40370c:	2200      	movs	r2, #0
  40370e:	4b78      	ldr	r3, [pc, #480]	; (4038f0 <_dtoa_r+0x2b8>)
  403710:	f7fe f85e 	bl	4017d0 <__aeabi_dsub>
  403714:	a36c      	add	r3, pc, #432	; (adr r3, 4038c8 <_dtoa_r+0x290>)
  403716:	e9d3 2300 	ldrd	r2, r3, [r3]
  40371a:	f7fe fa0d 	bl	401b38 <__aeabi_dmul>
  40371e:	a36c      	add	r3, pc, #432	; (adr r3, 4038d0 <_dtoa_r+0x298>)
  403720:	e9d3 2300 	ldrd	r2, r3, [r3]
  403724:	f7fe f856 	bl	4017d4 <__adddf3>
  403728:	e9cd 0102 	strd	r0, r1, [sp, #8]
  40372c:	4630      	mov	r0, r6
  40372e:	f7fe f99d 	bl	401a6c <__aeabi_i2d>
  403732:	a369      	add	r3, pc, #420	; (adr r3, 4038d8 <_dtoa_r+0x2a0>)
  403734:	e9d3 2300 	ldrd	r2, r3, [r3]
  403738:	f7fe f9fe 	bl	401b38 <__aeabi_dmul>
  40373c:	4602      	mov	r2, r0
  40373e:	460b      	mov	r3, r1
  403740:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  403744:	f7fe f846 	bl	4017d4 <__adddf3>
  403748:	e9cd 0104 	strd	r0, r1, [sp, #16]
  40374c:	f002 fb18 	bl	405d80 <__aeabi_d2iz>
  403750:	2200      	movs	r2, #0
  403752:	9002      	str	r0, [sp, #8]
  403754:	2300      	movs	r3, #0
  403756:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  40375a:	f002 fad3 	bl	405d04 <__aeabi_dcmplt>
  40375e:	2800      	cmp	r0, #0
  403760:	f040 8173 	bne.w	403a4a <_dtoa_r+0x412>
  403764:	9d02      	ldr	r5, [sp, #8]
  403766:	2d16      	cmp	r5, #22
  403768:	f200 815d 	bhi.w	403a26 <_dtoa_r+0x3ee>
  40376c:	4b61      	ldr	r3, [pc, #388]	; (4038f4 <_dtoa_r+0x2bc>)
  40376e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  403772:	e9d3 0100 	ldrd	r0, r1, [r3]
  403776:	4652      	mov	r2, sl
  403778:	465b      	mov	r3, fp
  40377a:	f002 fae1 	bl	405d40 <__aeabi_dcmpgt>
  40377e:	2800      	cmp	r0, #0
  403780:	f000 81c5 	beq.w	403b0e <_dtoa_r+0x4d6>
  403784:	1e6b      	subs	r3, r5, #1
  403786:	9302      	str	r3, [sp, #8]
  403788:	2300      	movs	r3, #0
  40378a:	930e      	str	r3, [sp, #56]	; 0x38
  40378c:	1bbf      	subs	r7, r7, r6
  40378e:	1e7b      	subs	r3, r7, #1
  403790:	9306      	str	r3, [sp, #24]
  403792:	f100 8154 	bmi.w	403a3e <_dtoa_r+0x406>
  403796:	2300      	movs	r3, #0
  403798:	9308      	str	r3, [sp, #32]
  40379a:	9b02      	ldr	r3, [sp, #8]
  40379c:	2b00      	cmp	r3, #0
  40379e:	f2c0 8145 	blt.w	403a2c <_dtoa_r+0x3f4>
  4037a2:	9a06      	ldr	r2, [sp, #24]
  4037a4:	930d      	str	r3, [sp, #52]	; 0x34
  4037a6:	4611      	mov	r1, r2
  4037a8:	4419      	add	r1, r3
  4037aa:	2300      	movs	r3, #0
  4037ac:	9106      	str	r1, [sp, #24]
  4037ae:	930c      	str	r3, [sp, #48]	; 0x30
  4037b0:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4037b2:	2b09      	cmp	r3, #9
  4037b4:	d82a      	bhi.n	40380c <_dtoa_r+0x1d4>
  4037b6:	2b05      	cmp	r3, #5
  4037b8:	f340 865b 	ble.w	404472 <_dtoa_r+0xe3a>
  4037bc:	3b04      	subs	r3, #4
  4037be:	9324      	str	r3, [sp, #144]	; 0x90
  4037c0:	2500      	movs	r5, #0
  4037c2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4037c4:	3b02      	subs	r3, #2
  4037c6:	2b03      	cmp	r3, #3
  4037c8:	f200 8642 	bhi.w	404450 <_dtoa_r+0xe18>
  4037cc:	e8df f013 	tbh	[pc, r3, lsl #1]
  4037d0:	02c903d4 	.word	0x02c903d4
  4037d4:	046103df 	.word	0x046103df
  4037d8:	9f18      	ldr	r7, [sp, #96]	; 0x60
  4037da:	9e19      	ldr	r6, [sp, #100]	; 0x64
  4037dc:	443e      	add	r6, r7
  4037de:	f206 4332 	addw	r3, r6, #1074	; 0x432
  4037e2:	2b20      	cmp	r3, #32
  4037e4:	f340 818e 	ble.w	403b04 <_dtoa_r+0x4cc>
  4037e8:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  4037ec:	f206 4012 	addw	r0, r6, #1042	; 0x412
  4037f0:	409d      	lsls	r5, r3
  4037f2:	fa2a f000 	lsr.w	r0, sl, r0
  4037f6:	4328      	orrs	r0, r5
  4037f8:	f7fe f928 	bl	401a4c <__aeabi_ui2d>
  4037fc:	2301      	movs	r3, #1
  4037fe:	3e01      	subs	r6, #1
  403800:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  403804:	9314      	str	r3, [sp, #80]	; 0x50
  403806:	e781      	b.n	40370c <_dtoa_r+0xd4>
  403808:	483b      	ldr	r0, [pc, #236]	; (4038f8 <_dtoa_r+0x2c0>)
  40380a:	e743      	b.n	403694 <_dtoa_r+0x5c>
  40380c:	2100      	movs	r1, #0
  40380e:	6461      	str	r1, [r4, #68]	; 0x44
  403810:	4620      	mov	r0, r4
  403812:	9125      	str	r1, [sp, #148]	; 0x94
  403814:	f001 fa12 	bl	404c3c <_Balloc>
  403818:	f04f 33ff 	mov.w	r3, #4294967295
  40381c:	930a      	str	r3, [sp, #40]	; 0x28
  40381e:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403820:	930f      	str	r3, [sp, #60]	; 0x3c
  403822:	2301      	movs	r3, #1
  403824:	9004      	str	r0, [sp, #16]
  403826:	6420      	str	r0, [r4, #64]	; 0x40
  403828:	9224      	str	r2, [sp, #144]	; 0x90
  40382a:	930b      	str	r3, [sp, #44]	; 0x2c
  40382c:	9b19      	ldr	r3, [sp, #100]	; 0x64
  40382e:	2b00      	cmp	r3, #0
  403830:	f2c0 80d9 	blt.w	4039e6 <_dtoa_r+0x3ae>
  403834:	9a02      	ldr	r2, [sp, #8]
  403836:	2a0e      	cmp	r2, #14
  403838:	f300 80d5 	bgt.w	4039e6 <_dtoa_r+0x3ae>
  40383c:	4b2d      	ldr	r3, [pc, #180]	; (4038f4 <_dtoa_r+0x2bc>)
  40383e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403842:	e9d3 2300 	ldrd	r2, r3, [r3]
  403846:	e9cd 2308 	strd	r2, r3, [sp, #32]
  40384a:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40384c:	2b00      	cmp	r3, #0
  40384e:	f2c0 83ba 	blt.w	403fc6 <_dtoa_r+0x98e>
  403852:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  403856:	4650      	mov	r0, sl
  403858:	462a      	mov	r2, r5
  40385a:	4633      	mov	r3, r6
  40385c:	4659      	mov	r1, fp
  40385e:	f7fe fa95 	bl	401d8c <__aeabi_ddiv>
  403862:	f002 fa8d 	bl	405d80 <__aeabi_d2iz>
  403866:	4680      	mov	r8, r0
  403868:	f7fe f900 	bl	401a6c <__aeabi_i2d>
  40386c:	462a      	mov	r2, r5
  40386e:	4633      	mov	r3, r6
  403870:	f7fe f962 	bl	401b38 <__aeabi_dmul>
  403874:	460b      	mov	r3, r1
  403876:	4602      	mov	r2, r0
  403878:	4659      	mov	r1, fp
  40387a:	4650      	mov	r0, sl
  40387c:	f7fd ffa8 	bl	4017d0 <__aeabi_dsub>
  403880:	9d04      	ldr	r5, [sp, #16]
  403882:	f108 0330 	add.w	r3, r8, #48	; 0x30
  403886:	702b      	strb	r3, [r5, #0]
  403888:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40388a:	2b01      	cmp	r3, #1
  40388c:	4606      	mov	r6, r0
  40388e:	460f      	mov	r7, r1
  403890:	f105 0501 	add.w	r5, r5, #1
  403894:	d068      	beq.n	403968 <_dtoa_r+0x330>
  403896:	2200      	movs	r2, #0
  403898:	4b18      	ldr	r3, [pc, #96]	; (4038fc <_dtoa_r+0x2c4>)
  40389a:	f7fe f94d 	bl	401b38 <__aeabi_dmul>
  40389e:	2200      	movs	r2, #0
  4038a0:	2300      	movs	r3, #0
  4038a2:	4606      	mov	r6, r0
  4038a4:	460f      	mov	r7, r1
  4038a6:	f002 fa23 	bl	405cf0 <__aeabi_dcmpeq>
  4038aa:	2800      	cmp	r0, #0
  4038ac:	f040 8088 	bne.w	4039c0 <_dtoa_r+0x388>
  4038b0:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  4038b4:	f04f 0a00 	mov.w	sl, #0
  4038b8:	f8df b040 	ldr.w	fp, [pc, #64]	; 4038fc <_dtoa_r+0x2c4>
  4038bc:	940c      	str	r4, [sp, #48]	; 0x30
  4038be:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  4038c2:	e028      	b.n	403916 <_dtoa_r+0x2de>
  4038c4:	f3af 8000 	nop.w
  4038c8:	636f4361 	.word	0x636f4361
  4038cc:	3fd287a7 	.word	0x3fd287a7
  4038d0:	8b60c8b3 	.word	0x8b60c8b3
  4038d4:	3fc68a28 	.word	0x3fc68a28
  4038d8:	509f79fb 	.word	0x509f79fb
  4038dc:	3fd34413 	.word	0x3fd34413
  4038e0:	7ff00000 	.word	0x7ff00000
  4038e4:	00406b91 	.word	0x00406b91
  4038e8:	00406bb4 	.word	0x00406bb4
  4038ec:	00406bc0 	.word	0x00406bc0
  4038f0:	3ff80000 	.word	0x3ff80000
  4038f4:	00406bf0 	.word	0x00406bf0
  4038f8:	00406b90 	.word	0x00406b90
  4038fc:	40240000 	.word	0x40240000
  403900:	f7fe f91a 	bl	401b38 <__aeabi_dmul>
  403904:	2200      	movs	r2, #0
  403906:	2300      	movs	r3, #0
  403908:	4606      	mov	r6, r0
  40390a:	460f      	mov	r7, r1
  40390c:	f002 f9f0 	bl	405cf0 <__aeabi_dcmpeq>
  403910:	2800      	cmp	r0, #0
  403912:	f040 83c1 	bne.w	404098 <_dtoa_r+0xa60>
  403916:	4642      	mov	r2, r8
  403918:	464b      	mov	r3, r9
  40391a:	4630      	mov	r0, r6
  40391c:	4639      	mov	r1, r7
  40391e:	f7fe fa35 	bl	401d8c <__aeabi_ddiv>
  403922:	f002 fa2d 	bl	405d80 <__aeabi_d2iz>
  403926:	4604      	mov	r4, r0
  403928:	f7fe f8a0 	bl	401a6c <__aeabi_i2d>
  40392c:	4642      	mov	r2, r8
  40392e:	464b      	mov	r3, r9
  403930:	f7fe f902 	bl	401b38 <__aeabi_dmul>
  403934:	4602      	mov	r2, r0
  403936:	460b      	mov	r3, r1
  403938:	4630      	mov	r0, r6
  40393a:	4639      	mov	r1, r7
  40393c:	f7fd ff48 	bl	4017d0 <__aeabi_dsub>
  403940:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  403944:	9e04      	ldr	r6, [sp, #16]
  403946:	f805 eb01 	strb.w	lr, [r5], #1
  40394a:	eba5 0e06 	sub.w	lr, r5, r6
  40394e:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  403950:	45b6      	cmp	lr, r6
  403952:	e9cd 0106 	strd	r0, r1, [sp, #24]
  403956:	4652      	mov	r2, sl
  403958:	465b      	mov	r3, fp
  40395a:	d1d1      	bne.n	403900 <_dtoa_r+0x2c8>
  40395c:	46a0      	mov	r8, r4
  40395e:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403962:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403964:	4606      	mov	r6, r0
  403966:	460f      	mov	r7, r1
  403968:	4632      	mov	r2, r6
  40396a:	463b      	mov	r3, r7
  40396c:	4630      	mov	r0, r6
  40396e:	4639      	mov	r1, r7
  403970:	f7fd ff30 	bl	4017d4 <__adddf3>
  403974:	4606      	mov	r6, r0
  403976:	460f      	mov	r7, r1
  403978:	4602      	mov	r2, r0
  40397a:	460b      	mov	r3, r1
  40397c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403980:	f002 f9c0 	bl	405d04 <__aeabi_dcmplt>
  403984:	b948      	cbnz	r0, 40399a <_dtoa_r+0x362>
  403986:	4632      	mov	r2, r6
  403988:	463b      	mov	r3, r7
  40398a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  40398e:	f002 f9af 	bl	405cf0 <__aeabi_dcmpeq>
  403992:	b1a8      	cbz	r0, 4039c0 <_dtoa_r+0x388>
  403994:	f018 0f01 	tst.w	r8, #1
  403998:	d012      	beq.n	4039c0 <_dtoa_r+0x388>
  40399a:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  40399e:	9a04      	ldr	r2, [sp, #16]
  4039a0:	1e6b      	subs	r3, r5, #1
  4039a2:	e004      	b.n	4039ae <_dtoa_r+0x376>
  4039a4:	429a      	cmp	r2, r3
  4039a6:	f000 8401 	beq.w	4041ac <_dtoa_r+0xb74>
  4039aa:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  4039ae:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  4039b2:	f103 0501 	add.w	r5, r3, #1
  4039b6:	d0f5      	beq.n	4039a4 <_dtoa_r+0x36c>
  4039b8:	f108 0801 	add.w	r8, r8, #1
  4039bc:	f883 8000 	strb.w	r8, [r3]
  4039c0:	4649      	mov	r1, r9
  4039c2:	4620      	mov	r0, r4
  4039c4:	f001 f960 	bl	404c88 <_Bfree>
  4039c8:	2200      	movs	r2, #0
  4039ca:	9b02      	ldr	r3, [sp, #8]
  4039cc:	702a      	strb	r2, [r5, #0]
  4039ce:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4039d0:	3301      	adds	r3, #1
  4039d2:	6013      	str	r3, [r2, #0]
  4039d4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4039d6:	2b00      	cmp	r3, #0
  4039d8:	f000 839e 	beq.w	404118 <_dtoa_r+0xae0>
  4039dc:	9804      	ldr	r0, [sp, #16]
  4039de:	601d      	str	r5, [r3, #0]
  4039e0:	b01b      	add	sp, #108	; 0x6c
  4039e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4039e6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4039e8:	2a00      	cmp	r2, #0
  4039ea:	d03e      	beq.n	403a6a <_dtoa_r+0x432>
  4039ec:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4039ee:	2a01      	cmp	r2, #1
  4039f0:	f340 8311 	ble.w	404016 <_dtoa_r+0x9de>
  4039f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4039f6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4039f8:	1e5f      	subs	r7, r3, #1
  4039fa:	42ba      	cmp	r2, r7
  4039fc:	f2c0 838f 	blt.w	40411e <_dtoa_r+0xae6>
  403a00:	1bd7      	subs	r7, r2, r7
  403a02:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403a04:	2b00      	cmp	r3, #0
  403a06:	f2c0 848b 	blt.w	404320 <_dtoa_r+0xce8>
  403a0a:	9d08      	ldr	r5, [sp, #32]
  403a0c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403a0e:	9a08      	ldr	r2, [sp, #32]
  403a10:	441a      	add	r2, r3
  403a12:	9208      	str	r2, [sp, #32]
  403a14:	9a06      	ldr	r2, [sp, #24]
  403a16:	2101      	movs	r1, #1
  403a18:	441a      	add	r2, r3
  403a1a:	4620      	mov	r0, r4
  403a1c:	9206      	str	r2, [sp, #24]
  403a1e:	f001 f9cd 	bl	404dbc <__i2b>
  403a22:	4606      	mov	r6, r0
  403a24:	e024      	b.n	403a70 <_dtoa_r+0x438>
  403a26:	2301      	movs	r3, #1
  403a28:	930e      	str	r3, [sp, #56]	; 0x38
  403a2a:	e6af      	b.n	40378c <_dtoa_r+0x154>
  403a2c:	9a08      	ldr	r2, [sp, #32]
  403a2e:	9b02      	ldr	r3, [sp, #8]
  403a30:	1ad2      	subs	r2, r2, r3
  403a32:	425b      	negs	r3, r3
  403a34:	930c      	str	r3, [sp, #48]	; 0x30
  403a36:	2300      	movs	r3, #0
  403a38:	9208      	str	r2, [sp, #32]
  403a3a:	930d      	str	r3, [sp, #52]	; 0x34
  403a3c:	e6b8      	b.n	4037b0 <_dtoa_r+0x178>
  403a3e:	f1c7 0301 	rsb	r3, r7, #1
  403a42:	9308      	str	r3, [sp, #32]
  403a44:	2300      	movs	r3, #0
  403a46:	9306      	str	r3, [sp, #24]
  403a48:	e6a7      	b.n	40379a <_dtoa_r+0x162>
  403a4a:	9d02      	ldr	r5, [sp, #8]
  403a4c:	4628      	mov	r0, r5
  403a4e:	f7fe f80d 	bl	401a6c <__aeabi_i2d>
  403a52:	4602      	mov	r2, r0
  403a54:	460b      	mov	r3, r1
  403a56:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403a5a:	f002 f949 	bl	405cf0 <__aeabi_dcmpeq>
  403a5e:	2800      	cmp	r0, #0
  403a60:	f47f ae80 	bne.w	403764 <_dtoa_r+0x12c>
  403a64:	1e6b      	subs	r3, r5, #1
  403a66:	9302      	str	r3, [sp, #8]
  403a68:	e67c      	b.n	403764 <_dtoa_r+0x12c>
  403a6a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403a6c:	9d08      	ldr	r5, [sp, #32]
  403a6e:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  403a70:	2d00      	cmp	r5, #0
  403a72:	dd0c      	ble.n	403a8e <_dtoa_r+0x456>
  403a74:	9906      	ldr	r1, [sp, #24]
  403a76:	2900      	cmp	r1, #0
  403a78:	460b      	mov	r3, r1
  403a7a:	dd08      	ble.n	403a8e <_dtoa_r+0x456>
  403a7c:	42a9      	cmp	r1, r5
  403a7e:	9a08      	ldr	r2, [sp, #32]
  403a80:	bfa8      	it	ge
  403a82:	462b      	movge	r3, r5
  403a84:	1ad2      	subs	r2, r2, r3
  403a86:	1aed      	subs	r5, r5, r3
  403a88:	1acb      	subs	r3, r1, r3
  403a8a:	9208      	str	r2, [sp, #32]
  403a8c:	9306      	str	r3, [sp, #24]
  403a8e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403a90:	b1d3      	cbz	r3, 403ac8 <_dtoa_r+0x490>
  403a92:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403a94:	2b00      	cmp	r3, #0
  403a96:	f000 82b7 	beq.w	404008 <_dtoa_r+0x9d0>
  403a9a:	2f00      	cmp	r7, #0
  403a9c:	dd10      	ble.n	403ac0 <_dtoa_r+0x488>
  403a9e:	4631      	mov	r1, r6
  403aa0:	463a      	mov	r2, r7
  403aa2:	4620      	mov	r0, r4
  403aa4:	f001 fa26 	bl	404ef4 <__pow5mult>
  403aa8:	464a      	mov	r2, r9
  403aaa:	4601      	mov	r1, r0
  403aac:	4606      	mov	r6, r0
  403aae:	4620      	mov	r0, r4
  403ab0:	f001 f98e 	bl	404dd0 <__multiply>
  403ab4:	4649      	mov	r1, r9
  403ab6:	4680      	mov	r8, r0
  403ab8:	4620      	mov	r0, r4
  403aba:	f001 f8e5 	bl	404c88 <_Bfree>
  403abe:	46c1      	mov	r9, r8
  403ac0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403ac2:	1bda      	subs	r2, r3, r7
  403ac4:	f040 82a1 	bne.w	40400a <_dtoa_r+0x9d2>
  403ac8:	2101      	movs	r1, #1
  403aca:	4620      	mov	r0, r4
  403acc:	f001 f976 	bl	404dbc <__i2b>
  403ad0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403ad2:	2b00      	cmp	r3, #0
  403ad4:	4680      	mov	r8, r0
  403ad6:	dd1c      	ble.n	403b12 <_dtoa_r+0x4da>
  403ad8:	4601      	mov	r1, r0
  403ada:	461a      	mov	r2, r3
  403adc:	4620      	mov	r0, r4
  403ade:	f001 fa09 	bl	404ef4 <__pow5mult>
  403ae2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403ae4:	2b01      	cmp	r3, #1
  403ae6:	4680      	mov	r8, r0
  403ae8:	f340 8254 	ble.w	403f94 <_dtoa_r+0x95c>
  403aec:	2300      	movs	r3, #0
  403aee:	930c      	str	r3, [sp, #48]	; 0x30
  403af0:	f8d8 3010 	ldr.w	r3, [r8, #16]
  403af4:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  403af8:	6918      	ldr	r0, [r3, #16]
  403afa:	f001 f90f 	bl	404d1c <__hi0bits>
  403afe:	f1c0 0020 	rsb	r0, r0, #32
  403b02:	e010      	b.n	403b26 <_dtoa_r+0x4ee>
  403b04:	f1c3 0520 	rsb	r5, r3, #32
  403b08:	fa0a f005 	lsl.w	r0, sl, r5
  403b0c:	e674      	b.n	4037f8 <_dtoa_r+0x1c0>
  403b0e:	900e      	str	r0, [sp, #56]	; 0x38
  403b10:	e63c      	b.n	40378c <_dtoa_r+0x154>
  403b12:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403b14:	2b01      	cmp	r3, #1
  403b16:	f340 8287 	ble.w	404028 <_dtoa_r+0x9f0>
  403b1a:	2300      	movs	r3, #0
  403b1c:	930c      	str	r3, [sp, #48]	; 0x30
  403b1e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403b20:	2001      	movs	r0, #1
  403b22:	2b00      	cmp	r3, #0
  403b24:	d1e4      	bne.n	403af0 <_dtoa_r+0x4b8>
  403b26:	9a06      	ldr	r2, [sp, #24]
  403b28:	4410      	add	r0, r2
  403b2a:	f010 001f 	ands.w	r0, r0, #31
  403b2e:	f000 80a1 	beq.w	403c74 <_dtoa_r+0x63c>
  403b32:	f1c0 0320 	rsb	r3, r0, #32
  403b36:	2b04      	cmp	r3, #4
  403b38:	f340 849e 	ble.w	404478 <_dtoa_r+0xe40>
  403b3c:	9b08      	ldr	r3, [sp, #32]
  403b3e:	f1c0 001c 	rsb	r0, r0, #28
  403b42:	4403      	add	r3, r0
  403b44:	9308      	str	r3, [sp, #32]
  403b46:	4613      	mov	r3, r2
  403b48:	4403      	add	r3, r0
  403b4a:	4405      	add	r5, r0
  403b4c:	9306      	str	r3, [sp, #24]
  403b4e:	9b08      	ldr	r3, [sp, #32]
  403b50:	2b00      	cmp	r3, #0
  403b52:	dd05      	ble.n	403b60 <_dtoa_r+0x528>
  403b54:	4649      	mov	r1, r9
  403b56:	461a      	mov	r2, r3
  403b58:	4620      	mov	r0, r4
  403b5a:	f001 fa1b 	bl	404f94 <__lshift>
  403b5e:	4681      	mov	r9, r0
  403b60:	9b06      	ldr	r3, [sp, #24]
  403b62:	2b00      	cmp	r3, #0
  403b64:	dd05      	ble.n	403b72 <_dtoa_r+0x53a>
  403b66:	4641      	mov	r1, r8
  403b68:	461a      	mov	r2, r3
  403b6a:	4620      	mov	r0, r4
  403b6c:	f001 fa12 	bl	404f94 <__lshift>
  403b70:	4680      	mov	r8, r0
  403b72:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403b74:	2b00      	cmp	r3, #0
  403b76:	f040 8086 	bne.w	403c86 <_dtoa_r+0x64e>
  403b7a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403b7c:	2b00      	cmp	r3, #0
  403b7e:	f340 8266 	ble.w	40404e <_dtoa_r+0xa16>
  403b82:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403b84:	2b00      	cmp	r3, #0
  403b86:	f000 8098 	beq.w	403cba <_dtoa_r+0x682>
  403b8a:	2d00      	cmp	r5, #0
  403b8c:	dd05      	ble.n	403b9a <_dtoa_r+0x562>
  403b8e:	4631      	mov	r1, r6
  403b90:	462a      	mov	r2, r5
  403b92:	4620      	mov	r0, r4
  403b94:	f001 f9fe 	bl	404f94 <__lshift>
  403b98:	4606      	mov	r6, r0
  403b9a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403b9c:	2b00      	cmp	r3, #0
  403b9e:	f040 8337 	bne.w	404210 <_dtoa_r+0xbd8>
  403ba2:	9606      	str	r6, [sp, #24]
  403ba4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403ba6:	9a04      	ldr	r2, [sp, #16]
  403ba8:	f8dd b018 	ldr.w	fp, [sp, #24]
  403bac:	3b01      	subs	r3, #1
  403bae:	18d3      	adds	r3, r2, r3
  403bb0:	930b      	str	r3, [sp, #44]	; 0x2c
  403bb2:	f00a 0301 	and.w	r3, sl, #1
  403bb6:	930c      	str	r3, [sp, #48]	; 0x30
  403bb8:	4617      	mov	r7, r2
  403bba:	46c2      	mov	sl, r8
  403bbc:	4651      	mov	r1, sl
  403bbe:	4648      	mov	r0, r9
  403bc0:	f7ff fca6 	bl	403510 <quorem>
  403bc4:	4631      	mov	r1, r6
  403bc6:	4605      	mov	r5, r0
  403bc8:	4648      	mov	r0, r9
  403bca:	f001 fa35 	bl	405038 <__mcmp>
  403bce:	465a      	mov	r2, fp
  403bd0:	900a      	str	r0, [sp, #40]	; 0x28
  403bd2:	4651      	mov	r1, sl
  403bd4:	4620      	mov	r0, r4
  403bd6:	f001 fa4b 	bl	405070 <__mdiff>
  403bda:	68c2      	ldr	r2, [r0, #12]
  403bdc:	4680      	mov	r8, r0
  403bde:	f105 0330 	add.w	r3, r5, #48	; 0x30
  403be2:	2a00      	cmp	r2, #0
  403be4:	f040 822b 	bne.w	40403e <_dtoa_r+0xa06>
  403be8:	4601      	mov	r1, r0
  403bea:	4648      	mov	r0, r9
  403bec:	9308      	str	r3, [sp, #32]
  403bee:	f001 fa23 	bl	405038 <__mcmp>
  403bf2:	4641      	mov	r1, r8
  403bf4:	9006      	str	r0, [sp, #24]
  403bf6:	4620      	mov	r0, r4
  403bf8:	f001 f846 	bl	404c88 <_Bfree>
  403bfc:	9a06      	ldr	r2, [sp, #24]
  403bfe:	9b08      	ldr	r3, [sp, #32]
  403c00:	b932      	cbnz	r2, 403c10 <_dtoa_r+0x5d8>
  403c02:	9924      	ldr	r1, [sp, #144]	; 0x90
  403c04:	b921      	cbnz	r1, 403c10 <_dtoa_r+0x5d8>
  403c06:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403c08:	2a00      	cmp	r2, #0
  403c0a:	f000 83ef 	beq.w	4043ec <_dtoa_r+0xdb4>
  403c0e:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403c10:	990a      	ldr	r1, [sp, #40]	; 0x28
  403c12:	2900      	cmp	r1, #0
  403c14:	f2c0 829f 	blt.w	404156 <_dtoa_r+0xb1e>
  403c18:	d105      	bne.n	403c26 <_dtoa_r+0x5ee>
  403c1a:	9924      	ldr	r1, [sp, #144]	; 0x90
  403c1c:	b919      	cbnz	r1, 403c26 <_dtoa_r+0x5ee>
  403c1e:	990c      	ldr	r1, [sp, #48]	; 0x30
  403c20:	2900      	cmp	r1, #0
  403c22:	f000 8298 	beq.w	404156 <_dtoa_r+0xb1e>
  403c26:	2a00      	cmp	r2, #0
  403c28:	f300 8306 	bgt.w	404238 <_dtoa_r+0xc00>
  403c2c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403c2e:	703b      	strb	r3, [r7, #0]
  403c30:	f107 0801 	add.w	r8, r7, #1
  403c34:	4297      	cmp	r7, r2
  403c36:	4645      	mov	r5, r8
  403c38:	f000 830c 	beq.w	404254 <_dtoa_r+0xc1c>
  403c3c:	4649      	mov	r1, r9
  403c3e:	2300      	movs	r3, #0
  403c40:	220a      	movs	r2, #10
  403c42:	4620      	mov	r0, r4
  403c44:	f001 f82a 	bl	404c9c <__multadd>
  403c48:	455e      	cmp	r6, fp
  403c4a:	4681      	mov	r9, r0
  403c4c:	4631      	mov	r1, r6
  403c4e:	f04f 0300 	mov.w	r3, #0
  403c52:	f04f 020a 	mov.w	r2, #10
  403c56:	4620      	mov	r0, r4
  403c58:	f000 81eb 	beq.w	404032 <_dtoa_r+0x9fa>
  403c5c:	f001 f81e 	bl	404c9c <__multadd>
  403c60:	4659      	mov	r1, fp
  403c62:	4606      	mov	r6, r0
  403c64:	2300      	movs	r3, #0
  403c66:	220a      	movs	r2, #10
  403c68:	4620      	mov	r0, r4
  403c6a:	f001 f817 	bl	404c9c <__multadd>
  403c6e:	4647      	mov	r7, r8
  403c70:	4683      	mov	fp, r0
  403c72:	e7a3      	b.n	403bbc <_dtoa_r+0x584>
  403c74:	201c      	movs	r0, #28
  403c76:	9b08      	ldr	r3, [sp, #32]
  403c78:	4403      	add	r3, r0
  403c7a:	9308      	str	r3, [sp, #32]
  403c7c:	9b06      	ldr	r3, [sp, #24]
  403c7e:	4403      	add	r3, r0
  403c80:	4405      	add	r5, r0
  403c82:	9306      	str	r3, [sp, #24]
  403c84:	e763      	b.n	403b4e <_dtoa_r+0x516>
  403c86:	4641      	mov	r1, r8
  403c88:	4648      	mov	r0, r9
  403c8a:	f001 f9d5 	bl	405038 <__mcmp>
  403c8e:	2800      	cmp	r0, #0
  403c90:	f6bf af73 	bge.w	403b7a <_dtoa_r+0x542>
  403c94:	9f02      	ldr	r7, [sp, #8]
  403c96:	4649      	mov	r1, r9
  403c98:	2300      	movs	r3, #0
  403c9a:	220a      	movs	r2, #10
  403c9c:	4620      	mov	r0, r4
  403c9e:	3f01      	subs	r7, #1
  403ca0:	9702      	str	r7, [sp, #8]
  403ca2:	f000 fffb 	bl	404c9c <__multadd>
  403ca6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403ca8:	4681      	mov	r9, r0
  403caa:	2b00      	cmp	r3, #0
  403cac:	f040 83b6 	bne.w	40441c <_dtoa_r+0xde4>
  403cb0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403cb2:	2b00      	cmp	r3, #0
  403cb4:	f340 83bf 	ble.w	404436 <_dtoa_r+0xdfe>
  403cb8:	930a      	str	r3, [sp, #40]	; 0x28
  403cba:	f8dd b010 	ldr.w	fp, [sp, #16]
  403cbe:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  403cc0:	465d      	mov	r5, fp
  403cc2:	e002      	b.n	403cca <_dtoa_r+0x692>
  403cc4:	f000 ffea 	bl	404c9c <__multadd>
  403cc8:	4681      	mov	r9, r0
  403cca:	4641      	mov	r1, r8
  403ccc:	4648      	mov	r0, r9
  403cce:	f7ff fc1f 	bl	403510 <quorem>
  403cd2:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  403cd6:	f805 ab01 	strb.w	sl, [r5], #1
  403cda:	eba5 030b 	sub.w	r3, r5, fp
  403cde:	42bb      	cmp	r3, r7
  403ce0:	f04f 020a 	mov.w	r2, #10
  403ce4:	f04f 0300 	mov.w	r3, #0
  403ce8:	4649      	mov	r1, r9
  403cea:	4620      	mov	r0, r4
  403cec:	dbea      	blt.n	403cc4 <_dtoa_r+0x68c>
  403cee:	9b04      	ldr	r3, [sp, #16]
  403cf0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403cf2:	2a01      	cmp	r2, #1
  403cf4:	bfac      	ite	ge
  403cf6:	189b      	addge	r3, r3, r2
  403cf8:	3301      	addlt	r3, #1
  403cfa:	461d      	mov	r5, r3
  403cfc:	f04f 0b00 	mov.w	fp, #0
  403d00:	4649      	mov	r1, r9
  403d02:	2201      	movs	r2, #1
  403d04:	4620      	mov	r0, r4
  403d06:	f001 f945 	bl	404f94 <__lshift>
  403d0a:	4641      	mov	r1, r8
  403d0c:	4681      	mov	r9, r0
  403d0e:	f001 f993 	bl	405038 <__mcmp>
  403d12:	2800      	cmp	r0, #0
  403d14:	f340 823d 	ble.w	404192 <_dtoa_r+0xb5a>
  403d18:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  403d1c:	9904      	ldr	r1, [sp, #16]
  403d1e:	1e6b      	subs	r3, r5, #1
  403d20:	e004      	b.n	403d2c <_dtoa_r+0x6f4>
  403d22:	428b      	cmp	r3, r1
  403d24:	f000 81ae 	beq.w	404084 <_dtoa_r+0xa4c>
  403d28:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  403d2c:	2a39      	cmp	r2, #57	; 0x39
  403d2e:	f103 0501 	add.w	r5, r3, #1
  403d32:	d0f6      	beq.n	403d22 <_dtoa_r+0x6ea>
  403d34:	3201      	adds	r2, #1
  403d36:	701a      	strb	r2, [r3, #0]
  403d38:	4641      	mov	r1, r8
  403d3a:	4620      	mov	r0, r4
  403d3c:	f000 ffa4 	bl	404c88 <_Bfree>
  403d40:	2e00      	cmp	r6, #0
  403d42:	f43f ae3d 	beq.w	4039c0 <_dtoa_r+0x388>
  403d46:	f1bb 0f00 	cmp.w	fp, #0
  403d4a:	d005      	beq.n	403d58 <_dtoa_r+0x720>
  403d4c:	45b3      	cmp	fp, r6
  403d4e:	d003      	beq.n	403d58 <_dtoa_r+0x720>
  403d50:	4659      	mov	r1, fp
  403d52:	4620      	mov	r0, r4
  403d54:	f000 ff98 	bl	404c88 <_Bfree>
  403d58:	4631      	mov	r1, r6
  403d5a:	4620      	mov	r0, r4
  403d5c:	f000 ff94 	bl	404c88 <_Bfree>
  403d60:	e62e      	b.n	4039c0 <_dtoa_r+0x388>
  403d62:	2300      	movs	r3, #0
  403d64:	930b      	str	r3, [sp, #44]	; 0x2c
  403d66:	9b02      	ldr	r3, [sp, #8]
  403d68:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403d6a:	4413      	add	r3, r2
  403d6c:	930f      	str	r3, [sp, #60]	; 0x3c
  403d6e:	3301      	adds	r3, #1
  403d70:	2b01      	cmp	r3, #1
  403d72:	461f      	mov	r7, r3
  403d74:	461e      	mov	r6, r3
  403d76:	930a      	str	r3, [sp, #40]	; 0x28
  403d78:	bfb8      	it	lt
  403d7a:	2701      	movlt	r7, #1
  403d7c:	2100      	movs	r1, #0
  403d7e:	2f17      	cmp	r7, #23
  403d80:	6461      	str	r1, [r4, #68]	; 0x44
  403d82:	d90a      	bls.n	403d9a <_dtoa_r+0x762>
  403d84:	2201      	movs	r2, #1
  403d86:	2304      	movs	r3, #4
  403d88:	005b      	lsls	r3, r3, #1
  403d8a:	f103 0014 	add.w	r0, r3, #20
  403d8e:	4287      	cmp	r7, r0
  403d90:	4611      	mov	r1, r2
  403d92:	f102 0201 	add.w	r2, r2, #1
  403d96:	d2f7      	bcs.n	403d88 <_dtoa_r+0x750>
  403d98:	6461      	str	r1, [r4, #68]	; 0x44
  403d9a:	4620      	mov	r0, r4
  403d9c:	f000 ff4e 	bl	404c3c <_Balloc>
  403da0:	2e0e      	cmp	r6, #14
  403da2:	9004      	str	r0, [sp, #16]
  403da4:	6420      	str	r0, [r4, #64]	; 0x40
  403da6:	f63f ad41 	bhi.w	40382c <_dtoa_r+0x1f4>
  403daa:	2d00      	cmp	r5, #0
  403dac:	f43f ad3e 	beq.w	40382c <_dtoa_r+0x1f4>
  403db0:	9902      	ldr	r1, [sp, #8]
  403db2:	2900      	cmp	r1, #0
  403db4:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  403db8:	f340 8202 	ble.w	4041c0 <_dtoa_r+0xb88>
  403dbc:	4bb8      	ldr	r3, [pc, #736]	; (4040a0 <_dtoa_r+0xa68>)
  403dbe:	f001 020f 	and.w	r2, r1, #15
  403dc2:	110d      	asrs	r5, r1, #4
  403dc4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403dc8:	06e9      	lsls	r1, r5, #27
  403dca:	e9d3 6700 	ldrd	r6, r7, [r3]
  403dce:	f140 81ae 	bpl.w	40412e <_dtoa_r+0xaf6>
  403dd2:	4bb4      	ldr	r3, [pc, #720]	; (4040a4 <_dtoa_r+0xa6c>)
  403dd4:	4650      	mov	r0, sl
  403dd6:	4659      	mov	r1, fp
  403dd8:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  403ddc:	f7fd ffd6 	bl	401d8c <__aeabi_ddiv>
  403de0:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  403de4:	f005 050f 	and.w	r5, r5, #15
  403de8:	f04f 0a03 	mov.w	sl, #3
  403dec:	b18d      	cbz	r5, 403e12 <_dtoa_r+0x7da>
  403dee:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 4040a4 <_dtoa_r+0xa6c>
  403df2:	07ea      	lsls	r2, r5, #31
  403df4:	d509      	bpl.n	403e0a <_dtoa_r+0x7d2>
  403df6:	4630      	mov	r0, r6
  403df8:	4639      	mov	r1, r7
  403dfa:	e9d8 2300 	ldrd	r2, r3, [r8]
  403dfe:	f7fd fe9b 	bl	401b38 <__aeabi_dmul>
  403e02:	f10a 0a01 	add.w	sl, sl, #1
  403e06:	4606      	mov	r6, r0
  403e08:	460f      	mov	r7, r1
  403e0a:	106d      	asrs	r5, r5, #1
  403e0c:	f108 0808 	add.w	r8, r8, #8
  403e10:	d1ef      	bne.n	403df2 <_dtoa_r+0x7ba>
  403e12:	463b      	mov	r3, r7
  403e14:	4632      	mov	r2, r6
  403e16:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  403e1a:	f7fd ffb7 	bl	401d8c <__aeabi_ddiv>
  403e1e:	4607      	mov	r7, r0
  403e20:	4688      	mov	r8, r1
  403e22:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403e24:	b143      	cbz	r3, 403e38 <_dtoa_r+0x800>
  403e26:	2200      	movs	r2, #0
  403e28:	4b9f      	ldr	r3, [pc, #636]	; (4040a8 <_dtoa_r+0xa70>)
  403e2a:	4638      	mov	r0, r7
  403e2c:	4641      	mov	r1, r8
  403e2e:	f001 ff69 	bl	405d04 <__aeabi_dcmplt>
  403e32:	2800      	cmp	r0, #0
  403e34:	f040 8286 	bne.w	404344 <_dtoa_r+0xd0c>
  403e38:	4650      	mov	r0, sl
  403e3a:	f7fd fe17 	bl	401a6c <__aeabi_i2d>
  403e3e:	463a      	mov	r2, r7
  403e40:	4643      	mov	r3, r8
  403e42:	f7fd fe79 	bl	401b38 <__aeabi_dmul>
  403e46:	4b99      	ldr	r3, [pc, #612]	; (4040ac <_dtoa_r+0xa74>)
  403e48:	2200      	movs	r2, #0
  403e4a:	f7fd fcc3 	bl	4017d4 <__adddf3>
  403e4e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403e50:	4605      	mov	r5, r0
  403e52:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403e56:	2b00      	cmp	r3, #0
  403e58:	f000 813e 	beq.w	4040d8 <_dtoa_r+0xaa0>
  403e5c:	9b02      	ldr	r3, [sp, #8]
  403e5e:	9315      	str	r3, [sp, #84]	; 0x54
  403e60:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403e62:	9312      	str	r3, [sp, #72]	; 0x48
  403e64:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403e66:	2b00      	cmp	r3, #0
  403e68:	f000 81fa 	beq.w	404260 <_dtoa_r+0xc28>
  403e6c:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403e6e:	4b8c      	ldr	r3, [pc, #560]	; (4040a0 <_dtoa_r+0xa68>)
  403e70:	498f      	ldr	r1, [pc, #572]	; (4040b0 <_dtoa_r+0xa78>)
  403e72:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403e76:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  403e7a:	2000      	movs	r0, #0
  403e7c:	f7fd ff86 	bl	401d8c <__aeabi_ddiv>
  403e80:	462a      	mov	r2, r5
  403e82:	4633      	mov	r3, r6
  403e84:	f7fd fca4 	bl	4017d0 <__aeabi_dsub>
  403e88:	4682      	mov	sl, r0
  403e8a:	468b      	mov	fp, r1
  403e8c:	4638      	mov	r0, r7
  403e8e:	4641      	mov	r1, r8
  403e90:	f001 ff76 	bl	405d80 <__aeabi_d2iz>
  403e94:	4605      	mov	r5, r0
  403e96:	f7fd fde9 	bl	401a6c <__aeabi_i2d>
  403e9a:	4602      	mov	r2, r0
  403e9c:	460b      	mov	r3, r1
  403e9e:	4638      	mov	r0, r7
  403ea0:	4641      	mov	r1, r8
  403ea2:	f7fd fc95 	bl	4017d0 <__aeabi_dsub>
  403ea6:	3530      	adds	r5, #48	; 0x30
  403ea8:	fa5f f885 	uxtb.w	r8, r5
  403eac:	9d04      	ldr	r5, [sp, #16]
  403eae:	4606      	mov	r6, r0
  403eb0:	460f      	mov	r7, r1
  403eb2:	f885 8000 	strb.w	r8, [r5]
  403eb6:	4602      	mov	r2, r0
  403eb8:	460b      	mov	r3, r1
  403eba:	4650      	mov	r0, sl
  403ebc:	4659      	mov	r1, fp
  403ebe:	3501      	adds	r5, #1
  403ec0:	f001 ff3e 	bl	405d40 <__aeabi_dcmpgt>
  403ec4:	2800      	cmp	r0, #0
  403ec6:	d154      	bne.n	403f72 <_dtoa_r+0x93a>
  403ec8:	4632      	mov	r2, r6
  403eca:	463b      	mov	r3, r7
  403ecc:	2000      	movs	r0, #0
  403ece:	4976      	ldr	r1, [pc, #472]	; (4040a8 <_dtoa_r+0xa70>)
  403ed0:	f7fd fc7e 	bl	4017d0 <__aeabi_dsub>
  403ed4:	4602      	mov	r2, r0
  403ed6:	460b      	mov	r3, r1
  403ed8:	4650      	mov	r0, sl
  403eda:	4659      	mov	r1, fp
  403edc:	f001 ff30 	bl	405d40 <__aeabi_dcmpgt>
  403ee0:	2800      	cmp	r0, #0
  403ee2:	f040 8270 	bne.w	4043c6 <_dtoa_r+0xd8e>
  403ee6:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403ee8:	2a01      	cmp	r2, #1
  403eea:	f000 8111 	beq.w	404110 <_dtoa_r+0xad8>
  403eee:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403ef0:	9a04      	ldr	r2, [sp, #16]
  403ef2:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  403ef6:	4413      	add	r3, r2
  403ef8:	4699      	mov	r9, r3
  403efa:	e00d      	b.n	403f18 <_dtoa_r+0x8e0>
  403efc:	2000      	movs	r0, #0
  403efe:	496a      	ldr	r1, [pc, #424]	; (4040a8 <_dtoa_r+0xa70>)
  403f00:	f7fd fc66 	bl	4017d0 <__aeabi_dsub>
  403f04:	4652      	mov	r2, sl
  403f06:	465b      	mov	r3, fp
  403f08:	f001 fefc 	bl	405d04 <__aeabi_dcmplt>
  403f0c:	2800      	cmp	r0, #0
  403f0e:	f040 8258 	bne.w	4043c2 <_dtoa_r+0xd8a>
  403f12:	454d      	cmp	r5, r9
  403f14:	f000 80fa 	beq.w	40410c <_dtoa_r+0xad4>
  403f18:	4650      	mov	r0, sl
  403f1a:	4659      	mov	r1, fp
  403f1c:	2200      	movs	r2, #0
  403f1e:	4b65      	ldr	r3, [pc, #404]	; (4040b4 <_dtoa_r+0xa7c>)
  403f20:	f7fd fe0a 	bl	401b38 <__aeabi_dmul>
  403f24:	2200      	movs	r2, #0
  403f26:	4b63      	ldr	r3, [pc, #396]	; (4040b4 <_dtoa_r+0xa7c>)
  403f28:	4682      	mov	sl, r0
  403f2a:	468b      	mov	fp, r1
  403f2c:	4630      	mov	r0, r6
  403f2e:	4639      	mov	r1, r7
  403f30:	f7fd fe02 	bl	401b38 <__aeabi_dmul>
  403f34:	460f      	mov	r7, r1
  403f36:	4606      	mov	r6, r0
  403f38:	f001 ff22 	bl	405d80 <__aeabi_d2iz>
  403f3c:	4680      	mov	r8, r0
  403f3e:	f7fd fd95 	bl	401a6c <__aeabi_i2d>
  403f42:	4602      	mov	r2, r0
  403f44:	460b      	mov	r3, r1
  403f46:	4630      	mov	r0, r6
  403f48:	4639      	mov	r1, r7
  403f4a:	f7fd fc41 	bl	4017d0 <__aeabi_dsub>
  403f4e:	f108 0830 	add.w	r8, r8, #48	; 0x30
  403f52:	fa5f f888 	uxtb.w	r8, r8
  403f56:	4652      	mov	r2, sl
  403f58:	465b      	mov	r3, fp
  403f5a:	f805 8b01 	strb.w	r8, [r5], #1
  403f5e:	4606      	mov	r6, r0
  403f60:	460f      	mov	r7, r1
  403f62:	f001 fecf 	bl	405d04 <__aeabi_dcmplt>
  403f66:	4632      	mov	r2, r6
  403f68:	463b      	mov	r3, r7
  403f6a:	2800      	cmp	r0, #0
  403f6c:	d0c6      	beq.n	403efc <_dtoa_r+0x8c4>
  403f6e:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403f72:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403f74:	9302      	str	r3, [sp, #8]
  403f76:	e523      	b.n	4039c0 <_dtoa_r+0x388>
  403f78:	2300      	movs	r3, #0
  403f7a:	930b      	str	r3, [sp, #44]	; 0x2c
  403f7c:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403f7e:	2b00      	cmp	r3, #0
  403f80:	f340 80dc 	ble.w	40413c <_dtoa_r+0xb04>
  403f84:	461f      	mov	r7, r3
  403f86:	461e      	mov	r6, r3
  403f88:	930f      	str	r3, [sp, #60]	; 0x3c
  403f8a:	930a      	str	r3, [sp, #40]	; 0x28
  403f8c:	e6f6      	b.n	403d7c <_dtoa_r+0x744>
  403f8e:	2301      	movs	r3, #1
  403f90:	930b      	str	r3, [sp, #44]	; 0x2c
  403f92:	e7f3      	b.n	403f7c <_dtoa_r+0x944>
  403f94:	f1ba 0f00 	cmp.w	sl, #0
  403f98:	f47f ada8 	bne.w	403aec <_dtoa_r+0x4b4>
  403f9c:	f3cb 0313 	ubfx	r3, fp, #0, #20
  403fa0:	2b00      	cmp	r3, #0
  403fa2:	f47f adba 	bne.w	403b1a <_dtoa_r+0x4e2>
  403fa6:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  403faa:	0d3f      	lsrs	r7, r7, #20
  403fac:	053f      	lsls	r7, r7, #20
  403fae:	2f00      	cmp	r7, #0
  403fb0:	f000 820d 	beq.w	4043ce <_dtoa_r+0xd96>
  403fb4:	9b08      	ldr	r3, [sp, #32]
  403fb6:	3301      	adds	r3, #1
  403fb8:	9308      	str	r3, [sp, #32]
  403fba:	9b06      	ldr	r3, [sp, #24]
  403fbc:	3301      	adds	r3, #1
  403fbe:	9306      	str	r3, [sp, #24]
  403fc0:	2301      	movs	r3, #1
  403fc2:	930c      	str	r3, [sp, #48]	; 0x30
  403fc4:	e5ab      	b.n	403b1e <_dtoa_r+0x4e6>
  403fc6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403fc8:	2b00      	cmp	r3, #0
  403fca:	f73f ac42 	bgt.w	403852 <_dtoa_r+0x21a>
  403fce:	f040 8221 	bne.w	404414 <_dtoa_r+0xddc>
  403fd2:	2200      	movs	r2, #0
  403fd4:	4b38      	ldr	r3, [pc, #224]	; (4040b8 <_dtoa_r+0xa80>)
  403fd6:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403fda:	f7fd fdad 	bl	401b38 <__aeabi_dmul>
  403fde:	4652      	mov	r2, sl
  403fe0:	465b      	mov	r3, fp
  403fe2:	f001 fea3 	bl	405d2c <__aeabi_dcmpge>
  403fe6:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  403fea:	4646      	mov	r6, r8
  403fec:	2800      	cmp	r0, #0
  403fee:	d041      	beq.n	404074 <_dtoa_r+0xa3c>
  403ff0:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403ff2:	9d04      	ldr	r5, [sp, #16]
  403ff4:	43db      	mvns	r3, r3
  403ff6:	9302      	str	r3, [sp, #8]
  403ff8:	4641      	mov	r1, r8
  403ffa:	4620      	mov	r0, r4
  403ffc:	f000 fe44 	bl	404c88 <_Bfree>
  404000:	2e00      	cmp	r6, #0
  404002:	f43f acdd 	beq.w	4039c0 <_dtoa_r+0x388>
  404006:	e6a7      	b.n	403d58 <_dtoa_r+0x720>
  404008:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  40400a:	4649      	mov	r1, r9
  40400c:	4620      	mov	r0, r4
  40400e:	f000 ff71 	bl	404ef4 <__pow5mult>
  404012:	4681      	mov	r9, r0
  404014:	e558      	b.n	403ac8 <_dtoa_r+0x490>
  404016:	9a14      	ldr	r2, [sp, #80]	; 0x50
  404018:	2a00      	cmp	r2, #0
  40401a:	f000 8187 	beq.w	40432c <_dtoa_r+0xcf4>
  40401e:	f203 4333 	addw	r3, r3, #1075	; 0x433
  404022:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404024:	9d08      	ldr	r5, [sp, #32]
  404026:	e4f2      	b.n	403a0e <_dtoa_r+0x3d6>
  404028:	f1ba 0f00 	cmp.w	sl, #0
  40402c:	f47f ad75 	bne.w	403b1a <_dtoa_r+0x4e2>
  404030:	e7b4      	b.n	403f9c <_dtoa_r+0x964>
  404032:	f000 fe33 	bl	404c9c <__multadd>
  404036:	4647      	mov	r7, r8
  404038:	4606      	mov	r6, r0
  40403a:	4683      	mov	fp, r0
  40403c:	e5be      	b.n	403bbc <_dtoa_r+0x584>
  40403e:	4601      	mov	r1, r0
  404040:	4620      	mov	r0, r4
  404042:	9306      	str	r3, [sp, #24]
  404044:	f000 fe20 	bl	404c88 <_Bfree>
  404048:	2201      	movs	r2, #1
  40404a:	9b06      	ldr	r3, [sp, #24]
  40404c:	e5e0      	b.n	403c10 <_dtoa_r+0x5d8>
  40404e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404050:	2b02      	cmp	r3, #2
  404052:	f77f ad96 	ble.w	403b82 <_dtoa_r+0x54a>
  404056:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404058:	2b00      	cmp	r3, #0
  40405a:	d1c9      	bne.n	403ff0 <_dtoa_r+0x9b8>
  40405c:	4641      	mov	r1, r8
  40405e:	2205      	movs	r2, #5
  404060:	4620      	mov	r0, r4
  404062:	f000 fe1b 	bl	404c9c <__multadd>
  404066:	4601      	mov	r1, r0
  404068:	4680      	mov	r8, r0
  40406a:	4648      	mov	r0, r9
  40406c:	f000 ffe4 	bl	405038 <__mcmp>
  404070:	2800      	cmp	r0, #0
  404072:	ddbd      	ble.n	403ff0 <_dtoa_r+0x9b8>
  404074:	9a02      	ldr	r2, [sp, #8]
  404076:	9904      	ldr	r1, [sp, #16]
  404078:	2331      	movs	r3, #49	; 0x31
  40407a:	3201      	adds	r2, #1
  40407c:	9202      	str	r2, [sp, #8]
  40407e:	700b      	strb	r3, [r1, #0]
  404080:	1c4d      	adds	r5, r1, #1
  404082:	e7b9      	b.n	403ff8 <_dtoa_r+0x9c0>
  404084:	9a02      	ldr	r2, [sp, #8]
  404086:	3201      	adds	r2, #1
  404088:	9202      	str	r2, [sp, #8]
  40408a:	9a04      	ldr	r2, [sp, #16]
  40408c:	2331      	movs	r3, #49	; 0x31
  40408e:	7013      	strb	r3, [r2, #0]
  404090:	e652      	b.n	403d38 <_dtoa_r+0x700>
  404092:	2301      	movs	r3, #1
  404094:	930b      	str	r3, [sp, #44]	; 0x2c
  404096:	e666      	b.n	403d66 <_dtoa_r+0x72e>
  404098:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  40409c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40409e:	e48f      	b.n	4039c0 <_dtoa_r+0x388>
  4040a0:	00406bf0 	.word	0x00406bf0
  4040a4:	00406bc8 	.word	0x00406bc8
  4040a8:	3ff00000 	.word	0x3ff00000
  4040ac:	401c0000 	.word	0x401c0000
  4040b0:	3fe00000 	.word	0x3fe00000
  4040b4:	40240000 	.word	0x40240000
  4040b8:	40140000 	.word	0x40140000
  4040bc:	4650      	mov	r0, sl
  4040be:	f7fd fcd5 	bl	401a6c <__aeabi_i2d>
  4040c2:	463a      	mov	r2, r7
  4040c4:	4643      	mov	r3, r8
  4040c6:	f7fd fd37 	bl	401b38 <__aeabi_dmul>
  4040ca:	2200      	movs	r2, #0
  4040cc:	4bc1      	ldr	r3, [pc, #772]	; (4043d4 <_dtoa_r+0xd9c>)
  4040ce:	f7fd fb81 	bl	4017d4 <__adddf3>
  4040d2:	4605      	mov	r5, r0
  4040d4:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  4040d8:	4641      	mov	r1, r8
  4040da:	2200      	movs	r2, #0
  4040dc:	4bbe      	ldr	r3, [pc, #760]	; (4043d8 <_dtoa_r+0xda0>)
  4040de:	4638      	mov	r0, r7
  4040e0:	f7fd fb76 	bl	4017d0 <__aeabi_dsub>
  4040e4:	462a      	mov	r2, r5
  4040e6:	4633      	mov	r3, r6
  4040e8:	4682      	mov	sl, r0
  4040ea:	468b      	mov	fp, r1
  4040ec:	f001 fe28 	bl	405d40 <__aeabi_dcmpgt>
  4040f0:	4680      	mov	r8, r0
  4040f2:	2800      	cmp	r0, #0
  4040f4:	f040 8110 	bne.w	404318 <_dtoa_r+0xce0>
  4040f8:	462a      	mov	r2, r5
  4040fa:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  4040fe:	4650      	mov	r0, sl
  404100:	4659      	mov	r1, fp
  404102:	f001 fdff 	bl	405d04 <__aeabi_dcmplt>
  404106:	b118      	cbz	r0, 404110 <_dtoa_r+0xad8>
  404108:	4646      	mov	r6, r8
  40410a:	e771      	b.n	403ff0 <_dtoa_r+0x9b8>
  40410c:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404110:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  404114:	f7ff bb8a 	b.w	40382c <_dtoa_r+0x1f4>
  404118:	9804      	ldr	r0, [sp, #16]
  40411a:	f7ff babb 	b.w	403694 <_dtoa_r+0x5c>
  40411e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  404120:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  404122:	970c      	str	r7, [sp, #48]	; 0x30
  404124:	1afb      	subs	r3, r7, r3
  404126:	441a      	add	r2, r3
  404128:	920d      	str	r2, [sp, #52]	; 0x34
  40412a:	2700      	movs	r7, #0
  40412c:	e469      	b.n	403a02 <_dtoa_r+0x3ca>
  40412e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  404132:	f04f 0a02 	mov.w	sl, #2
  404136:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  40413a:	e657      	b.n	403dec <_dtoa_r+0x7b4>
  40413c:	2100      	movs	r1, #0
  40413e:	2301      	movs	r3, #1
  404140:	6461      	str	r1, [r4, #68]	; 0x44
  404142:	4620      	mov	r0, r4
  404144:	9325      	str	r3, [sp, #148]	; 0x94
  404146:	f000 fd79 	bl	404c3c <_Balloc>
  40414a:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40414c:	9004      	str	r0, [sp, #16]
  40414e:	6420      	str	r0, [r4, #64]	; 0x40
  404150:	930a      	str	r3, [sp, #40]	; 0x28
  404152:	930f      	str	r3, [sp, #60]	; 0x3c
  404154:	e629      	b.n	403daa <_dtoa_r+0x772>
  404156:	2a00      	cmp	r2, #0
  404158:	46d0      	mov	r8, sl
  40415a:	f8cd b018 	str.w	fp, [sp, #24]
  40415e:	469a      	mov	sl, r3
  404160:	dd11      	ble.n	404186 <_dtoa_r+0xb4e>
  404162:	4649      	mov	r1, r9
  404164:	2201      	movs	r2, #1
  404166:	4620      	mov	r0, r4
  404168:	f000 ff14 	bl	404f94 <__lshift>
  40416c:	4641      	mov	r1, r8
  40416e:	4681      	mov	r9, r0
  404170:	f000 ff62 	bl	405038 <__mcmp>
  404174:	2800      	cmp	r0, #0
  404176:	f340 8146 	ble.w	404406 <_dtoa_r+0xdce>
  40417a:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  40417e:	f000 8106 	beq.w	40438e <_dtoa_r+0xd56>
  404182:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  404186:	46b3      	mov	fp, r6
  404188:	f887 a000 	strb.w	sl, [r7]
  40418c:	1c7d      	adds	r5, r7, #1
  40418e:	9e06      	ldr	r6, [sp, #24]
  404190:	e5d2      	b.n	403d38 <_dtoa_r+0x700>
  404192:	d104      	bne.n	40419e <_dtoa_r+0xb66>
  404194:	f01a 0f01 	tst.w	sl, #1
  404198:	d001      	beq.n	40419e <_dtoa_r+0xb66>
  40419a:	e5bd      	b.n	403d18 <_dtoa_r+0x6e0>
  40419c:	4615      	mov	r5, r2
  40419e:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  4041a2:	2b30      	cmp	r3, #48	; 0x30
  4041a4:	f105 32ff 	add.w	r2, r5, #4294967295
  4041a8:	d0f8      	beq.n	40419c <_dtoa_r+0xb64>
  4041aa:	e5c5      	b.n	403d38 <_dtoa_r+0x700>
  4041ac:	9904      	ldr	r1, [sp, #16]
  4041ae:	2230      	movs	r2, #48	; 0x30
  4041b0:	700a      	strb	r2, [r1, #0]
  4041b2:	9a02      	ldr	r2, [sp, #8]
  4041b4:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  4041b8:	3201      	adds	r2, #1
  4041ba:	9202      	str	r2, [sp, #8]
  4041bc:	f7ff bbfc 	b.w	4039b8 <_dtoa_r+0x380>
  4041c0:	f000 80bb 	beq.w	40433a <_dtoa_r+0xd02>
  4041c4:	9b02      	ldr	r3, [sp, #8]
  4041c6:	425d      	negs	r5, r3
  4041c8:	4b84      	ldr	r3, [pc, #528]	; (4043dc <_dtoa_r+0xda4>)
  4041ca:	f005 020f 	and.w	r2, r5, #15
  4041ce:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4041d2:	e9d3 2300 	ldrd	r2, r3, [r3]
  4041d6:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  4041da:	f7fd fcad 	bl	401b38 <__aeabi_dmul>
  4041de:	112d      	asrs	r5, r5, #4
  4041e0:	4607      	mov	r7, r0
  4041e2:	4688      	mov	r8, r1
  4041e4:	f000 812c 	beq.w	404440 <_dtoa_r+0xe08>
  4041e8:	4e7d      	ldr	r6, [pc, #500]	; (4043e0 <_dtoa_r+0xda8>)
  4041ea:	f04f 0a02 	mov.w	sl, #2
  4041ee:	07eb      	lsls	r3, r5, #31
  4041f0:	d509      	bpl.n	404206 <_dtoa_r+0xbce>
  4041f2:	4638      	mov	r0, r7
  4041f4:	4641      	mov	r1, r8
  4041f6:	e9d6 2300 	ldrd	r2, r3, [r6]
  4041fa:	f7fd fc9d 	bl	401b38 <__aeabi_dmul>
  4041fe:	f10a 0a01 	add.w	sl, sl, #1
  404202:	4607      	mov	r7, r0
  404204:	4688      	mov	r8, r1
  404206:	106d      	asrs	r5, r5, #1
  404208:	f106 0608 	add.w	r6, r6, #8
  40420c:	d1ef      	bne.n	4041ee <_dtoa_r+0xbb6>
  40420e:	e608      	b.n	403e22 <_dtoa_r+0x7ea>
  404210:	6871      	ldr	r1, [r6, #4]
  404212:	4620      	mov	r0, r4
  404214:	f000 fd12 	bl	404c3c <_Balloc>
  404218:	6933      	ldr	r3, [r6, #16]
  40421a:	3302      	adds	r3, #2
  40421c:	009a      	lsls	r2, r3, #2
  40421e:	4605      	mov	r5, r0
  404220:	f106 010c 	add.w	r1, r6, #12
  404224:	300c      	adds	r0, #12
  404226:	f000 fc63 	bl	404af0 <memcpy>
  40422a:	4629      	mov	r1, r5
  40422c:	2201      	movs	r2, #1
  40422e:	4620      	mov	r0, r4
  404230:	f000 feb0 	bl	404f94 <__lshift>
  404234:	9006      	str	r0, [sp, #24]
  404236:	e4b5      	b.n	403ba4 <_dtoa_r+0x56c>
  404238:	2b39      	cmp	r3, #57	; 0x39
  40423a:	f8cd b018 	str.w	fp, [sp, #24]
  40423e:	46d0      	mov	r8, sl
  404240:	f000 80a5 	beq.w	40438e <_dtoa_r+0xd56>
  404244:	f103 0a01 	add.w	sl, r3, #1
  404248:	46b3      	mov	fp, r6
  40424a:	f887 a000 	strb.w	sl, [r7]
  40424e:	1c7d      	adds	r5, r7, #1
  404250:	9e06      	ldr	r6, [sp, #24]
  404252:	e571      	b.n	403d38 <_dtoa_r+0x700>
  404254:	465a      	mov	r2, fp
  404256:	46d0      	mov	r8, sl
  404258:	46b3      	mov	fp, r6
  40425a:	469a      	mov	sl, r3
  40425c:	4616      	mov	r6, r2
  40425e:	e54f      	b.n	403d00 <_dtoa_r+0x6c8>
  404260:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404262:	495e      	ldr	r1, [pc, #376]	; (4043dc <_dtoa_r+0xda4>)
  404264:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  404268:	462a      	mov	r2, r5
  40426a:	4633      	mov	r3, r6
  40426c:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  404270:	f7fd fc62 	bl	401b38 <__aeabi_dmul>
  404274:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  404278:	4638      	mov	r0, r7
  40427a:	4641      	mov	r1, r8
  40427c:	f001 fd80 	bl	405d80 <__aeabi_d2iz>
  404280:	4605      	mov	r5, r0
  404282:	f7fd fbf3 	bl	401a6c <__aeabi_i2d>
  404286:	460b      	mov	r3, r1
  404288:	4602      	mov	r2, r0
  40428a:	4641      	mov	r1, r8
  40428c:	4638      	mov	r0, r7
  40428e:	f7fd fa9f 	bl	4017d0 <__aeabi_dsub>
  404292:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404294:	460f      	mov	r7, r1
  404296:	9904      	ldr	r1, [sp, #16]
  404298:	3530      	adds	r5, #48	; 0x30
  40429a:	2b01      	cmp	r3, #1
  40429c:	700d      	strb	r5, [r1, #0]
  40429e:	4606      	mov	r6, r0
  4042a0:	f101 0501 	add.w	r5, r1, #1
  4042a4:	d026      	beq.n	4042f4 <_dtoa_r+0xcbc>
  4042a6:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4042a8:	9a04      	ldr	r2, [sp, #16]
  4042aa:	f8df b13c 	ldr.w	fp, [pc, #316]	; 4043e8 <_dtoa_r+0xdb0>
  4042ae:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  4042b2:	4413      	add	r3, r2
  4042b4:	f04f 0a00 	mov.w	sl, #0
  4042b8:	4699      	mov	r9, r3
  4042ba:	4652      	mov	r2, sl
  4042bc:	465b      	mov	r3, fp
  4042be:	4630      	mov	r0, r6
  4042c0:	4639      	mov	r1, r7
  4042c2:	f7fd fc39 	bl	401b38 <__aeabi_dmul>
  4042c6:	460f      	mov	r7, r1
  4042c8:	4606      	mov	r6, r0
  4042ca:	f001 fd59 	bl	405d80 <__aeabi_d2iz>
  4042ce:	4680      	mov	r8, r0
  4042d0:	f7fd fbcc 	bl	401a6c <__aeabi_i2d>
  4042d4:	f108 0830 	add.w	r8, r8, #48	; 0x30
  4042d8:	4602      	mov	r2, r0
  4042da:	460b      	mov	r3, r1
  4042dc:	4630      	mov	r0, r6
  4042de:	4639      	mov	r1, r7
  4042e0:	f7fd fa76 	bl	4017d0 <__aeabi_dsub>
  4042e4:	f805 8b01 	strb.w	r8, [r5], #1
  4042e8:	454d      	cmp	r5, r9
  4042ea:	4606      	mov	r6, r0
  4042ec:	460f      	mov	r7, r1
  4042ee:	d1e4      	bne.n	4042ba <_dtoa_r+0xc82>
  4042f0:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4042f4:	4b3b      	ldr	r3, [pc, #236]	; (4043e4 <_dtoa_r+0xdac>)
  4042f6:	2200      	movs	r2, #0
  4042f8:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  4042fc:	f7fd fa6a 	bl	4017d4 <__adddf3>
  404300:	4632      	mov	r2, r6
  404302:	463b      	mov	r3, r7
  404304:	f001 fcfe 	bl	405d04 <__aeabi_dcmplt>
  404308:	2800      	cmp	r0, #0
  40430a:	d046      	beq.n	40439a <_dtoa_r+0xd62>
  40430c:	9b15      	ldr	r3, [sp, #84]	; 0x54
  40430e:	9302      	str	r3, [sp, #8]
  404310:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  404314:	f7ff bb43 	b.w	40399e <_dtoa_r+0x366>
  404318:	f04f 0800 	mov.w	r8, #0
  40431c:	4646      	mov	r6, r8
  40431e:	e6a9      	b.n	404074 <_dtoa_r+0xa3c>
  404320:	9b08      	ldr	r3, [sp, #32]
  404322:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  404324:	1a9d      	subs	r5, r3, r2
  404326:	2300      	movs	r3, #0
  404328:	f7ff bb71 	b.w	403a0e <_dtoa_r+0x3d6>
  40432c:	9b18      	ldr	r3, [sp, #96]	; 0x60
  40432e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404330:	9d08      	ldr	r5, [sp, #32]
  404332:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  404336:	f7ff bb6a 	b.w	403a0e <_dtoa_r+0x3d6>
  40433a:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  40433e:	f04f 0a02 	mov.w	sl, #2
  404342:	e56e      	b.n	403e22 <_dtoa_r+0x7ea>
  404344:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404346:	2b00      	cmp	r3, #0
  404348:	f43f aeb8 	beq.w	4040bc <_dtoa_r+0xa84>
  40434c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40434e:	2b00      	cmp	r3, #0
  404350:	f77f aede 	ble.w	404110 <_dtoa_r+0xad8>
  404354:	2200      	movs	r2, #0
  404356:	4b24      	ldr	r3, [pc, #144]	; (4043e8 <_dtoa_r+0xdb0>)
  404358:	4638      	mov	r0, r7
  40435a:	4641      	mov	r1, r8
  40435c:	f7fd fbec 	bl	401b38 <__aeabi_dmul>
  404360:	4607      	mov	r7, r0
  404362:	4688      	mov	r8, r1
  404364:	f10a 0001 	add.w	r0, sl, #1
  404368:	f7fd fb80 	bl	401a6c <__aeabi_i2d>
  40436c:	463a      	mov	r2, r7
  40436e:	4643      	mov	r3, r8
  404370:	f7fd fbe2 	bl	401b38 <__aeabi_dmul>
  404374:	2200      	movs	r2, #0
  404376:	4b17      	ldr	r3, [pc, #92]	; (4043d4 <_dtoa_r+0xd9c>)
  404378:	f7fd fa2c 	bl	4017d4 <__adddf3>
  40437c:	9a02      	ldr	r2, [sp, #8]
  40437e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404380:	9312      	str	r3, [sp, #72]	; 0x48
  404382:	3a01      	subs	r2, #1
  404384:	4605      	mov	r5, r0
  404386:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  40438a:	9215      	str	r2, [sp, #84]	; 0x54
  40438c:	e56a      	b.n	403e64 <_dtoa_r+0x82c>
  40438e:	2239      	movs	r2, #57	; 0x39
  404390:	46b3      	mov	fp, r6
  404392:	703a      	strb	r2, [r7, #0]
  404394:	9e06      	ldr	r6, [sp, #24]
  404396:	1c7d      	adds	r5, r7, #1
  404398:	e4c0      	b.n	403d1c <_dtoa_r+0x6e4>
  40439a:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  40439e:	2000      	movs	r0, #0
  4043a0:	4910      	ldr	r1, [pc, #64]	; (4043e4 <_dtoa_r+0xdac>)
  4043a2:	f7fd fa15 	bl	4017d0 <__aeabi_dsub>
  4043a6:	4632      	mov	r2, r6
  4043a8:	463b      	mov	r3, r7
  4043aa:	f001 fcc9 	bl	405d40 <__aeabi_dcmpgt>
  4043ae:	b908      	cbnz	r0, 4043b4 <_dtoa_r+0xd7c>
  4043b0:	e6ae      	b.n	404110 <_dtoa_r+0xad8>
  4043b2:	4615      	mov	r5, r2
  4043b4:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  4043b8:	2b30      	cmp	r3, #48	; 0x30
  4043ba:	f105 32ff 	add.w	r2, r5, #4294967295
  4043be:	d0f8      	beq.n	4043b2 <_dtoa_r+0xd7a>
  4043c0:	e5d7      	b.n	403f72 <_dtoa_r+0x93a>
  4043c2:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4043c6:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4043c8:	9302      	str	r3, [sp, #8]
  4043ca:	f7ff bae8 	b.w	40399e <_dtoa_r+0x366>
  4043ce:	970c      	str	r7, [sp, #48]	; 0x30
  4043d0:	f7ff bba5 	b.w	403b1e <_dtoa_r+0x4e6>
  4043d4:	401c0000 	.word	0x401c0000
  4043d8:	40140000 	.word	0x40140000
  4043dc:	00406bf0 	.word	0x00406bf0
  4043e0:	00406bc8 	.word	0x00406bc8
  4043e4:	3fe00000 	.word	0x3fe00000
  4043e8:	40240000 	.word	0x40240000
  4043ec:	2b39      	cmp	r3, #57	; 0x39
  4043ee:	f8cd b018 	str.w	fp, [sp, #24]
  4043f2:	46d0      	mov	r8, sl
  4043f4:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  4043f8:	469a      	mov	sl, r3
  4043fa:	d0c8      	beq.n	40438e <_dtoa_r+0xd56>
  4043fc:	f1bb 0f00 	cmp.w	fp, #0
  404400:	f73f aebf 	bgt.w	404182 <_dtoa_r+0xb4a>
  404404:	e6bf      	b.n	404186 <_dtoa_r+0xb4e>
  404406:	f47f aebe 	bne.w	404186 <_dtoa_r+0xb4e>
  40440a:	f01a 0f01 	tst.w	sl, #1
  40440e:	f43f aeba 	beq.w	404186 <_dtoa_r+0xb4e>
  404412:	e6b2      	b.n	40417a <_dtoa_r+0xb42>
  404414:	f04f 0800 	mov.w	r8, #0
  404418:	4646      	mov	r6, r8
  40441a:	e5e9      	b.n	403ff0 <_dtoa_r+0x9b8>
  40441c:	4631      	mov	r1, r6
  40441e:	2300      	movs	r3, #0
  404420:	220a      	movs	r2, #10
  404422:	4620      	mov	r0, r4
  404424:	f000 fc3a 	bl	404c9c <__multadd>
  404428:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40442a:	2b00      	cmp	r3, #0
  40442c:	4606      	mov	r6, r0
  40442e:	dd0a      	ble.n	404446 <_dtoa_r+0xe0e>
  404430:	930a      	str	r3, [sp, #40]	; 0x28
  404432:	f7ff bbaa 	b.w	403b8a <_dtoa_r+0x552>
  404436:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404438:	2b02      	cmp	r3, #2
  40443a:	dc23      	bgt.n	404484 <_dtoa_r+0xe4c>
  40443c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40443e:	e43b      	b.n	403cb8 <_dtoa_r+0x680>
  404440:	f04f 0a02 	mov.w	sl, #2
  404444:	e4ed      	b.n	403e22 <_dtoa_r+0x7ea>
  404446:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404448:	2b02      	cmp	r3, #2
  40444a:	dc1b      	bgt.n	404484 <_dtoa_r+0xe4c>
  40444c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40444e:	e7ef      	b.n	404430 <_dtoa_r+0xdf8>
  404450:	2500      	movs	r5, #0
  404452:	6465      	str	r5, [r4, #68]	; 0x44
  404454:	4629      	mov	r1, r5
  404456:	4620      	mov	r0, r4
  404458:	f000 fbf0 	bl	404c3c <_Balloc>
  40445c:	f04f 33ff 	mov.w	r3, #4294967295
  404460:	930a      	str	r3, [sp, #40]	; 0x28
  404462:	930f      	str	r3, [sp, #60]	; 0x3c
  404464:	2301      	movs	r3, #1
  404466:	9004      	str	r0, [sp, #16]
  404468:	9525      	str	r5, [sp, #148]	; 0x94
  40446a:	6420      	str	r0, [r4, #64]	; 0x40
  40446c:	930b      	str	r3, [sp, #44]	; 0x2c
  40446e:	f7ff b9dd 	b.w	40382c <_dtoa_r+0x1f4>
  404472:	2501      	movs	r5, #1
  404474:	f7ff b9a5 	b.w	4037c2 <_dtoa_r+0x18a>
  404478:	f43f ab69 	beq.w	403b4e <_dtoa_r+0x516>
  40447c:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  404480:	f7ff bbf9 	b.w	403c76 <_dtoa_r+0x63e>
  404484:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404486:	930a      	str	r3, [sp, #40]	; 0x28
  404488:	e5e5      	b.n	404056 <_dtoa_r+0xa1e>
  40448a:	bf00      	nop

0040448c <__libc_fini_array>:
  40448c:	b538      	push	{r3, r4, r5, lr}
  40448e:	4c0a      	ldr	r4, [pc, #40]	; (4044b8 <__libc_fini_array+0x2c>)
  404490:	4d0a      	ldr	r5, [pc, #40]	; (4044bc <__libc_fini_array+0x30>)
  404492:	1b64      	subs	r4, r4, r5
  404494:	10a4      	asrs	r4, r4, #2
  404496:	d00a      	beq.n	4044ae <__libc_fini_array+0x22>
  404498:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  40449c:	3b01      	subs	r3, #1
  40449e:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  4044a2:	3c01      	subs	r4, #1
  4044a4:	f855 3904 	ldr.w	r3, [r5], #-4
  4044a8:	4798      	blx	r3
  4044aa:	2c00      	cmp	r4, #0
  4044ac:	d1f9      	bne.n	4044a2 <__libc_fini_array+0x16>
  4044ae:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  4044b2:	f002 bc9b 	b.w	406dec <_fini>
  4044b6:	bf00      	nop
  4044b8:	00406dfc 	.word	0x00406dfc
  4044bc:	00406df8 	.word	0x00406df8

004044c0 <_localeconv_r>:
  4044c0:	4a04      	ldr	r2, [pc, #16]	; (4044d4 <_localeconv_r+0x14>)
  4044c2:	4b05      	ldr	r3, [pc, #20]	; (4044d8 <_localeconv_r+0x18>)
  4044c4:	6812      	ldr	r2, [r2, #0]
  4044c6:	6b50      	ldr	r0, [r2, #52]	; 0x34
  4044c8:	2800      	cmp	r0, #0
  4044ca:	bf08      	it	eq
  4044cc:	4618      	moveq	r0, r3
  4044ce:	30f0      	adds	r0, #240	; 0xf0
  4044d0:	4770      	bx	lr
  4044d2:	bf00      	nop
  4044d4:	20400024 	.word	0x20400024
  4044d8:	20400864 	.word	0x20400864

004044dc <__retarget_lock_acquire_recursive>:
  4044dc:	4770      	bx	lr
  4044de:	bf00      	nop

004044e0 <__retarget_lock_release_recursive>:
  4044e0:	4770      	bx	lr
  4044e2:	bf00      	nop

004044e4 <_malloc_r>:
  4044e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4044e8:	f101 060b 	add.w	r6, r1, #11
  4044ec:	2e16      	cmp	r6, #22
  4044ee:	b083      	sub	sp, #12
  4044f0:	4605      	mov	r5, r0
  4044f2:	f240 809e 	bls.w	404632 <_malloc_r+0x14e>
  4044f6:	f036 0607 	bics.w	r6, r6, #7
  4044fa:	f100 80bd 	bmi.w	404678 <_malloc_r+0x194>
  4044fe:	42b1      	cmp	r1, r6
  404500:	f200 80ba 	bhi.w	404678 <_malloc_r+0x194>
  404504:	f000 fb8e 	bl	404c24 <__malloc_lock>
  404508:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  40450c:	f0c0 8293 	bcc.w	404a36 <_malloc_r+0x552>
  404510:	0a73      	lsrs	r3, r6, #9
  404512:	f000 80b8 	beq.w	404686 <_malloc_r+0x1a2>
  404516:	2b04      	cmp	r3, #4
  404518:	f200 8179 	bhi.w	40480e <_malloc_r+0x32a>
  40451c:	09b3      	lsrs	r3, r6, #6
  40451e:	f103 0039 	add.w	r0, r3, #57	; 0x39
  404522:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  404526:	00c3      	lsls	r3, r0, #3
  404528:	4fbf      	ldr	r7, [pc, #764]	; (404828 <_malloc_r+0x344>)
  40452a:	443b      	add	r3, r7
  40452c:	f1a3 0108 	sub.w	r1, r3, #8
  404530:	685c      	ldr	r4, [r3, #4]
  404532:	42a1      	cmp	r1, r4
  404534:	d106      	bne.n	404544 <_malloc_r+0x60>
  404536:	e00c      	b.n	404552 <_malloc_r+0x6e>
  404538:	2a00      	cmp	r2, #0
  40453a:	f280 80aa 	bge.w	404692 <_malloc_r+0x1ae>
  40453e:	68e4      	ldr	r4, [r4, #12]
  404540:	42a1      	cmp	r1, r4
  404542:	d006      	beq.n	404552 <_malloc_r+0x6e>
  404544:	6863      	ldr	r3, [r4, #4]
  404546:	f023 0303 	bic.w	r3, r3, #3
  40454a:	1b9a      	subs	r2, r3, r6
  40454c:	2a0f      	cmp	r2, #15
  40454e:	ddf3      	ble.n	404538 <_malloc_r+0x54>
  404550:	4670      	mov	r0, lr
  404552:	693c      	ldr	r4, [r7, #16]
  404554:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 40483c <_malloc_r+0x358>
  404558:	4574      	cmp	r4, lr
  40455a:	f000 81ab 	beq.w	4048b4 <_malloc_r+0x3d0>
  40455e:	6863      	ldr	r3, [r4, #4]
  404560:	f023 0303 	bic.w	r3, r3, #3
  404564:	1b9a      	subs	r2, r3, r6
  404566:	2a0f      	cmp	r2, #15
  404568:	f300 8190 	bgt.w	40488c <_malloc_r+0x3a8>
  40456c:	2a00      	cmp	r2, #0
  40456e:	f8c7 e014 	str.w	lr, [r7, #20]
  404572:	f8c7 e010 	str.w	lr, [r7, #16]
  404576:	f280 809d 	bge.w	4046b4 <_malloc_r+0x1d0>
  40457a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40457e:	f080 8161 	bcs.w	404844 <_malloc_r+0x360>
  404582:	08db      	lsrs	r3, r3, #3
  404584:	f103 0c01 	add.w	ip, r3, #1
  404588:	1099      	asrs	r1, r3, #2
  40458a:	687a      	ldr	r2, [r7, #4]
  40458c:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  404590:	f8c4 8008 	str.w	r8, [r4, #8]
  404594:	2301      	movs	r3, #1
  404596:	408b      	lsls	r3, r1
  404598:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  40459c:	4313      	orrs	r3, r2
  40459e:	3908      	subs	r1, #8
  4045a0:	60e1      	str	r1, [r4, #12]
  4045a2:	607b      	str	r3, [r7, #4]
  4045a4:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  4045a8:	f8c8 400c 	str.w	r4, [r8, #12]
  4045ac:	1082      	asrs	r2, r0, #2
  4045ae:	2401      	movs	r4, #1
  4045b0:	4094      	lsls	r4, r2
  4045b2:	429c      	cmp	r4, r3
  4045b4:	f200 808b 	bhi.w	4046ce <_malloc_r+0x1ea>
  4045b8:	421c      	tst	r4, r3
  4045ba:	d106      	bne.n	4045ca <_malloc_r+0xe6>
  4045bc:	f020 0003 	bic.w	r0, r0, #3
  4045c0:	0064      	lsls	r4, r4, #1
  4045c2:	421c      	tst	r4, r3
  4045c4:	f100 0004 	add.w	r0, r0, #4
  4045c8:	d0fa      	beq.n	4045c0 <_malloc_r+0xdc>
  4045ca:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  4045ce:	46cc      	mov	ip, r9
  4045d0:	4680      	mov	r8, r0
  4045d2:	f8dc 300c 	ldr.w	r3, [ip, #12]
  4045d6:	459c      	cmp	ip, r3
  4045d8:	d107      	bne.n	4045ea <_malloc_r+0x106>
  4045da:	e16d      	b.n	4048b8 <_malloc_r+0x3d4>
  4045dc:	2a00      	cmp	r2, #0
  4045de:	f280 817b 	bge.w	4048d8 <_malloc_r+0x3f4>
  4045e2:	68db      	ldr	r3, [r3, #12]
  4045e4:	459c      	cmp	ip, r3
  4045e6:	f000 8167 	beq.w	4048b8 <_malloc_r+0x3d4>
  4045ea:	6859      	ldr	r1, [r3, #4]
  4045ec:	f021 0103 	bic.w	r1, r1, #3
  4045f0:	1b8a      	subs	r2, r1, r6
  4045f2:	2a0f      	cmp	r2, #15
  4045f4:	ddf2      	ble.n	4045dc <_malloc_r+0xf8>
  4045f6:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  4045fa:	f8d3 8008 	ldr.w	r8, [r3, #8]
  4045fe:	9300      	str	r3, [sp, #0]
  404600:	199c      	adds	r4, r3, r6
  404602:	4628      	mov	r0, r5
  404604:	f046 0601 	orr.w	r6, r6, #1
  404608:	f042 0501 	orr.w	r5, r2, #1
  40460c:	605e      	str	r6, [r3, #4]
  40460e:	f8c8 c00c 	str.w	ip, [r8, #12]
  404612:	f8cc 8008 	str.w	r8, [ip, #8]
  404616:	617c      	str	r4, [r7, #20]
  404618:	613c      	str	r4, [r7, #16]
  40461a:	f8c4 e00c 	str.w	lr, [r4, #12]
  40461e:	f8c4 e008 	str.w	lr, [r4, #8]
  404622:	6065      	str	r5, [r4, #4]
  404624:	505a      	str	r2, [r3, r1]
  404626:	f000 fb03 	bl	404c30 <__malloc_unlock>
  40462a:	9b00      	ldr	r3, [sp, #0]
  40462c:	f103 0408 	add.w	r4, r3, #8
  404630:	e01e      	b.n	404670 <_malloc_r+0x18c>
  404632:	2910      	cmp	r1, #16
  404634:	d820      	bhi.n	404678 <_malloc_r+0x194>
  404636:	f000 faf5 	bl	404c24 <__malloc_lock>
  40463a:	2610      	movs	r6, #16
  40463c:	2318      	movs	r3, #24
  40463e:	2002      	movs	r0, #2
  404640:	4f79      	ldr	r7, [pc, #484]	; (404828 <_malloc_r+0x344>)
  404642:	443b      	add	r3, r7
  404644:	f1a3 0208 	sub.w	r2, r3, #8
  404648:	685c      	ldr	r4, [r3, #4]
  40464a:	4294      	cmp	r4, r2
  40464c:	f000 813d 	beq.w	4048ca <_malloc_r+0x3e6>
  404650:	6863      	ldr	r3, [r4, #4]
  404652:	68e1      	ldr	r1, [r4, #12]
  404654:	68a6      	ldr	r6, [r4, #8]
  404656:	f023 0303 	bic.w	r3, r3, #3
  40465a:	4423      	add	r3, r4
  40465c:	4628      	mov	r0, r5
  40465e:	685a      	ldr	r2, [r3, #4]
  404660:	60f1      	str	r1, [r6, #12]
  404662:	f042 0201 	orr.w	r2, r2, #1
  404666:	608e      	str	r6, [r1, #8]
  404668:	605a      	str	r2, [r3, #4]
  40466a:	f000 fae1 	bl	404c30 <__malloc_unlock>
  40466e:	3408      	adds	r4, #8
  404670:	4620      	mov	r0, r4
  404672:	b003      	add	sp, #12
  404674:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404678:	2400      	movs	r4, #0
  40467a:	230c      	movs	r3, #12
  40467c:	4620      	mov	r0, r4
  40467e:	602b      	str	r3, [r5, #0]
  404680:	b003      	add	sp, #12
  404682:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404686:	2040      	movs	r0, #64	; 0x40
  404688:	f44f 7300 	mov.w	r3, #512	; 0x200
  40468c:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  404690:	e74a      	b.n	404528 <_malloc_r+0x44>
  404692:	4423      	add	r3, r4
  404694:	68e1      	ldr	r1, [r4, #12]
  404696:	685a      	ldr	r2, [r3, #4]
  404698:	68a6      	ldr	r6, [r4, #8]
  40469a:	f042 0201 	orr.w	r2, r2, #1
  40469e:	60f1      	str	r1, [r6, #12]
  4046a0:	4628      	mov	r0, r5
  4046a2:	608e      	str	r6, [r1, #8]
  4046a4:	605a      	str	r2, [r3, #4]
  4046a6:	f000 fac3 	bl	404c30 <__malloc_unlock>
  4046aa:	3408      	adds	r4, #8
  4046ac:	4620      	mov	r0, r4
  4046ae:	b003      	add	sp, #12
  4046b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4046b4:	4423      	add	r3, r4
  4046b6:	4628      	mov	r0, r5
  4046b8:	685a      	ldr	r2, [r3, #4]
  4046ba:	f042 0201 	orr.w	r2, r2, #1
  4046be:	605a      	str	r2, [r3, #4]
  4046c0:	f000 fab6 	bl	404c30 <__malloc_unlock>
  4046c4:	3408      	adds	r4, #8
  4046c6:	4620      	mov	r0, r4
  4046c8:	b003      	add	sp, #12
  4046ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4046ce:	68bc      	ldr	r4, [r7, #8]
  4046d0:	6863      	ldr	r3, [r4, #4]
  4046d2:	f023 0803 	bic.w	r8, r3, #3
  4046d6:	45b0      	cmp	r8, r6
  4046d8:	d304      	bcc.n	4046e4 <_malloc_r+0x200>
  4046da:	eba8 0306 	sub.w	r3, r8, r6
  4046de:	2b0f      	cmp	r3, #15
  4046e0:	f300 8085 	bgt.w	4047ee <_malloc_r+0x30a>
  4046e4:	f8df 9158 	ldr.w	r9, [pc, #344]	; 404840 <_malloc_r+0x35c>
  4046e8:	4b50      	ldr	r3, [pc, #320]	; (40482c <_malloc_r+0x348>)
  4046ea:	f8d9 2000 	ldr.w	r2, [r9]
  4046ee:	681b      	ldr	r3, [r3, #0]
  4046f0:	3201      	adds	r2, #1
  4046f2:	4433      	add	r3, r6
  4046f4:	eb04 0a08 	add.w	sl, r4, r8
  4046f8:	f000 8155 	beq.w	4049a6 <_malloc_r+0x4c2>
  4046fc:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  404700:	330f      	adds	r3, #15
  404702:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  404706:	f02b 0b0f 	bic.w	fp, fp, #15
  40470a:	4659      	mov	r1, fp
  40470c:	4628      	mov	r0, r5
  40470e:	f000 fd8f 	bl	405230 <_sbrk_r>
  404712:	1c41      	adds	r1, r0, #1
  404714:	4602      	mov	r2, r0
  404716:	f000 80fc 	beq.w	404912 <_malloc_r+0x42e>
  40471a:	4582      	cmp	sl, r0
  40471c:	f200 80f7 	bhi.w	40490e <_malloc_r+0x42a>
  404720:	4b43      	ldr	r3, [pc, #268]	; (404830 <_malloc_r+0x34c>)
  404722:	6819      	ldr	r1, [r3, #0]
  404724:	4459      	add	r1, fp
  404726:	6019      	str	r1, [r3, #0]
  404728:	f000 814d 	beq.w	4049c6 <_malloc_r+0x4e2>
  40472c:	f8d9 0000 	ldr.w	r0, [r9]
  404730:	3001      	adds	r0, #1
  404732:	bf1b      	ittet	ne
  404734:	eba2 0a0a 	subne.w	sl, r2, sl
  404738:	4451      	addne	r1, sl
  40473a:	f8c9 2000 	streq.w	r2, [r9]
  40473e:	6019      	strne	r1, [r3, #0]
  404740:	f012 0107 	ands.w	r1, r2, #7
  404744:	f000 8115 	beq.w	404972 <_malloc_r+0x48e>
  404748:	f1c1 0008 	rsb	r0, r1, #8
  40474c:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  404750:	4402      	add	r2, r0
  404752:	3108      	adds	r1, #8
  404754:	eb02 090b 	add.w	r9, r2, fp
  404758:	f3c9 090b 	ubfx	r9, r9, #0, #12
  40475c:	eba1 0909 	sub.w	r9, r1, r9
  404760:	4649      	mov	r1, r9
  404762:	4628      	mov	r0, r5
  404764:	9301      	str	r3, [sp, #4]
  404766:	9200      	str	r2, [sp, #0]
  404768:	f000 fd62 	bl	405230 <_sbrk_r>
  40476c:	1c43      	adds	r3, r0, #1
  40476e:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404772:	f000 8143 	beq.w	4049fc <_malloc_r+0x518>
  404776:	1a80      	subs	r0, r0, r2
  404778:	4448      	add	r0, r9
  40477a:	f040 0001 	orr.w	r0, r0, #1
  40477e:	6819      	ldr	r1, [r3, #0]
  404780:	60ba      	str	r2, [r7, #8]
  404782:	4449      	add	r1, r9
  404784:	42bc      	cmp	r4, r7
  404786:	6050      	str	r0, [r2, #4]
  404788:	6019      	str	r1, [r3, #0]
  40478a:	d017      	beq.n	4047bc <_malloc_r+0x2d8>
  40478c:	f1b8 0f0f 	cmp.w	r8, #15
  404790:	f240 80fb 	bls.w	40498a <_malloc_r+0x4a6>
  404794:	6860      	ldr	r0, [r4, #4]
  404796:	f1a8 020c 	sub.w	r2, r8, #12
  40479a:	f022 0207 	bic.w	r2, r2, #7
  40479e:	eb04 0e02 	add.w	lr, r4, r2
  4047a2:	f000 0001 	and.w	r0, r0, #1
  4047a6:	f04f 0c05 	mov.w	ip, #5
  4047aa:	4310      	orrs	r0, r2
  4047ac:	2a0f      	cmp	r2, #15
  4047ae:	6060      	str	r0, [r4, #4]
  4047b0:	f8ce c004 	str.w	ip, [lr, #4]
  4047b4:	f8ce c008 	str.w	ip, [lr, #8]
  4047b8:	f200 8117 	bhi.w	4049ea <_malloc_r+0x506>
  4047bc:	4b1d      	ldr	r3, [pc, #116]	; (404834 <_malloc_r+0x350>)
  4047be:	68bc      	ldr	r4, [r7, #8]
  4047c0:	681a      	ldr	r2, [r3, #0]
  4047c2:	4291      	cmp	r1, r2
  4047c4:	bf88      	it	hi
  4047c6:	6019      	strhi	r1, [r3, #0]
  4047c8:	4b1b      	ldr	r3, [pc, #108]	; (404838 <_malloc_r+0x354>)
  4047ca:	681a      	ldr	r2, [r3, #0]
  4047cc:	4291      	cmp	r1, r2
  4047ce:	6862      	ldr	r2, [r4, #4]
  4047d0:	bf88      	it	hi
  4047d2:	6019      	strhi	r1, [r3, #0]
  4047d4:	f022 0203 	bic.w	r2, r2, #3
  4047d8:	4296      	cmp	r6, r2
  4047da:	eba2 0306 	sub.w	r3, r2, r6
  4047de:	d801      	bhi.n	4047e4 <_malloc_r+0x300>
  4047e0:	2b0f      	cmp	r3, #15
  4047e2:	dc04      	bgt.n	4047ee <_malloc_r+0x30a>
  4047e4:	4628      	mov	r0, r5
  4047e6:	f000 fa23 	bl	404c30 <__malloc_unlock>
  4047ea:	2400      	movs	r4, #0
  4047ec:	e740      	b.n	404670 <_malloc_r+0x18c>
  4047ee:	19a2      	adds	r2, r4, r6
  4047f0:	f043 0301 	orr.w	r3, r3, #1
  4047f4:	f046 0601 	orr.w	r6, r6, #1
  4047f8:	6066      	str	r6, [r4, #4]
  4047fa:	4628      	mov	r0, r5
  4047fc:	60ba      	str	r2, [r7, #8]
  4047fe:	6053      	str	r3, [r2, #4]
  404800:	f000 fa16 	bl	404c30 <__malloc_unlock>
  404804:	3408      	adds	r4, #8
  404806:	4620      	mov	r0, r4
  404808:	b003      	add	sp, #12
  40480a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40480e:	2b14      	cmp	r3, #20
  404810:	d971      	bls.n	4048f6 <_malloc_r+0x412>
  404812:	2b54      	cmp	r3, #84	; 0x54
  404814:	f200 80a3 	bhi.w	40495e <_malloc_r+0x47a>
  404818:	0b33      	lsrs	r3, r6, #12
  40481a:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  40481e:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  404822:	00c3      	lsls	r3, r0, #3
  404824:	e680      	b.n	404528 <_malloc_r+0x44>
  404826:	bf00      	nop
  404828:	20400454 	.word	0x20400454
  40482c:	20400cac 	.word	0x20400cac
  404830:	20400c7c 	.word	0x20400c7c
  404834:	20400ca4 	.word	0x20400ca4
  404838:	20400ca8 	.word	0x20400ca8
  40483c:	2040045c 	.word	0x2040045c
  404840:	2040085c 	.word	0x2040085c
  404844:	0a5a      	lsrs	r2, r3, #9
  404846:	2a04      	cmp	r2, #4
  404848:	d95b      	bls.n	404902 <_malloc_r+0x41e>
  40484a:	2a14      	cmp	r2, #20
  40484c:	f200 80ae 	bhi.w	4049ac <_malloc_r+0x4c8>
  404850:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  404854:	00c9      	lsls	r1, r1, #3
  404856:	325b      	adds	r2, #91	; 0x5b
  404858:	eb07 0c01 	add.w	ip, r7, r1
  40485c:	5879      	ldr	r1, [r7, r1]
  40485e:	f1ac 0c08 	sub.w	ip, ip, #8
  404862:	458c      	cmp	ip, r1
  404864:	f000 8088 	beq.w	404978 <_malloc_r+0x494>
  404868:	684a      	ldr	r2, [r1, #4]
  40486a:	f022 0203 	bic.w	r2, r2, #3
  40486e:	4293      	cmp	r3, r2
  404870:	d273      	bcs.n	40495a <_malloc_r+0x476>
  404872:	6889      	ldr	r1, [r1, #8]
  404874:	458c      	cmp	ip, r1
  404876:	d1f7      	bne.n	404868 <_malloc_r+0x384>
  404878:	f8dc 200c 	ldr.w	r2, [ip, #12]
  40487c:	687b      	ldr	r3, [r7, #4]
  40487e:	60e2      	str	r2, [r4, #12]
  404880:	f8c4 c008 	str.w	ip, [r4, #8]
  404884:	6094      	str	r4, [r2, #8]
  404886:	f8cc 400c 	str.w	r4, [ip, #12]
  40488a:	e68f      	b.n	4045ac <_malloc_r+0xc8>
  40488c:	19a1      	adds	r1, r4, r6
  40488e:	f046 0c01 	orr.w	ip, r6, #1
  404892:	f042 0601 	orr.w	r6, r2, #1
  404896:	f8c4 c004 	str.w	ip, [r4, #4]
  40489a:	4628      	mov	r0, r5
  40489c:	6179      	str	r1, [r7, #20]
  40489e:	6139      	str	r1, [r7, #16]
  4048a0:	f8c1 e00c 	str.w	lr, [r1, #12]
  4048a4:	f8c1 e008 	str.w	lr, [r1, #8]
  4048a8:	604e      	str	r6, [r1, #4]
  4048aa:	50e2      	str	r2, [r4, r3]
  4048ac:	f000 f9c0 	bl	404c30 <__malloc_unlock>
  4048b0:	3408      	adds	r4, #8
  4048b2:	e6dd      	b.n	404670 <_malloc_r+0x18c>
  4048b4:	687b      	ldr	r3, [r7, #4]
  4048b6:	e679      	b.n	4045ac <_malloc_r+0xc8>
  4048b8:	f108 0801 	add.w	r8, r8, #1
  4048bc:	f018 0f03 	tst.w	r8, #3
  4048c0:	f10c 0c08 	add.w	ip, ip, #8
  4048c4:	f47f ae85 	bne.w	4045d2 <_malloc_r+0xee>
  4048c8:	e02d      	b.n	404926 <_malloc_r+0x442>
  4048ca:	68dc      	ldr	r4, [r3, #12]
  4048cc:	42a3      	cmp	r3, r4
  4048ce:	bf08      	it	eq
  4048d0:	3002      	addeq	r0, #2
  4048d2:	f43f ae3e 	beq.w	404552 <_malloc_r+0x6e>
  4048d6:	e6bb      	b.n	404650 <_malloc_r+0x16c>
  4048d8:	4419      	add	r1, r3
  4048da:	461c      	mov	r4, r3
  4048dc:	684a      	ldr	r2, [r1, #4]
  4048de:	68db      	ldr	r3, [r3, #12]
  4048e0:	f854 6f08 	ldr.w	r6, [r4, #8]!
  4048e4:	f042 0201 	orr.w	r2, r2, #1
  4048e8:	604a      	str	r2, [r1, #4]
  4048ea:	4628      	mov	r0, r5
  4048ec:	60f3      	str	r3, [r6, #12]
  4048ee:	609e      	str	r6, [r3, #8]
  4048f0:	f000 f99e 	bl	404c30 <__malloc_unlock>
  4048f4:	e6bc      	b.n	404670 <_malloc_r+0x18c>
  4048f6:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  4048fa:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  4048fe:	00c3      	lsls	r3, r0, #3
  404900:	e612      	b.n	404528 <_malloc_r+0x44>
  404902:	099a      	lsrs	r2, r3, #6
  404904:	f102 0139 	add.w	r1, r2, #57	; 0x39
  404908:	00c9      	lsls	r1, r1, #3
  40490a:	3238      	adds	r2, #56	; 0x38
  40490c:	e7a4      	b.n	404858 <_malloc_r+0x374>
  40490e:	42bc      	cmp	r4, r7
  404910:	d054      	beq.n	4049bc <_malloc_r+0x4d8>
  404912:	68bc      	ldr	r4, [r7, #8]
  404914:	6862      	ldr	r2, [r4, #4]
  404916:	f022 0203 	bic.w	r2, r2, #3
  40491a:	e75d      	b.n	4047d8 <_malloc_r+0x2f4>
  40491c:	f859 3908 	ldr.w	r3, [r9], #-8
  404920:	4599      	cmp	r9, r3
  404922:	f040 8086 	bne.w	404a32 <_malloc_r+0x54e>
  404926:	f010 0f03 	tst.w	r0, #3
  40492a:	f100 30ff 	add.w	r0, r0, #4294967295
  40492e:	d1f5      	bne.n	40491c <_malloc_r+0x438>
  404930:	687b      	ldr	r3, [r7, #4]
  404932:	ea23 0304 	bic.w	r3, r3, r4
  404936:	607b      	str	r3, [r7, #4]
  404938:	0064      	lsls	r4, r4, #1
  40493a:	429c      	cmp	r4, r3
  40493c:	f63f aec7 	bhi.w	4046ce <_malloc_r+0x1ea>
  404940:	2c00      	cmp	r4, #0
  404942:	f43f aec4 	beq.w	4046ce <_malloc_r+0x1ea>
  404946:	421c      	tst	r4, r3
  404948:	4640      	mov	r0, r8
  40494a:	f47f ae3e 	bne.w	4045ca <_malloc_r+0xe6>
  40494e:	0064      	lsls	r4, r4, #1
  404950:	421c      	tst	r4, r3
  404952:	f100 0004 	add.w	r0, r0, #4
  404956:	d0fa      	beq.n	40494e <_malloc_r+0x46a>
  404958:	e637      	b.n	4045ca <_malloc_r+0xe6>
  40495a:	468c      	mov	ip, r1
  40495c:	e78c      	b.n	404878 <_malloc_r+0x394>
  40495e:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  404962:	d815      	bhi.n	404990 <_malloc_r+0x4ac>
  404964:	0bf3      	lsrs	r3, r6, #15
  404966:	f103 0078 	add.w	r0, r3, #120	; 0x78
  40496a:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  40496e:	00c3      	lsls	r3, r0, #3
  404970:	e5da      	b.n	404528 <_malloc_r+0x44>
  404972:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  404976:	e6ed      	b.n	404754 <_malloc_r+0x270>
  404978:	687b      	ldr	r3, [r7, #4]
  40497a:	1092      	asrs	r2, r2, #2
  40497c:	2101      	movs	r1, #1
  40497e:	fa01 f202 	lsl.w	r2, r1, r2
  404982:	4313      	orrs	r3, r2
  404984:	607b      	str	r3, [r7, #4]
  404986:	4662      	mov	r2, ip
  404988:	e779      	b.n	40487e <_malloc_r+0x39a>
  40498a:	2301      	movs	r3, #1
  40498c:	6053      	str	r3, [r2, #4]
  40498e:	e729      	b.n	4047e4 <_malloc_r+0x300>
  404990:	f240 5254 	movw	r2, #1364	; 0x554
  404994:	4293      	cmp	r3, r2
  404996:	d822      	bhi.n	4049de <_malloc_r+0x4fa>
  404998:	0cb3      	lsrs	r3, r6, #18
  40499a:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  40499e:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  4049a2:	00c3      	lsls	r3, r0, #3
  4049a4:	e5c0      	b.n	404528 <_malloc_r+0x44>
  4049a6:	f103 0b10 	add.w	fp, r3, #16
  4049aa:	e6ae      	b.n	40470a <_malloc_r+0x226>
  4049ac:	2a54      	cmp	r2, #84	; 0x54
  4049ae:	d829      	bhi.n	404a04 <_malloc_r+0x520>
  4049b0:	0b1a      	lsrs	r2, r3, #12
  4049b2:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  4049b6:	00c9      	lsls	r1, r1, #3
  4049b8:	326e      	adds	r2, #110	; 0x6e
  4049ba:	e74d      	b.n	404858 <_malloc_r+0x374>
  4049bc:	4b20      	ldr	r3, [pc, #128]	; (404a40 <_malloc_r+0x55c>)
  4049be:	6819      	ldr	r1, [r3, #0]
  4049c0:	4459      	add	r1, fp
  4049c2:	6019      	str	r1, [r3, #0]
  4049c4:	e6b2      	b.n	40472c <_malloc_r+0x248>
  4049c6:	f3ca 000b 	ubfx	r0, sl, #0, #12
  4049ca:	2800      	cmp	r0, #0
  4049cc:	f47f aeae 	bne.w	40472c <_malloc_r+0x248>
  4049d0:	eb08 030b 	add.w	r3, r8, fp
  4049d4:	68ba      	ldr	r2, [r7, #8]
  4049d6:	f043 0301 	orr.w	r3, r3, #1
  4049da:	6053      	str	r3, [r2, #4]
  4049dc:	e6ee      	b.n	4047bc <_malloc_r+0x2d8>
  4049de:	207f      	movs	r0, #127	; 0x7f
  4049e0:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  4049e4:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  4049e8:	e59e      	b.n	404528 <_malloc_r+0x44>
  4049ea:	f104 0108 	add.w	r1, r4, #8
  4049ee:	4628      	mov	r0, r5
  4049f0:	9300      	str	r3, [sp, #0]
  4049f2:	f000 fe13 	bl	40561c <_free_r>
  4049f6:	9b00      	ldr	r3, [sp, #0]
  4049f8:	6819      	ldr	r1, [r3, #0]
  4049fa:	e6df      	b.n	4047bc <_malloc_r+0x2d8>
  4049fc:	2001      	movs	r0, #1
  4049fe:	f04f 0900 	mov.w	r9, #0
  404a02:	e6bc      	b.n	40477e <_malloc_r+0x29a>
  404a04:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  404a08:	d805      	bhi.n	404a16 <_malloc_r+0x532>
  404a0a:	0bda      	lsrs	r2, r3, #15
  404a0c:	f102 0178 	add.w	r1, r2, #120	; 0x78
  404a10:	00c9      	lsls	r1, r1, #3
  404a12:	3277      	adds	r2, #119	; 0x77
  404a14:	e720      	b.n	404858 <_malloc_r+0x374>
  404a16:	f240 5154 	movw	r1, #1364	; 0x554
  404a1a:	428a      	cmp	r2, r1
  404a1c:	d805      	bhi.n	404a2a <_malloc_r+0x546>
  404a1e:	0c9a      	lsrs	r2, r3, #18
  404a20:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  404a24:	00c9      	lsls	r1, r1, #3
  404a26:	327c      	adds	r2, #124	; 0x7c
  404a28:	e716      	b.n	404858 <_malloc_r+0x374>
  404a2a:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  404a2e:	227e      	movs	r2, #126	; 0x7e
  404a30:	e712      	b.n	404858 <_malloc_r+0x374>
  404a32:	687b      	ldr	r3, [r7, #4]
  404a34:	e780      	b.n	404938 <_malloc_r+0x454>
  404a36:	08f0      	lsrs	r0, r6, #3
  404a38:	f106 0308 	add.w	r3, r6, #8
  404a3c:	e600      	b.n	404640 <_malloc_r+0x15c>
  404a3e:	bf00      	nop
  404a40:	20400c7c 	.word	0x20400c7c
	...

00404a50 <memchr>:
  404a50:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404a54:	2a10      	cmp	r2, #16
  404a56:	db2b      	blt.n	404ab0 <memchr+0x60>
  404a58:	f010 0f07 	tst.w	r0, #7
  404a5c:	d008      	beq.n	404a70 <memchr+0x20>
  404a5e:	f810 3b01 	ldrb.w	r3, [r0], #1
  404a62:	3a01      	subs	r2, #1
  404a64:	428b      	cmp	r3, r1
  404a66:	d02d      	beq.n	404ac4 <memchr+0x74>
  404a68:	f010 0f07 	tst.w	r0, #7
  404a6c:	b342      	cbz	r2, 404ac0 <memchr+0x70>
  404a6e:	d1f6      	bne.n	404a5e <memchr+0xe>
  404a70:	b4f0      	push	{r4, r5, r6, r7}
  404a72:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  404a76:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  404a7a:	f022 0407 	bic.w	r4, r2, #7
  404a7e:	f07f 0700 	mvns.w	r7, #0
  404a82:	2300      	movs	r3, #0
  404a84:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  404a88:	3c08      	subs	r4, #8
  404a8a:	ea85 0501 	eor.w	r5, r5, r1
  404a8e:	ea86 0601 	eor.w	r6, r6, r1
  404a92:	fa85 f547 	uadd8	r5, r5, r7
  404a96:	faa3 f587 	sel	r5, r3, r7
  404a9a:	fa86 f647 	uadd8	r6, r6, r7
  404a9e:	faa5 f687 	sel	r6, r5, r7
  404aa2:	b98e      	cbnz	r6, 404ac8 <memchr+0x78>
  404aa4:	d1ee      	bne.n	404a84 <memchr+0x34>
  404aa6:	bcf0      	pop	{r4, r5, r6, r7}
  404aa8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404aac:	f002 0207 	and.w	r2, r2, #7
  404ab0:	b132      	cbz	r2, 404ac0 <memchr+0x70>
  404ab2:	f810 3b01 	ldrb.w	r3, [r0], #1
  404ab6:	3a01      	subs	r2, #1
  404ab8:	ea83 0301 	eor.w	r3, r3, r1
  404abc:	b113      	cbz	r3, 404ac4 <memchr+0x74>
  404abe:	d1f8      	bne.n	404ab2 <memchr+0x62>
  404ac0:	2000      	movs	r0, #0
  404ac2:	4770      	bx	lr
  404ac4:	3801      	subs	r0, #1
  404ac6:	4770      	bx	lr
  404ac8:	2d00      	cmp	r5, #0
  404aca:	bf06      	itte	eq
  404acc:	4635      	moveq	r5, r6
  404ace:	3803      	subeq	r0, #3
  404ad0:	3807      	subne	r0, #7
  404ad2:	f015 0f01 	tst.w	r5, #1
  404ad6:	d107      	bne.n	404ae8 <memchr+0x98>
  404ad8:	3001      	adds	r0, #1
  404ada:	f415 7f80 	tst.w	r5, #256	; 0x100
  404ade:	bf02      	ittt	eq
  404ae0:	3001      	addeq	r0, #1
  404ae2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  404ae6:	3001      	addeq	r0, #1
  404ae8:	bcf0      	pop	{r4, r5, r6, r7}
  404aea:	3801      	subs	r0, #1
  404aec:	4770      	bx	lr
  404aee:	bf00      	nop

00404af0 <memcpy>:
  404af0:	4684      	mov	ip, r0
  404af2:	ea41 0300 	orr.w	r3, r1, r0
  404af6:	f013 0303 	ands.w	r3, r3, #3
  404afa:	d16d      	bne.n	404bd8 <memcpy+0xe8>
  404afc:	3a40      	subs	r2, #64	; 0x40
  404afe:	d341      	bcc.n	404b84 <memcpy+0x94>
  404b00:	f851 3b04 	ldr.w	r3, [r1], #4
  404b04:	f840 3b04 	str.w	r3, [r0], #4
  404b08:	f851 3b04 	ldr.w	r3, [r1], #4
  404b0c:	f840 3b04 	str.w	r3, [r0], #4
  404b10:	f851 3b04 	ldr.w	r3, [r1], #4
  404b14:	f840 3b04 	str.w	r3, [r0], #4
  404b18:	f851 3b04 	ldr.w	r3, [r1], #4
  404b1c:	f840 3b04 	str.w	r3, [r0], #4
  404b20:	f851 3b04 	ldr.w	r3, [r1], #4
  404b24:	f840 3b04 	str.w	r3, [r0], #4
  404b28:	f851 3b04 	ldr.w	r3, [r1], #4
  404b2c:	f840 3b04 	str.w	r3, [r0], #4
  404b30:	f851 3b04 	ldr.w	r3, [r1], #4
  404b34:	f840 3b04 	str.w	r3, [r0], #4
  404b38:	f851 3b04 	ldr.w	r3, [r1], #4
  404b3c:	f840 3b04 	str.w	r3, [r0], #4
  404b40:	f851 3b04 	ldr.w	r3, [r1], #4
  404b44:	f840 3b04 	str.w	r3, [r0], #4
  404b48:	f851 3b04 	ldr.w	r3, [r1], #4
  404b4c:	f840 3b04 	str.w	r3, [r0], #4
  404b50:	f851 3b04 	ldr.w	r3, [r1], #4
  404b54:	f840 3b04 	str.w	r3, [r0], #4
  404b58:	f851 3b04 	ldr.w	r3, [r1], #4
  404b5c:	f840 3b04 	str.w	r3, [r0], #4
  404b60:	f851 3b04 	ldr.w	r3, [r1], #4
  404b64:	f840 3b04 	str.w	r3, [r0], #4
  404b68:	f851 3b04 	ldr.w	r3, [r1], #4
  404b6c:	f840 3b04 	str.w	r3, [r0], #4
  404b70:	f851 3b04 	ldr.w	r3, [r1], #4
  404b74:	f840 3b04 	str.w	r3, [r0], #4
  404b78:	f851 3b04 	ldr.w	r3, [r1], #4
  404b7c:	f840 3b04 	str.w	r3, [r0], #4
  404b80:	3a40      	subs	r2, #64	; 0x40
  404b82:	d2bd      	bcs.n	404b00 <memcpy+0x10>
  404b84:	3230      	adds	r2, #48	; 0x30
  404b86:	d311      	bcc.n	404bac <memcpy+0xbc>
  404b88:	f851 3b04 	ldr.w	r3, [r1], #4
  404b8c:	f840 3b04 	str.w	r3, [r0], #4
  404b90:	f851 3b04 	ldr.w	r3, [r1], #4
  404b94:	f840 3b04 	str.w	r3, [r0], #4
  404b98:	f851 3b04 	ldr.w	r3, [r1], #4
  404b9c:	f840 3b04 	str.w	r3, [r0], #4
  404ba0:	f851 3b04 	ldr.w	r3, [r1], #4
  404ba4:	f840 3b04 	str.w	r3, [r0], #4
  404ba8:	3a10      	subs	r2, #16
  404baa:	d2ed      	bcs.n	404b88 <memcpy+0x98>
  404bac:	320c      	adds	r2, #12
  404bae:	d305      	bcc.n	404bbc <memcpy+0xcc>
  404bb0:	f851 3b04 	ldr.w	r3, [r1], #4
  404bb4:	f840 3b04 	str.w	r3, [r0], #4
  404bb8:	3a04      	subs	r2, #4
  404bba:	d2f9      	bcs.n	404bb0 <memcpy+0xc0>
  404bbc:	3204      	adds	r2, #4
  404bbe:	d008      	beq.n	404bd2 <memcpy+0xe2>
  404bc0:	07d2      	lsls	r2, r2, #31
  404bc2:	bf1c      	itt	ne
  404bc4:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404bc8:	f800 3b01 	strbne.w	r3, [r0], #1
  404bcc:	d301      	bcc.n	404bd2 <memcpy+0xe2>
  404bce:	880b      	ldrh	r3, [r1, #0]
  404bd0:	8003      	strh	r3, [r0, #0]
  404bd2:	4660      	mov	r0, ip
  404bd4:	4770      	bx	lr
  404bd6:	bf00      	nop
  404bd8:	2a08      	cmp	r2, #8
  404bda:	d313      	bcc.n	404c04 <memcpy+0x114>
  404bdc:	078b      	lsls	r3, r1, #30
  404bde:	d08d      	beq.n	404afc <memcpy+0xc>
  404be0:	f010 0303 	ands.w	r3, r0, #3
  404be4:	d08a      	beq.n	404afc <memcpy+0xc>
  404be6:	f1c3 0304 	rsb	r3, r3, #4
  404bea:	1ad2      	subs	r2, r2, r3
  404bec:	07db      	lsls	r3, r3, #31
  404bee:	bf1c      	itt	ne
  404bf0:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404bf4:	f800 3b01 	strbne.w	r3, [r0], #1
  404bf8:	d380      	bcc.n	404afc <memcpy+0xc>
  404bfa:	f831 3b02 	ldrh.w	r3, [r1], #2
  404bfe:	f820 3b02 	strh.w	r3, [r0], #2
  404c02:	e77b      	b.n	404afc <memcpy+0xc>
  404c04:	3a04      	subs	r2, #4
  404c06:	d3d9      	bcc.n	404bbc <memcpy+0xcc>
  404c08:	3a01      	subs	r2, #1
  404c0a:	f811 3b01 	ldrb.w	r3, [r1], #1
  404c0e:	f800 3b01 	strb.w	r3, [r0], #1
  404c12:	d2f9      	bcs.n	404c08 <memcpy+0x118>
  404c14:	780b      	ldrb	r3, [r1, #0]
  404c16:	7003      	strb	r3, [r0, #0]
  404c18:	784b      	ldrb	r3, [r1, #1]
  404c1a:	7043      	strb	r3, [r0, #1]
  404c1c:	788b      	ldrb	r3, [r1, #2]
  404c1e:	7083      	strb	r3, [r0, #2]
  404c20:	4660      	mov	r0, ip
  404c22:	4770      	bx	lr

00404c24 <__malloc_lock>:
  404c24:	4801      	ldr	r0, [pc, #4]	; (404c2c <__malloc_lock+0x8>)
  404c26:	f7ff bc59 	b.w	4044dc <__retarget_lock_acquire_recursive>
  404c2a:	bf00      	nop
  404c2c:	20400d40 	.word	0x20400d40

00404c30 <__malloc_unlock>:
  404c30:	4801      	ldr	r0, [pc, #4]	; (404c38 <__malloc_unlock+0x8>)
  404c32:	f7ff bc55 	b.w	4044e0 <__retarget_lock_release_recursive>
  404c36:	bf00      	nop
  404c38:	20400d40 	.word	0x20400d40

00404c3c <_Balloc>:
  404c3c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  404c3e:	b570      	push	{r4, r5, r6, lr}
  404c40:	4605      	mov	r5, r0
  404c42:	460c      	mov	r4, r1
  404c44:	b14b      	cbz	r3, 404c5a <_Balloc+0x1e>
  404c46:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  404c4a:	b180      	cbz	r0, 404c6e <_Balloc+0x32>
  404c4c:	6802      	ldr	r2, [r0, #0]
  404c4e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  404c52:	2300      	movs	r3, #0
  404c54:	6103      	str	r3, [r0, #16]
  404c56:	60c3      	str	r3, [r0, #12]
  404c58:	bd70      	pop	{r4, r5, r6, pc}
  404c5a:	2221      	movs	r2, #33	; 0x21
  404c5c:	2104      	movs	r1, #4
  404c5e:	f000 fc5d 	bl	40551c <_calloc_r>
  404c62:	64e8      	str	r0, [r5, #76]	; 0x4c
  404c64:	4603      	mov	r3, r0
  404c66:	2800      	cmp	r0, #0
  404c68:	d1ed      	bne.n	404c46 <_Balloc+0xa>
  404c6a:	2000      	movs	r0, #0
  404c6c:	bd70      	pop	{r4, r5, r6, pc}
  404c6e:	2101      	movs	r1, #1
  404c70:	fa01 f604 	lsl.w	r6, r1, r4
  404c74:	1d72      	adds	r2, r6, #5
  404c76:	4628      	mov	r0, r5
  404c78:	0092      	lsls	r2, r2, #2
  404c7a:	f000 fc4f 	bl	40551c <_calloc_r>
  404c7e:	2800      	cmp	r0, #0
  404c80:	d0f3      	beq.n	404c6a <_Balloc+0x2e>
  404c82:	6044      	str	r4, [r0, #4]
  404c84:	6086      	str	r6, [r0, #8]
  404c86:	e7e4      	b.n	404c52 <_Balloc+0x16>

00404c88 <_Bfree>:
  404c88:	b131      	cbz	r1, 404c98 <_Bfree+0x10>
  404c8a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  404c8c:	684a      	ldr	r2, [r1, #4]
  404c8e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  404c92:	6008      	str	r0, [r1, #0]
  404c94:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  404c98:	4770      	bx	lr
  404c9a:	bf00      	nop

00404c9c <__multadd>:
  404c9c:	b5f0      	push	{r4, r5, r6, r7, lr}
  404c9e:	690c      	ldr	r4, [r1, #16]
  404ca0:	b083      	sub	sp, #12
  404ca2:	460d      	mov	r5, r1
  404ca4:	4606      	mov	r6, r0
  404ca6:	f101 0e14 	add.w	lr, r1, #20
  404caa:	2700      	movs	r7, #0
  404cac:	f8de 0000 	ldr.w	r0, [lr]
  404cb0:	b281      	uxth	r1, r0
  404cb2:	fb02 3301 	mla	r3, r2, r1, r3
  404cb6:	0c01      	lsrs	r1, r0, #16
  404cb8:	0c18      	lsrs	r0, r3, #16
  404cba:	fb02 0101 	mla	r1, r2, r1, r0
  404cbe:	b29b      	uxth	r3, r3
  404cc0:	3701      	adds	r7, #1
  404cc2:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  404cc6:	42bc      	cmp	r4, r7
  404cc8:	f84e 3b04 	str.w	r3, [lr], #4
  404ccc:	ea4f 4311 	mov.w	r3, r1, lsr #16
  404cd0:	dcec      	bgt.n	404cac <__multadd+0x10>
  404cd2:	b13b      	cbz	r3, 404ce4 <__multadd+0x48>
  404cd4:	68aa      	ldr	r2, [r5, #8]
  404cd6:	4294      	cmp	r4, r2
  404cd8:	da07      	bge.n	404cea <__multadd+0x4e>
  404cda:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  404cde:	3401      	adds	r4, #1
  404ce0:	6153      	str	r3, [r2, #20]
  404ce2:	612c      	str	r4, [r5, #16]
  404ce4:	4628      	mov	r0, r5
  404ce6:	b003      	add	sp, #12
  404ce8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404cea:	6869      	ldr	r1, [r5, #4]
  404cec:	9301      	str	r3, [sp, #4]
  404cee:	3101      	adds	r1, #1
  404cf0:	4630      	mov	r0, r6
  404cf2:	f7ff ffa3 	bl	404c3c <_Balloc>
  404cf6:	692a      	ldr	r2, [r5, #16]
  404cf8:	3202      	adds	r2, #2
  404cfa:	f105 010c 	add.w	r1, r5, #12
  404cfe:	4607      	mov	r7, r0
  404d00:	0092      	lsls	r2, r2, #2
  404d02:	300c      	adds	r0, #12
  404d04:	f7ff fef4 	bl	404af0 <memcpy>
  404d08:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  404d0a:	6869      	ldr	r1, [r5, #4]
  404d0c:	9b01      	ldr	r3, [sp, #4]
  404d0e:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  404d12:	6028      	str	r0, [r5, #0]
  404d14:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  404d18:	463d      	mov	r5, r7
  404d1a:	e7de      	b.n	404cda <__multadd+0x3e>

00404d1c <__hi0bits>:
  404d1c:	0c02      	lsrs	r2, r0, #16
  404d1e:	0412      	lsls	r2, r2, #16
  404d20:	4603      	mov	r3, r0
  404d22:	b9b2      	cbnz	r2, 404d52 <__hi0bits+0x36>
  404d24:	0403      	lsls	r3, r0, #16
  404d26:	2010      	movs	r0, #16
  404d28:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  404d2c:	bf04      	itt	eq
  404d2e:	021b      	lsleq	r3, r3, #8
  404d30:	3008      	addeq	r0, #8
  404d32:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  404d36:	bf04      	itt	eq
  404d38:	011b      	lsleq	r3, r3, #4
  404d3a:	3004      	addeq	r0, #4
  404d3c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  404d40:	bf04      	itt	eq
  404d42:	009b      	lsleq	r3, r3, #2
  404d44:	3002      	addeq	r0, #2
  404d46:	2b00      	cmp	r3, #0
  404d48:	db02      	blt.n	404d50 <__hi0bits+0x34>
  404d4a:	005b      	lsls	r3, r3, #1
  404d4c:	d403      	bmi.n	404d56 <__hi0bits+0x3a>
  404d4e:	2020      	movs	r0, #32
  404d50:	4770      	bx	lr
  404d52:	2000      	movs	r0, #0
  404d54:	e7e8      	b.n	404d28 <__hi0bits+0xc>
  404d56:	3001      	adds	r0, #1
  404d58:	4770      	bx	lr
  404d5a:	bf00      	nop

00404d5c <__lo0bits>:
  404d5c:	6803      	ldr	r3, [r0, #0]
  404d5e:	f013 0207 	ands.w	r2, r3, #7
  404d62:	4601      	mov	r1, r0
  404d64:	d007      	beq.n	404d76 <__lo0bits+0x1a>
  404d66:	07da      	lsls	r2, r3, #31
  404d68:	d421      	bmi.n	404dae <__lo0bits+0x52>
  404d6a:	0798      	lsls	r0, r3, #30
  404d6c:	d421      	bmi.n	404db2 <__lo0bits+0x56>
  404d6e:	089b      	lsrs	r3, r3, #2
  404d70:	600b      	str	r3, [r1, #0]
  404d72:	2002      	movs	r0, #2
  404d74:	4770      	bx	lr
  404d76:	b298      	uxth	r0, r3
  404d78:	b198      	cbz	r0, 404da2 <__lo0bits+0x46>
  404d7a:	4610      	mov	r0, r2
  404d7c:	f013 0fff 	tst.w	r3, #255	; 0xff
  404d80:	bf04      	itt	eq
  404d82:	0a1b      	lsreq	r3, r3, #8
  404d84:	3008      	addeq	r0, #8
  404d86:	071a      	lsls	r2, r3, #28
  404d88:	bf04      	itt	eq
  404d8a:	091b      	lsreq	r3, r3, #4
  404d8c:	3004      	addeq	r0, #4
  404d8e:	079a      	lsls	r2, r3, #30
  404d90:	bf04      	itt	eq
  404d92:	089b      	lsreq	r3, r3, #2
  404d94:	3002      	addeq	r0, #2
  404d96:	07da      	lsls	r2, r3, #31
  404d98:	d407      	bmi.n	404daa <__lo0bits+0x4e>
  404d9a:	085b      	lsrs	r3, r3, #1
  404d9c:	d104      	bne.n	404da8 <__lo0bits+0x4c>
  404d9e:	2020      	movs	r0, #32
  404da0:	4770      	bx	lr
  404da2:	0c1b      	lsrs	r3, r3, #16
  404da4:	2010      	movs	r0, #16
  404da6:	e7e9      	b.n	404d7c <__lo0bits+0x20>
  404da8:	3001      	adds	r0, #1
  404daa:	600b      	str	r3, [r1, #0]
  404dac:	4770      	bx	lr
  404dae:	2000      	movs	r0, #0
  404db0:	4770      	bx	lr
  404db2:	085b      	lsrs	r3, r3, #1
  404db4:	600b      	str	r3, [r1, #0]
  404db6:	2001      	movs	r0, #1
  404db8:	4770      	bx	lr
  404dba:	bf00      	nop

00404dbc <__i2b>:
  404dbc:	b510      	push	{r4, lr}
  404dbe:	460c      	mov	r4, r1
  404dc0:	2101      	movs	r1, #1
  404dc2:	f7ff ff3b 	bl	404c3c <_Balloc>
  404dc6:	2201      	movs	r2, #1
  404dc8:	6144      	str	r4, [r0, #20]
  404dca:	6102      	str	r2, [r0, #16]
  404dcc:	bd10      	pop	{r4, pc}
  404dce:	bf00      	nop

00404dd0 <__multiply>:
  404dd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404dd4:	690c      	ldr	r4, [r1, #16]
  404dd6:	6915      	ldr	r5, [r2, #16]
  404dd8:	42ac      	cmp	r4, r5
  404dda:	b083      	sub	sp, #12
  404ddc:	468b      	mov	fp, r1
  404dde:	4616      	mov	r6, r2
  404de0:	da04      	bge.n	404dec <__multiply+0x1c>
  404de2:	4622      	mov	r2, r4
  404de4:	46b3      	mov	fp, r6
  404de6:	462c      	mov	r4, r5
  404de8:	460e      	mov	r6, r1
  404dea:	4615      	mov	r5, r2
  404dec:	f8db 3008 	ldr.w	r3, [fp, #8]
  404df0:	f8db 1004 	ldr.w	r1, [fp, #4]
  404df4:	eb04 0805 	add.w	r8, r4, r5
  404df8:	4598      	cmp	r8, r3
  404dfa:	bfc8      	it	gt
  404dfc:	3101      	addgt	r1, #1
  404dfe:	f7ff ff1d 	bl	404c3c <_Balloc>
  404e02:	f100 0914 	add.w	r9, r0, #20
  404e06:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  404e0a:	45d1      	cmp	r9, sl
  404e0c:	9000      	str	r0, [sp, #0]
  404e0e:	d205      	bcs.n	404e1c <__multiply+0x4c>
  404e10:	464b      	mov	r3, r9
  404e12:	2100      	movs	r1, #0
  404e14:	f843 1b04 	str.w	r1, [r3], #4
  404e18:	459a      	cmp	sl, r3
  404e1a:	d8fb      	bhi.n	404e14 <__multiply+0x44>
  404e1c:	f106 0c14 	add.w	ip, r6, #20
  404e20:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  404e24:	f10b 0b14 	add.w	fp, fp, #20
  404e28:	459c      	cmp	ip, r3
  404e2a:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  404e2e:	d24c      	bcs.n	404eca <__multiply+0xfa>
  404e30:	f8cd a004 	str.w	sl, [sp, #4]
  404e34:	469a      	mov	sl, r3
  404e36:	f8dc 5000 	ldr.w	r5, [ip]
  404e3a:	b2af      	uxth	r7, r5
  404e3c:	b1ef      	cbz	r7, 404e7a <__multiply+0xaa>
  404e3e:	2100      	movs	r1, #0
  404e40:	464d      	mov	r5, r9
  404e42:	465e      	mov	r6, fp
  404e44:	460c      	mov	r4, r1
  404e46:	f856 2b04 	ldr.w	r2, [r6], #4
  404e4a:	6828      	ldr	r0, [r5, #0]
  404e4c:	b293      	uxth	r3, r2
  404e4e:	b281      	uxth	r1, r0
  404e50:	fb07 1303 	mla	r3, r7, r3, r1
  404e54:	0c12      	lsrs	r2, r2, #16
  404e56:	0c01      	lsrs	r1, r0, #16
  404e58:	4423      	add	r3, r4
  404e5a:	fb07 1102 	mla	r1, r7, r2, r1
  404e5e:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  404e62:	b29b      	uxth	r3, r3
  404e64:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  404e68:	45b6      	cmp	lr, r6
  404e6a:	f845 3b04 	str.w	r3, [r5], #4
  404e6e:	ea4f 4411 	mov.w	r4, r1, lsr #16
  404e72:	d8e8      	bhi.n	404e46 <__multiply+0x76>
  404e74:	602c      	str	r4, [r5, #0]
  404e76:	f8dc 5000 	ldr.w	r5, [ip]
  404e7a:	0c2d      	lsrs	r5, r5, #16
  404e7c:	d01d      	beq.n	404eba <__multiply+0xea>
  404e7e:	f8d9 3000 	ldr.w	r3, [r9]
  404e82:	4648      	mov	r0, r9
  404e84:	461c      	mov	r4, r3
  404e86:	4659      	mov	r1, fp
  404e88:	2200      	movs	r2, #0
  404e8a:	880e      	ldrh	r6, [r1, #0]
  404e8c:	0c24      	lsrs	r4, r4, #16
  404e8e:	fb05 4406 	mla	r4, r5, r6, r4
  404e92:	4422      	add	r2, r4
  404e94:	b29b      	uxth	r3, r3
  404e96:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  404e9a:	f840 3b04 	str.w	r3, [r0], #4
  404e9e:	f851 3b04 	ldr.w	r3, [r1], #4
  404ea2:	6804      	ldr	r4, [r0, #0]
  404ea4:	0c1b      	lsrs	r3, r3, #16
  404ea6:	b2a6      	uxth	r6, r4
  404ea8:	fb05 6303 	mla	r3, r5, r3, r6
  404eac:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  404eb0:	458e      	cmp	lr, r1
  404eb2:	ea4f 4213 	mov.w	r2, r3, lsr #16
  404eb6:	d8e8      	bhi.n	404e8a <__multiply+0xba>
  404eb8:	6003      	str	r3, [r0, #0]
  404eba:	f10c 0c04 	add.w	ip, ip, #4
  404ebe:	45e2      	cmp	sl, ip
  404ec0:	f109 0904 	add.w	r9, r9, #4
  404ec4:	d8b7      	bhi.n	404e36 <__multiply+0x66>
  404ec6:	f8dd a004 	ldr.w	sl, [sp, #4]
  404eca:	f1b8 0f00 	cmp.w	r8, #0
  404ece:	dd0b      	ble.n	404ee8 <__multiply+0x118>
  404ed0:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  404ed4:	f1aa 0a04 	sub.w	sl, sl, #4
  404ed8:	b11b      	cbz	r3, 404ee2 <__multiply+0x112>
  404eda:	e005      	b.n	404ee8 <__multiply+0x118>
  404edc:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  404ee0:	b913      	cbnz	r3, 404ee8 <__multiply+0x118>
  404ee2:	f1b8 0801 	subs.w	r8, r8, #1
  404ee6:	d1f9      	bne.n	404edc <__multiply+0x10c>
  404ee8:	9800      	ldr	r0, [sp, #0]
  404eea:	f8c0 8010 	str.w	r8, [r0, #16]
  404eee:	b003      	add	sp, #12
  404ef0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00404ef4 <__pow5mult>:
  404ef4:	f012 0303 	ands.w	r3, r2, #3
  404ef8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404efc:	4614      	mov	r4, r2
  404efe:	4607      	mov	r7, r0
  404f00:	d12e      	bne.n	404f60 <__pow5mult+0x6c>
  404f02:	460d      	mov	r5, r1
  404f04:	10a4      	asrs	r4, r4, #2
  404f06:	d01c      	beq.n	404f42 <__pow5mult+0x4e>
  404f08:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  404f0a:	b396      	cbz	r6, 404f72 <__pow5mult+0x7e>
  404f0c:	07e3      	lsls	r3, r4, #31
  404f0e:	f04f 0800 	mov.w	r8, #0
  404f12:	d406      	bmi.n	404f22 <__pow5mult+0x2e>
  404f14:	1064      	asrs	r4, r4, #1
  404f16:	d014      	beq.n	404f42 <__pow5mult+0x4e>
  404f18:	6830      	ldr	r0, [r6, #0]
  404f1a:	b1a8      	cbz	r0, 404f48 <__pow5mult+0x54>
  404f1c:	4606      	mov	r6, r0
  404f1e:	07e3      	lsls	r3, r4, #31
  404f20:	d5f8      	bpl.n	404f14 <__pow5mult+0x20>
  404f22:	4632      	mov	r2, r6
  404f24:	4629      	mov	r1, r5
  404f26:	4638      	mov	r0, r7
  404f28:	f7ff ff52 	bl	404dd0 <__multiply>
  404f2c:	b1b5      	cbz	r5, 404f5c <__pow5mult+0x68>
  404f2e:	686a      	ldr	r2, [r5, #4]
  404f30:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404f32:	1064      	asrs	r4, r4, #1
  404f34:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404f38:	6029      	str	r1, [r5, #0]
  404f3a:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  404f3e:	4605      	mov	r5, r0
  404f40:	d1ea      	bne.n	404f18 <__pow5mult+0x24>
  404f42:	4628      	mov	r0, r5
  404f44:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404f48:	4632      	mov	r2, r6
  404f4a:	4631      	mov	r1, r6
  404f4c:	4638      	mov	r0, r7
  404f4e:	f7ff ff3f 	bl	404dd0 <__multiply>
  404f52:	6030      	str	r0, [r6, #0]
  404f54:	f8c0 8000 	str.w	r8, [r0]
  404f58:	4606      	mov	r6, r0
  404f5a:	e7e0      	b.n	404f1e <__pow5mult+0x2a>
  404f5c:	4605      	mov	r5, r0
  404f5e:	e7d9      	b.n	404f14 <__pow5mult+0x20>
  404f60:	1e5a      	subs	r2, r3, #1
  404f62:	4d0b      	ldr	r5, [pc, #44]	; (404f90 <__pow5mult+0x9c>)
  404f64:	2300      	movs	r3, #0
  404f66:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  404f6a:	f7ff fe97 	bl	404c9c <__multadd>
  404f6e:	4605      	mov	r5, r0
  404f70:	e7c8      	b.n	404f04 <__pow5mult+0x10>
  404f72:	2101      	movs	r1, #1
  404f74:	4638      	mov	r0, r7
  404f76:	f7ff fe61 	bl	404c3c <_Balloc>
  404f7a:	f240 2171 	movw	r1, #625	; 0x271
  404f7e:	2201      	movs	r2, #1
  404f80:	2300      	movs	r3, #0
  404f82:	6141      	str	r1, [r0, #20]
  404f84:	6102      	str	r2, [r0, #16]
  404f86:	4606      	mov	r6, r0
  404f88:	64b8      	str	r0, [r7, #72]	; 0x48
  404f8a:	6003      	str	r3, [r0, #0]
  404f8c:	e7be      	b.n	404f0c <__pow5mult+0x18>
  404f8e:	bf00      	nop
  404f90:	00406cb8 	.word	0x00406cb8

00404f94 <__lshift>:
  404f94:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  404f98:	4691      	mov	r9, r2
  404f9a:	690a      	ldr	r2, [r1, #16]
  404f9c:	688b      	ldr	r3, [r1, #8]
  404f9e:	ea4f 1469 	mov.w	r4, r9, asr #5
  404fa2:	eb04 0802 	add.w	r8, r4, r2
  404fa6:	f108 0501 	add.w	r5, r8, #1
  404faa:	429d      	cmp	r5, r3
  404fac:	460e      	mov	r6, r1
  404fae:	4607      	mov	r7, r0
  404fb0:	6849      	ldr	r1, [r1, #4]
  404fb2:	dd04      	ble.n	404fbe <__lshift+0x2a>
  404fb4:	005b      	lsls	r3, r3, #1
  404fb6:	429d      	cmp	r5, r3
  404fb8:	f101 0101 	add.w	r1, r1, #1
  404fbc:	dcfa      	bgt.n	404fb4 <__lshift+0x20>
  404fbe:	4638      	mov	r0, r7
  404fc0:	f7ff fe3c 	bl	404c3c <_Balloc>
  404fc4:	2c00      	cmp	r4, #0
  404fc6:	f100 0314 	add.w	r3, r0, #20
  404fca:	dd06      	ble.n	404fda <__lshift+0x46>
  404fcc:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  404fd0:	2100      	movs	r1, #0
  404fd2:	f843 1b04 	str.w	r1, [r3], #4
  404fd6:	429a      	cmp	r2, r3
  404fd8:	d1fb      	bne.n	404fd2 <__lshift+0x3e>
  404fda:	6934      	ldr	r4, [r6, #16]
  404fdc:	f106 0114 	add.w	r1, r6, #20
  404fe0:	f019 091f 	ands.w	r9, r9, #31
  404fe4:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  404fe8:	d01d      	beq.n	405026 <__lshift+0x92>
  404fea:	f1c9 0c20 	rsb	ip, r9, #32
  404fee:	2200      	movs	r2, #0
  404ff0:	680c      	ldr	r4, [r1, #0]
  404ff2:	fa04 f409 	lsl.w	r4, r4, r9
  404ff6:	4314      	orrs	r4, r2
  404ff8:	f843 4b04 	str.w	r4, [r3], #4
  404ffc:	f851 2b04 	ldr.w	r2, [r1], #4
  405000:	458e      	cmp	lr, r1
  405002:	fa22 f20c 	lsr.w	r2, r2, ip
  405006:	d8f3      	bhi.n	404ff0 <__lshift+0x5c>
  405008:	601a      	str	r2, [r3, #0]
  40500a:	b10a      	cbz	r2, 405010 <__lshift+0x7c>
  40500c:	f108 0502 	add.w	r5, r8, #2
  405010:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  405012:	6872      	ldr	r2, [r6, #4]
  405014:	3d01      	subs	r5, #1
  405016:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  40501a:	6105      	str	r5, [r0, #16]
  40501c:	6031      	str	r1, [r6, #0]
  40501e:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  405022:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405026:	3b04      	subs	r3, #4
  405028:	f851 2b04 	ldr.w	r2, [r1], #4
  40502c:	f843 2f04 	str.w	r2, [r3, #4]!
  405030:	458e      	cmp	lr, r1
  405032:	d8f9      	bhi.n	405028 <__lshift+0x94>
  405034:	e7ec      	b.n	405010 <__lshift+0x7c>
  405036:	bf00      	nop

00405038 <__mcmp>:
  405038:	b430      	push	{r4, r5}
  40503a:	690b      	ldr	r3, [r1, #16]
  40503c:	4605      	mov	r5, r0
  40503e:	6900      	ldr	r0, [r0, #16]
  405040:	1ac0      	subs	r0, r0, r3
  405042:	d10f      	bne.n	405064 <__mcmp+0x2c>
  405044:	009b      	lsls	r3, r3, #2
  405046:	3514      	adds	r5, #20
  405048:	3114      	adds	r1, #20
  40504a:	4419      	add	r1, r3
  40504c:	442b      	add	r3, r5
  40504e:	e001      	b.n	405054 <__mcmp+0x1c>
  405050:	429d      	cmp	r5, r3
  405052:	d207      	bcs.n	405064 <__mcmp+0x2c>
  405054:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  405058:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  40505c:	4294      	cmp	r4, r2
  40505e:	d0f7      	beq.n	405050 <__mcmp+0x18>
  405060:	d302      	bcc.n	405068 <__mcmp+0x30>
  405062:	2001      	movs	r0, #1
  405064:	bc30      	pop	{r4, r5}
  405066:	4770      	bx	lr
  405068:	f04f 30ff 	mov.w	r0, #4294967295
  40506c:	e7fa      	b.n	405064 <__mcmp+0x2c>
  40506e:	bf00      	nop

00405070 <__mdiff>:
  405070:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405074:	690f      	ldr	r7, [r1, #16]
  405076:	460e      	mov	r6, r1
  405078:	6911      	ldr	r1, [r2, #16]
  40507a:	1a7f      	subs	r7, r7, r1
  40507c:	2f00      	cmp	r7, #0
  40507e:	4690      	mov	r8, r2
  405080:	d117      	bne.n	4050b2 <__mdiff+0x42>
  405082:	0089      	lsls	r1, r1, #2
  405084:	f106 0514 	add.w	r5, r6, #20
  405088:	f102 0e14 	add.w	lr, r2, #20
  40508c:	186b      	adds	r3, r5, r1
  40508e:	4471      	add	r1, lr
  405090:	e001      	b.n	405096 <__mdiff+0x26>
  405092:	429d      	cmp	r5, r3
  405094:	d25c      	bcs.n	405150 <__mdiff+0xe0>
  405096:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  40509a:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  40509e:	42a2      	cmp	r2, r4
  4050a0:	d0f7      	beq.n	405092 <__mdiff+0x22>
  4050a2:	d25e      	bcs.n	405162 <__mdiff+0xf2>
  4050a4:	4633      	mov	r3, r6
  4050a6:	462c      	mov	r4, r5
  4050a8:	4646      	mov	r6, r8
  4050aa:	4675      	mov	r5, lr
  4050ac:	4698      	mov	r8, r3
  4050ae:	2701      	movs	r7, #1
  4050b0:	e005      	b.n	4050be <__mdiff+0x4e>
  4050b2:	db58      	blt.n	405166 <__mdiff+0xf6>
  4050b4:	f106 0514 	add.w	r5, r6, #20
  4050b8:	f108 0414 	add.w	r4, r8, #20
  4050bc:	2700      	movs	r7, #0
  4050be:	6871      	ldr	r1, [r6, #4]
  4050c0:	f7ff fdbc 	bl	404c3c <_Balloc>
  4050c4:	f8d8 3010 	ldr.w	r3, [r8, #16]
  4050c8:	6936      	ldr	r6, [r6, #16]
  4050ca:	60c7      	str	r7, [r0, #12]
  4050cc:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  4050d0:	46a6      	mov	lr, r4
  4050d2:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  4050d6:	f100 0414 	add.w	r4, r0, #20
  4050da:	2300      	movs	r3, #0
  4050dc:	f85e 1b04 	ldr.w	r1, [lr], #4
  4050e0:	f855 8b04 	ldr.w	r8, [r5], #4
  4050e4:	b28a      	uxth	r2, r1
  4050e6:	fa13 f388 	uxtah	r3, r3, r8
  4050ea:	0c09      	lsrs	r1, r1, #16
  4050ec:	1a9a      	subs	r2, r3, r2
  4050ee:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  4050f2:	eb03 4322 	add.w	r3, r3, r2, asr #16
  4050f6:	b292      	uxth	r2, r2
  4050f8:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  4050fc:	45f4      	cmp	ip, lr
  4050fe:	f844 2b04 	str.w	r2, [r4], #4
  405102:	ea4f 4323 	mov.w	r3, r3, asr #16
  405106:	d8e9      	bhi.n	4050dc <__mdiff+0x6c>
  405108:	42af      	cmp	r7, r5
  40510a:	d917      	bls.n	40513c <__mdiff+0xcc>
  40510c:	46a4      	mov	ip, r4
  40510e:	46ae      	mov	lr, r5
  405110:	f85e 2b04 	ldr.w	r2, [lr], #4
  405114:	fa13 f382 	uxtah	r3, r3, r2
  405118:	1419      	asrs	r1, r3, #16
  40511a:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  40511e:	b29b      	uxth	r3, r3
  405120:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  405124:	4577      	cmp	r7, lr
  405126:	f84c 2b04 	str.w	r2, [ip], #4
  40512a:	ea4f 4321 	mov.w	r3, r1, asr #16
  40512e:	d8ef      	bhi.n	405110 <__mdiff+0xa0>
  405130:	43ed      	mvns	r5, r5
  405132:	442f      	add	r7, r5
  405134:	f027 0703 	bic.w	r7, r7, #3
  405138:	3704      	adds	r7, #4
  40513a:	443c      	add	r4, r7
  40513c:	3c04      	subs	r4, #4
  40513e:	b922      	cbnz	r2, 40514a <__mdiff+0xda>
  405140:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  405144:	3e01      	subs	r6, #1
  405146:	2b00      	cmp	r3, #0
  405148:	d0fa      	beq.n	405140 <__mdiff+0xd0>
  40514a:	6106      	str	r6, [r0, #16]
  40514c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405150:	2100      	movs	r1, #0
  405152:	f7ff fd73 	bl	404c3c <_Balloc>
  405156:	2201      	movs	r2, #1
  405158:	2300      	movs	r3, #0
  40515a:	6102      	str	r2, [r0, #16]
  40515c:	6143      	str	r3, [r0, #20]
  40515e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405162:	4674      	mov	r4, lr
  405164:	e7ab      	b.n	4050be <__mdiff+0x4e>
  405166:	4633      	mov	r3, r6
  405168:	f106 0414 	add.w	r4, r6, #20
  40516c:	f102 0514 	add.w	r5, r2, #20
  405170:	4616      	mov	r6, r2
  405172:	2701      	movs	r7, #1
  405174:	4698      	mov	r8, r3
  405176:	e7a2      	b.n	4050be <__mdiff+0x4e>

00405178 <__d2b>:
  405178:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40517c:	b082      	sub	sp, #8
  40517e:	2101      	movs	r1, #1
  405180:	461c      	mov	r4, r3
  405182:	f3c3 570a 	ubfx	r7, r3, #20, #11
  405186:	4615      	mov	r5, r2
  405188:	9e08      	ldr	r6, [sp, #32]
  40518a:	f7ff fd57 	bl	404c3c <_Balloc>
  40518e:	f3c4 0413 	ubfx	r4, r4, #0, #20
  405192:	4680      	mov	r8, r0
  405194:	b10f      	cbz	r7, 40519a <__d2b+0x22>
  405196:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  40519a:	9401      	str	r4, [sp, #4]
  40519c:	b31d      	cbz	r5, 4051e6 <__d2b+0x6e>
  40519e:	a802      	add	r0, sp, #8
  4051a0:	f840 5d08 	str.w	r5, [r0, #-8]!
  4051a4:	f7ff fdda 	bl	404d5c <__lo0bits>
  4051a8:	2800      	cmp	r0, #0
  4051aa:	d134      	bne.n	405216 <__d2b+0x9e>
  4051ac:	e89d 000c 	ldmia.w	sp, {r2, r3}
  4051b0:	f8c8 2014 	str.w	r2, [r8, #20]
  4051b4:	2b00      	cmp	r3, #0
  4051b6:	bf0c      	ite	eq
  4051b8:	2101      	moveq	r1, #1
  4051ba:	2102      	movne	r1, #2
  4051bc:	f8c8 3018 	str.w	r3, [r8, #24]
  4051c0:	f8c8 1010 	str.w	r1, [r8, #16]
  4051c4:	b9df      	cbnz	r7, 4051fe <__d2b+0x86>
  4051c6:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  4051ca:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  4051ce:	6030      	str	r0, [r6, #0]
  4051d0:	6918      	ldr	r0, [r3, #16]
  4051d2:	f7ff fda3 	bl	404d1c <__hi0bits>
  4051d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4051d8:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  4051dc:	6018      	str	r0, [r3, #0]
  4051de:	4640      	mov	r0, r8
  4051e0:	b002      	add	sp, #8
  4051e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4051e6:	a801      	add	r0, sp, #4
  4051e8:	f7ff fdb8 	bl	404d5c <__lo0bits>
  4051ec:	9b01      	ldr	r3, [sp, #4]
  4051ee:	f8c8 3014 	str.w	r3, [r8, #20]
  4051f2:	2101      	movs	r1, #1
  4051f4:	3020      	adds	r0, #32
  4051f6:	f8c8 1010 	str.w	r1, [r8, #16]
  4051fa:	2f00      	cmp	r7, #0
  4051fc:	d0e3      	beq.n	4051c6 <__d2b+0x4e>
  4051fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
  405200:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  405204:	4407      	add	r7, r0
  405206:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  40520a:	6037      	str	r7, [r6, #0]
  40520c:	6018      	str	r0, [r3, #0]
  40520e:	4640      	mov	r0, r8
  405210:	b002      	add	sp, #8
  405212:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405216:	e89d 000a 	ldmia.w	sp, {r1, r3}
  40521a:	f1c0 0220 	rsb	r2, r0, #32
  40521e:	fa03 f202 	lsl.w	r2, r3, r2
  405222:	430a      	orrs	r2, r1
  405224:	40c3      	lsrs	r3, r0
  405226:	9301      	str	r3, [sp, #4]
  405228:	f8c8 2014 	str.w	r2, [r8, #20]
  40522c:	e7c2      	b.n	4051b4 <__d2b+0x3c>
  40522e:	bf00      	nop

00405230 <_sbrk_r>:
  405230:	b538      	push	{r3, r4, r5, lr}
  405232:	4c07      	ldr	r4, [pc, #28]	; (405250 <_sbrk_r+0x20>)
  405234:	2300      	movs	r3, #0
  405236:	4605      	mov	r5, r0
  405238:	4608      	mov	r0, r1
  40523a:	6023      	str	r3, [r4, #0]
  40523c:	f7fc f934 	bl	4014a8 <_sbrk>
  405240:	1c43      	adds	r3, r0, #1
  405242:	d000      	beq.n	405246 <_sbrk_r+0x16>
  405244:	bd38      	pop	{r3, r4, r5, pc}
  405246:	6823      	ldr	r3, [r4, #0]
  405248:	2b00      	cmp	r3, #0
  40524a:	d0fb      	beq.n	405244 <_sbrk_r+0x14>
  40524c:	602b      	str	r3, [r5, #0]
  40524e:	bd38      	pop	{r3, r4, r5, pc}
  405250:	20400d54 	.word	0x20400d54
	...

00405280 <strlen>:
  405280:	f890 f000 	pld	[r0]
  405284:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  405288:	f020 0107 	bic.w	r1, r0, #7
  40528c:	f06f 0c00 	mvn.w	ip, #0
  405290:	f010 0407 	ands.w	r4, r0, #7
  405294:	f891 f020 	pld	[r1, #32]
  405298:	f040 8049 	bne.w	40532e <strlen+0xae>
  40529c:	f04f 0400 	mov.w	r4, #0
  4052a0:	f06f 0007 	mvn.w	r0, #7
  4052a4:	e9d1 2300 	ldrd	r2, r3, [r1]
  4052a8:	f891 f040 	pld	[r1, #64]	; 0x40
  4052ac:	f100 0008 	add.w	r0, r0, #8
  4052b0:	fa82 f24c 	uadd8	r2, r2, ip
  4052b4:	faa4 f28c 	sel	r2, r4, ip
  4052b8:	fa83 f34c 	uadd8	r3, r3, ip
  4052bc:	faa2 f38c 	sel	r3, r2, ip
  4052c0:	bb4b      	cbnz	r3, 405316 <strlen+0x96>
  4052c2:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  4052c6:	fa82 f24c 	uadd8	r2, r2, ip
  4052ca:	f100 0008 	add.w	r0, r0, #8
  4052ce:	faa4 f28c 	sel	r2, r4, ip
  4052d2:	fa83 f34c 	uadd8	r3, r3, ip
  4052d6:	faa2 f38c 	sel	r3, r2, ip
  4052da:	b9e3      	cbnz	r3, 405316 <strlen+0x96>
  4052dc:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  4052e0:	fa82 f24c 	uadd8	r2, r2, ip
  4052e4:	f100 0008 	add.w	r0, r0, #8
  4052e8:	faa4 f28c 	sel	r2, r4, ip
  4052ec:	fa83 f34c 	uadd8	r3, r3, ip
  4052f0:	faa2 f38c 	sel	r3, r2, ip
  4052f4:	b97b      	cbnz	r3, 405316 <strlen+0x96>
  4052f6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  4052fa:	f101 0120 	add.w	r1, r1, #32
  4052fe:	fa82 f24c 	uadd8	r2, r2, ip
  405302:	f100 0008 	add.w	r0, r0, #8
  405306:	faa4 f28c 	sel	r2, r4, ip
  40530a:	fa83 f34c 	uadd8	r3, r3, ip
  40530e:	faa2 f38c 	sel	r3, r2, ip
  405312:	2b00      	cmp	r3, #0
  405314:	d0c6      	beq.n	4052a4 <strlen+0x24>
  405316:	2a00      	cmp	r2, #0
  405318:	bf04      	itt	eq
  40531a:	3004      	addeq	r0, #4
  40531c:	461a      	moveq	r2, r3
  40531e:	ba12      	rev	r2, r2
  405320:	fab2 f282 	clz	r2, r2
  405324:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  405328:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  40532c:	4770      	bx	lr
  40532e:	e9d1 2300 	ldrd	r2, r3, [r1]
  405332:	f004 0503 	and.w	r5, r4, #3
  405336:	f1c4 0000 	rsb	r0, r4, #0
  40533a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  40533e:	f014 0f04 	tst.w	r4, #4
  405342:	f891 f040 	pld	[r1, #64]	; 0x40
  405346:	fa0c f505 	lsl.w	r5, ip, r5
  40534a:	ea62 0205 	orn	r2, r2, r5
  40534e:	bf1c      	itt	ne
  405350:	ea63 0305 	ornne	r3, r3, r5
  405354:	4662      	movne	r2, ip
  405356:	f04f 0400 	mov.w	r4, #0
  40535a:	e7a9      	b.n	4052b0 <strlen+0x30>

0040535c <__ssprint_r>:
  40535c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405360:	6893      	ldr	r3, [r2, #8]
  405362:	b083      	sub	sp, #12
  405364:	4690      	mov	r8, r2
  405366:	2b00      	cmp	r3, #0
  405368:	d070      	beq.n	40544c <__ssprint_r+0xf0>
  40536a:	4682      	mov	sl, r0
  40536c:	460c      	mov	r4, r1
  40536e:	6817      	ldr	r7, [r2, #0]
  405370:	688d      	ldr	r5, [r1, #8]
  405372:	6808      	ldr	r0, [r1, #0]
  405374:	e042      	b.n	4053fc <__ssprint_r+0xa0>
  405376:	89a3      	ldrh	r3, [r4, #12]
  405378:	f413 6f90 	tst.w	r3, #1152	; 0x480
  40537c:	d02e      	beq.n	4053dc <__ssprint_r+0x80>
  40537e:	6965      	ldr	r5, [r4, #20]
  405380:	6921      	ldr	r1, [r4, #16]
  405382:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  405386:	eba0 0b01 	sub.w	fp, r0, r1
  40538a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  40538e:	f10b 0001 	add.w	r0, fp, #1
  405392:	106d      	asrs	r5, r5, #1
  405394:	4430      	add	r0, r6
  405396:	42a8      	cmp	r0, r5
  405398:	462a      	mov	r2, r5
  40539a:	bf84      	itt	hi
  40539c:	4605      	movhi	r5, r0
  40539e:	462a      	movhi	r2, r5
  4053a0:	055b      	lsls	r3, r3, #21
  4053a2:	d538      	bpl.n	405416 <__ssprint_r+0xba>
  4053a4:	4611      	mov	r1, r2
  4053a6:	4650      	mov	r0, sl
  4053a8:	f7ff f89c 	bl	4044e4 <_malloc_r>
  4053ac:	2800      	cmp	r0, #0
  4053ae:	d03c      	beq.n	40542a <__ssprint_r+0xce>
  4053b0:	465a      	mov	r2, fp
  4053b2:	6921      	ldr	r1, [r4, #16]
  4053b4:	9001      	str	r0, [sp, #4]
  4053b6:	f7ff fb9b 	bl	404af0 <memcpy>
  4053ba:	89a2      	ldrh	r2, [r4, #12]
  4053bc:	9b01      	ldr	r3, [sp, #4]
  4053be:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  4053c2:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  4053c6:	81a2      	strh	r2, [r4, #12]
  4053c8:	eba5 020b 	sub.w	r2, r5, fp
  4053cc:	eb03 000b 	add.w	r0, r3, fp
  4053d0:	6165      	str	r5, [r4, #20]
  4053d2:	6123      	str	r3, [r4, #16]
  4053d4:	6020      	str	r0, [r4, #0]
  4053d6:	60a2      	str	r2, [r4, #8]
  4053d8:	4635      	mov	r5, r6
  4053da:	46b3      	mov	fp, r6
  4053dc:	465a      	mov	r2, fp
  4053de:	4649      	mov	r1, r9
  4053e0:	f000 fa18 	bl	405814 <memmove>
  4053e4:	f8d8 3008 	ldr.w	r3, [r8, #8]
  4053e8:	68a2      	ldr	r2, [r4, #8]
  4053ea:	6820      	ldr	r0, [r4, #0]
  4053ec:	1b55      	subs	r5, r2, r5
  4053ee:	4458      	add	r0, fp
  4053f0:	1b9e      	subs	r6, r3, r6
  4053f2:	60a5      	str	r5, [r4, #8]
  4053f4:	6020      	str	r0, [r4, #0]
  4053f6:	f8c8 6008 	str.w	r6, [r8, #8]
  4053fa:	b33e      	cbz	r6, 40544c <__ssprint_r+0xf0>
  4053fc:	687e      	ldr	r6, [r7, #4]
  4053fe:	463b      	mov	r3, r7
  405400:	3708      	adds	r7, #8
  405402:	2e00      	cmp	r6, #0
  405404:	d0fa      	beq.n	4053fc <__ssprint_r+0xa0>
  405406:	42ae      	cmp	r6, r5
  405408:	f8d3 9000 	ldr.w	r9, [r3]
  40540c:	46ab      	mov	fp, r5
  40540e:	d2b2      	bcs.n	405376 <__ssprint_r+0x1a>
  405410:	4635      	mov	r5, r6
  405412:	46b3      	mov	fp, r6
  405414:	e7e2      	b.n	4053dc <__ssprint_r+0x80>
  405416:	4650      	mov	r0, sl
  405418:	f000 fa60 	bl	4058dc <_realloc_r>
  40541c:	4603      	mov	r3, r0
  40541e:	2800      	cmp	r0, #0
  405420:	d1d2      	bne.n	4053c8 <__ssprint_r+0x6c>
  405422:	6921      	ldr	r1, [r4, #16]
  405424:	4650      	mov	r0, sl
  405426:	f000 f8f9 	bl	40561c <_free_r>
  40542a:	230c      	movs	r3, #12
  40542c:	f8ca 3000 	str.w	r3, [sl]
  405430:	89a3      	ldrh	r3, [r4, #12]
  405432:	2200      	movs	r2, #0
  405434:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  405438:	f04f 30ff 	mov.w	r0, #4294967295
  40543c:	81a3      	strh	r3, [r4, #12]
  40543e:	f8c8 2008 	str.w	r2, [r8, #8]
  405442:	f8c8 2004 	str.w	r2, [r8, #4]
  405446:	b003      	add	sp, #12
  405448:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40544c:	2000      	movs	r0, #0
  40544e:	f8c8 0004 	str.w	r0, [r8, #4]
  405452:	b003      	add	sp, #12
  405454:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00405458 <__register_exitproc>:
  405458:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40545c:	4d2c      	ldr	r5, [pc, #176]	; (405510 <__register_exitproc+0xb8>)
  40545e:	4606      	mov	r6, r0
  405460:	6828      	ldr	r0, [r5, #0]
  405462:	4698      	mov	r8, r3
  405464:	460f      	mov	r7, r1
  405466:	4691      	mov	r9, r2
  405468:	f7ff f838 	bl	4044dc <__retarget_lock_acquire_recursive>
  40546c:	4b29      	ldr	r3, [pc, #164]	; (405514 <__register_exitproc+0xbc>)
  40546e:	681c      	ldr	r4, [r3, #0]
  405470:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  405474:	2b00      	cmp	r3, #0
  405476:	d03e      	beq.n	4054f6 <__register_exitproc+0x9e>
  405478:	685a      	ldr	r2, [r3, #4]
  40547a:	2a1f      	cmp	r2, #31
  40547c:	dc1c      	bgt.n	4054b8 <__register_exitproc+0x60>
  40547e:	f102 0e01 	add.w	lr, r2, #1
  405482:	b176      	cbz	r6, 4054a2 <__register_exitproc+0x4a>
  405484:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  405488:	2401      	movs	r4, #1
  40548a:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  40548e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  405492:	4094      	lsls	r4, r2
  405494:	4320      	orrs	r0, r4
  405496:	2e02      	cmp	r6, #2
  405498:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  40549c:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  4054a0:	d023      	beq.n	4054ea <__register_exitproc+0x92>
  4054a2:	3202      	adds	r2, #2
  4054a4:	f8c3 e004 	str.w	lr, [r3, #4]
  4054a8:	6828      	ldr	r0, [r5, #0]
  4054aa:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  4054ae:	f7ff f817 	bl	4044e0 <__retarget_lock_release_recursive>
  4054b2:	2000      	movs	r0, #0
  4054b4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4054b8:	4b17      	ldr	r3, [pc, #92]	; (405518 <__register_exitproc+0xc0>)
  4054ba:	b30b      	cbz	r3, 405500 <__register_exitproc+0xa8>
  4054bc:	f44f 70c8 	mov.w	r0, #400	; 0x190
  4054c0:	f3af 8000 	nop.w
  4054c4:	4603      	mov	r3, r0
  4054c6:	b1d8      	cbz	r0, 405500 <__register_exitproc+0xa8>
  4054c8:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  4054cc:	6002      	str	r2, [r0, #0]
  4054ce:	2100      	movs	r1, #0
  4054d0:	6041      	str	r1, [r0, #4]
  4054d2:	460a      	mov	r2, r1
  4054d4:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  4054d8:	f04f 0e01 	mov.w	lr, #1
  4054dc:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  4054e0:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  4054e4:	2e00      	cmp	r6, #0
  4054e6:	d0dc      	beq.n	4054a2 <__register_exitproc+0x4a>
  4054e8:	e7cc      	b.n	405484 <__register_exitproc+0x2c>
  4054ea:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  4054ee:	430c      	orrs	r4, r1
  4054f0:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  4054f4:	e7d5      	b.n	4054a2 <__register_exitproc+0x4a>
  4054f6:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  4054fa:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  4054fe:	e7bb      	b.n	405478 <__register_exitproc+0x20>
  405500:	6828      	ldr	r0, [r5, #0]
  405502:	f7fe ffed 	bl	4044e0 <__retarget_lock_release_recursive>
  405506:	f04f 30ff 	mov.w	r0, #4294967295
  40550a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40550e:	bf00      	nop
  405510:	20400450 	.word	0x20400450
  405514:	00406b4c 	.word	0x00406b4c
  405518:	00000000 	.word	0x00000000

0040551c <_calloc_r>:
  40551c:	b510      	push	{r4, lr}
  40551e:	fb02 f101 	mul.w	r1, r2, r1
  405522:	f7fe ffdf 	bl	4044e4 <_malloc_r>
  405526:	4604      	mov	r4, r0
  405528:	b1d8      	cbz	r0, 405562 <_calloc_r+0x46>
  40552a:	f850 2c04 	ldr.w	r2, [r0, #-4]
  40552e:	f022 0203 	bic.w	r2, r2, #3
  405532:	3a04      	subs	r2, #4
  405534:	2a24      	cmp	r2, #36	; 0x24
  405536:	d818      	bhi.n	40556a <_calloc_r+0x4e>
  405538:	2a13      	cmp	r2, #19
  40553a:	d914      	bls.n	405566 <_calloc_r+0x4a>
  40553c:	2300      	movs	r3, #0
  40553e:	2a1b      	cmp	r2, #27
  405540:	6003      	str	r3, [r0, #0]
  405542:	6043      	str	r3, [r0, #4]
  405544:	d916      	bls.n	405574 <_calloc_r+0x58>
  405546:	2a24      	cmp	r2, #36	; 0x24
  405548:	6083      	str	r3, [r0, #8]
  40554a:	60c3      	str	r3, [r0, #12]
  40554c:	bf11      	iteee	ne
  40554e:	f100 0210 	addne.w	r2, r0, #16
  405552:	6103      	streq	r3, [r0, #16]
  405554:	6143      	streq	r3, [r0, #20]
  405556:	f100 0218 	addeq.w	r2, r0, #24
  40555a:	2300      	movs	r3, #0
  40555c:	6013      	str	r3, [r2, #0]
  40555e:	6053      	str	r3, [r2, #4]
  405560:	6093      	str	r3, [r2, #8]
  405562:	4620      	mov	r0, r4
  405564:	bd10      	pop	{r4, pc}
  405566:	4602      	mov	r2, r0
  405568:	e7f7      	b.n	40555a <_calloc_r+0x3e>
  40556a:	2100      	movs	r1, #0
  40556c:	f7fc fd1e 	bl	401fac <memset>
  405570:	4620      	mov	r0, r4
  405572:	bd10      	pop	{r4, pc}
  405574:	f100 0208 	add.w	r2, r0, #8
  405578:	e7ef      	b.n	40555a <_calloc_r+0x3e>
  40557a:	bf00      	nop

0040557c <_malloc_trim_r>:
  40557c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40557e:	4f24      	ldr	r7, [pc, #144]	; (405610 <_malloc_trim_r+0x94>)
  405580:	460c      	mov	r4, r1
  405582:	4606      	mov	r6, r0
  405584:	f7ff fb4e 	bl	404c24 <__malloc_lock>
  405588:	68bb      	ldr	r3, [r7, #8]
  40558a:	685d      	ldr	r5, [r3, #4]
  40558c:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  405590:	310f      	adds	r1, #15
  405592:	f025 0503 	bic.w	r5, r5, #3
  405596:	4429      	add	r1, r5
  405598:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  40559c:	f021 010f 	bic.w	r1, r1, #15
  4055a0:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  4055a4:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  4055a8:	db07      	blt.n	4055ba <_malloc_trim_r+0x3e>
  4055aa:	2100      	movs	r1, #0
  4055ac:	4630      	mov	r0, r6
  4055ae:	f7ff fe3f 	bl	405230 <_sbrk_r>
  4055b2:	68bb      	ldr	r3, [r7, #8]
  4055b4:	442b      	add	r3, r5
  4055b6:	4298      	cmp	r0, r3
  4055b8:	d004      	beq.n	4055c4 <_malloc_trim_r+0x48>
  4055ba:	4630      	mov	r0, r6
  4055bc:	f7ff fb38 	bl	404c30 <__malloc_unlock>
  4055c0:	2000      	movs	r0, #0
  4055c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4055c4:	4261      	negs	r1, r4
  4055c6:	4630      	mov	r0, r6
  4055c8:	f7ff fe32 	bl	405230 <_sbrk_r>
  4055cc:	3001      	adds	r0, #1
  4055ce:	d00d      	beq.n	4055ec <_malloc_trim_r+0x70>
  4055d0:	4b10      	ldr	r3, [pc, #64]	; (405614 <_malloc_trim_r+0x98>)
  4055d2:	68ba      	ldr	r2, [r7, #8]
  4055d4:	6819      	ldr	r1, [r3, #0]
  4055d6:	1b2d      	subs	r5, r5, r4
  4055d8:	f045 0501 	orr.w	r5, r5, #1
  4055dc:	4630      	mov	r0, r6
  4055de:	1b09      	subs	r1, r1, r4
  4055e0:	6055      	str	r5, [r2, #4]
  4055e2:	6019      	str	r1, [r3, #0]
  4055e4:	f7ff fb24 	bl	404c30 <__malloc_unlock>
  4055e8:	2001      	movs	r0, #1
  4055ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4055ec:	2100      	movs	r1, #0
  4055ee:	4630      	mov	r0, r6
  4055f0:	f7ff fe1e 	bl	405230 <_sbrk_r>
  4055f4:	68ba      	ldr	r2, [r7, #8]
  4055f6:	1a83      	subs	r3, r0, r2
  4055f8:	2b0f      	cmp	r3, #15
  4055fa:	ddde      	ble.n	4055ba <_malloc_trim_r+0x3e>
  4055fc:	4c06      	ldr	r4, [pc, #24]	; (405618 <_malloc_trim_r+0x9c>)
  4055fe:	4905      	ldr	r1, [pc, #20]	; (405614 <_malloc_trim_r+0x98>)
  405600:	6824      	ldr	r4, [r4, #0]
  405602:	f043 0301 	orr.w	r3, r3, #1
  405606:	1b00      	subs	r0, r0, r4
  405608:	6053      	str	r3, [r2, #4]
  40560a:	6008      	str	r0, [r1, #0]
  40560c:	e7d5      	b.n	4055ba <_malloc_trim_r+0x3e>
  40560e:	bf00      	nop
  405610:	20400454 	.word	0x20400454
  405614:	20400c7c 	.word	0x20400c7c
  405618:	2040085c 	.word	0x2040085c

0040561c <_free_r>:
  40561c:	2900      	cmp	r1, #0
  40561e:	d044      	beq.n	4056aa <_free_r+0x8e>
  405620:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405624:	460d      	mov	r5, r1
  405626:	4680      	mov	r8, r0
  405628:	f7ff fafc 	bl	404c24 <__malloc_lock>
  40562c:	f855 7c04 	ldr.w	r7, [r5, #-4]
  405630:	4969      	ldr	r1, [pc, #420]	; (4057d8 <_free_r+0x1bc>)
  405632:	f027 0301 	bic.w	r3, r7, #1
  405636:	f1a5 0408 	sub.w	r4, r5, #8
  40563a:	18e2      	adds	r2, r4, r3
  40563c:	688e      	ldr	r6, [r1, #8]
  40563e:	6850      	ldr	r0, [r2, #4]
  405640:	42b2      	cmp	r2, r6
  405642:	f020 0003 	bic.w	r0, r0, #3
  405646:	d05e      	beq.n	405706 <_free_r+0xea>
  405648:	07fe      	lsls	r6, r7, #31
  40564a:	6050      	str	r0, [r2, #4]
  40564c:	d40b      	bmi.n	405666 <_free_r+0x4a>
  40564e:	f855 7c08 	ldr.w	r7, [r5, #-8]
  405652:	1be4      	subs	r4, r4, r7
  405654:	f101 0e08 	add.w	lr, r1, #8
  405658:	68a5      	ldr	r5, [r4, #8]
  40565a:	4575      	cmp	r5, lr
  40565c:	443b      	add	r3, r7
  40565e:	d06d      	beq.n	40573c <_free_r+0x120>
  405660:	68e7      	ldr	r7, [r4, #12]
  405662:	60ef      	str	r7, [r5, #12]
  405664:	60bd      	str	r5, [r7, #8]
  405666:	1815      	adds	r5, r2, r0
  405668:	686d      	ldr	r5, [r5, #4]
  40566a:	07ed      	lsls	r5, r5, #31
  40566c:	d53e      	bpl.n	4056ec <_free_r+0xd0>
  40566e:	f043 0201 	orr.w	r2, r3, #1
  405672:	6062      	str	r2, [r4, #4]
  405674:	50e3      	str	r3, [r4, r3]
  405676:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40567a:	d217      	bcs.n	4056ac <_free_r+0x90>
  40567c:	08db      	lsrs	r3, r3, #3
  40567e:	1c58      	adds	r0, r3, #1
  405680:	109a      	asrs	r2, r3, #2
  405682:	684d      	ldr	r5, [r1, #4]
  405684:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  405688:	60a7      	str	r7, [r4, #8]
  40568a:	2301      	movs	r3, #1
  40568c:	4093      	lsls	r3, r2
  40568e:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  405692:	432b      	orrs	r3, r5
  405694:	3a08      	subs	r2, #8
  405696:	60e2      	str	r2, [r4, #12]
  405698:	604b      	str	r3, [r1, #4]
  40569a:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  40569e:	60fc      	str	r4, [r7, #12]
  4056a0:	4640      	mov	r0, r8
  4056a2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4056a6:	f7ff bac3 	b.w	404c30 <__malloc_unlock>
  4056aa:	4770      	bx	lr
  4056ac:	0a5a      	lsrs	r2, r3, #9
  4056ae:	2a04      	cmp	r2, #4
  4056b0:	d852      	bhi.n	405758 <_free_r+0x13c>
  4056b2:	099a      	lsrs	r2, r3, #6
  4056b4:	f102 0739 	add.w	r7, r2, #57	; 0x39
  4056b8:	00ff      	lsls	r7, r7, #3
  4056ba:	f102 0538 	add.w	r5, r2, #56	; 0x38
  4056be:	19c8      	adds	r0, r1, r7
  4056c0:	59ca      	ldr	r2, [r1, r7]
  4056c2:	3808      	subs	r0, #8
  4056c4:	4290      	cmp	r0, r2
  4056c6:	d04f      	beq.n	405768 <_free_r+0x14c>
  4056c8:	6851      	ldr	r1, [r2, #4]
  4056ca:	f021 0103 	bic.w	r1, r1, #3
  4056ce:	428b      	cmp	r3, r1
  4056d0:	d232      	bcs.n	405738 <_free_r+0x11c>
  4056d2:	6892      	ldr	r2, [r2, #8]
  4056d4:	4290      	cmp	r0, r2
  4056d6:	d1f7      	bne.n	4056c8 <_free_r+0xac>
  4056d8:	68c3      	ldr	r3, [r0, #12]
  4056da:	60a0      	str	r0, [r4, #8]
  4056dc:	60e3      	str	r3, [r4, #12]
  4056de:	609c      	str	r4, [r3, #8]
  4056e0:	60c4      	str	r4, [r0, #12]
  4056e2:	4640      	mov	r0, r8
  4056e4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4056e8:	f7ff baa2 	b.w	404c30 <__malloc_unlock>
  4056ec:	6895      	ldr	r5, [r2, #8]
  4056ee:	4f3b      	ldr	r7, [pc, #236]	; (4057dc <_free_r+0x1c0>)
  4056f0:	42bd      	cmp	r5, r7
  4056f2:	4403      	add	r3, r0
  4056f4:	d040      	beq.n	405778 <_free_r+0x15c>
  4056f6:	68d0      	ldr	r0, [r2, #12]
  4056f8:	60e8      	str	r0, [r5, #12]
  4056fa:	f043 0201 	orr.w	r2, r3, #1
  4056fe:	6085      	str	r5, [r0, #8]
  405700:	6062      	str	r2, [r4, #4]
  405702:	50e3      	str	r3, [r4, r3]
  405704:	e7b7      	b.n	405676 <_free_r+0x5a>
  405706:	07ff      	lsls	r7, r7, #31
  405708:	4403      	add	r3, r0
  40570a:	d407      	bmi.n	40571c <_free_r+0x100>
  40570c:	f855 2c08 	ldr.w	r2, [r5, #-8]
  405710:	1aa4      	subs	r4, r4, r2
  405712:	4413      	add	r3, r2
  405714:	68a0      	ldr	r0, [r4, #8]
  405716:	68e2      	ldr	r2, [r4, #12]
  405718:	60c2      	str	r2, [r0, #12]
  40571a:	6090      	str	r0, [r2, #8]
  40571c:	4a30      	ldr	r2, [pc, #192]	; (4057e0 <_free_r+0x1c4>)
  40571e:	6812      	ldr	r2, [r2, #0]
  405720:	f043 0001 	orr.w	r0, r3, #1
  405724:	4293      	cmp	r3, r2
  405726:	6060      	str	r0, [r4, #4]
  405728:	608c      	str	r4, [r1, #8]
  40572a:	d3b9      	bcc.n	4056a0 <_free_r+0x84>
  40572c:	4b2d      	ldr	r3, [pc, #180]	; (4057e4 <_free_r+0x1c8>)
  40572e:	4640      	mov	r0, r8
  405730:	6819      	ldr	r1, [r3, #0]
  405732:	f7ff ff23 	bl	40557c <_malloc_trim_r>
  405736:	e7b3      	b.n	4056a0 <_free_r+0x84>
  405738:	4610      	mov	r0, r2
  40573a:	e7cd      	b.n	4056d8 <_free_r+0xbc>
  40573c:	1811      	adds	r1, r2, r0
  40573e:	6849      	ldr	r1, [r1, #4]
  405740:	07c9      	lsls	r1, r1, #31
  405742:	d444      	bmi.n	4057ce <_free_r+0x1b2>
  405744:	6891      	ldr	r1, [r2, #8]
  405746:	68d2      	ldr	r2, [r2, #12]
  405748:	60ca      	str	r2, [r1, #12]
  40574a:	4403      	add	r3, r0
  40574c:	f043 0001 	orr.w	r0, r3, #1
  405750:	6091      	str	r1, [r2, #8]
  405752:	6060      	str	r0, [r4, #4]
  405754:	50e3      	str	r3, [r4, r3]
  405756:	e7a3      	b.n	4056a0 <_free_r+0x84>
  405758:	2a14      	cmp	r2, #20
  40575a:	d816      	bhi.n	40578a <_free_r+0x16e>
  40575c:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  405760:	00ff      	lsls	r7, r7, #3
  405762:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  405766:	e7aa      	b.n	4056be <_free_r+0xa2>
  405768:	10aa      	asrs	r2, r5, #2
  40576a:	2301      	movs	r3, #1
  40576c:	684d      	ldr	r5, [r1, #4]
  40576e:	4093      	lsls	r3, r2
  405770:	432b      	orrs	r3, r5
  405772:	604b      	str	r3, [r1, #4]
  405774:	4603      	mov	r3, r0
  405776:	e7b0      	b.n	4056da <_free_r+0xbe>
  405778:	f043 0201 	orr.w	r2, r3, #1
  40577c:	614c      	str	r4, [r1, #20]
  40577e:	610c      	str	r4, [r1, #16]
  405780:	60e5      	str	r5, [r4, #12]
  405782:	60a5      	str	r5, [r4, #8]
  405784:	6062      	str	r2, [r4, #4]
  405786:	50e3      	str	r3, [r4, r3]
  405788:	e78a      	b.n	4056a0 <_free_r+0x84>
  40578a:	2a54      	cmp	r2, #84	; 0x54
  40578c:	d806      	bhi.n	40579c <_free_r+0x180>
  40578e:	0b1a      	lsrs	r2, r3, #12
  405790:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  405794:	00ff      	lsls	r7, r7, #3
  405796:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  40579a:	e790      	b.n	4056be <_free_r+0xa2>
  40579c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4057a0:	d806      	bhi.n	4057b0 <_free_r+0x194>
  4057a2:	0bda      	lsrs	r2, r3, #15
  4057a4:	f102 0778 	add.w	r7, r2, #120	; 0x78
  4057a8:	00ff      	lsls	r7, r7, #3
  4057aa:	f102 0577 	add.w	r5, r2, #119	; 0x77
  4057ae:	e786      	b.n	4056be <_free_r+0xa2>
  4057b0:	f240 5054 	movw	r0, #1364	; 0x554
  4057b4:	4282      	cmp	r2, r0
  4057b6:	d806      	bhi.n	4057c6 <_free_r+0x1aa>
  4057b8:	0c9a      	lsrs	r2, r3, #18
  4057ba:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  4057be:	00ff      	lsls	r7, r7, #3
  4057c0:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  4057c4:	e77b      	b.n	4056be <_free_r+0xa2>
  4057c6:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  4057ca:	257e      	movs	r5, #126	; 0x7e
  4057cc:	e777      	b.n	4056be <_free_r+0xa2>
  4057ce:	f043 0101 	orr.w	r1, r3, #1
  4057d2:	6061      	str	r1, [r4, #4]
  4057d4:	6013      	str	r3, [r2, #0]
  4057d6:	e763      	b.n	4056a0 <_free_r+0x84>
  4057d8:	20400454 	.word	0x20400454
  4057dc:	2040045c 	.word	0x2040045c
  4057e0:	20400860 	.word	0x20400860
  4057e4:	20400cac 	.word	0x20400cac

004057e8 <__ascii_mbtowc>:
  4057e8:	b082      	sub	sp, #8
  4057ea:	b149      	cbz	r1, 405800 <__ascii_mbtowc+0x18>
  4057ec:	b15a      	cbz	r2, 405806 <__ascii_mbtowc+0x1e>
  4057ee:	b16b      	cbz	r3, 40580c <__ascii_mbtowc+0x24>
  4057f0:	7813      	ldrb	r3, [r2, #0]
  4057f2:	600b      	str	r3, [r1, #0]
  4057f4:	7812      	ldrb	r2, [r2, #0]
  4057f6:	1c10      	adds	r0, r2, #0
  4057f8:	bf18      	it	ne
  4057fa:	2001      	movne	r0, #1
  4057fc:	b002      	add	sp, #8
  4057fe:	4770      	bx	lr
  405800:	a901      	add	r1, sp, #4
  405802:	2a00      	cmp	r2, #0
  405804:	d1f3      	bne.n	4057ee <__ascii_mbtowc+0x6>
  405806:	4610      	mov	r0, r2
  405808:	b002      	add	sp, #8
  40580a:	4770      	bx	lr
  40580c:	f06f 0001 	mvn.w	r0, #1
  405810:	e7f4      	b.n	4057fc <__ascii_mbtowc+0x14>
  405812:	bf00      	nop

00405814 <memmove>:
  405814:	4288      	cmp	r0, r1
  405816:	b5f0      	push	{r4, r5, r6, r7, lr}
  405818:	d90d      	bls.n	405836 <memmove+0x22>
  40581a:	188b      	adds	r3, r1, r2
  40581c:	4298      	cmp	r0, r3
  40581e:	d20a      	bcs.n	405836 <memmove+0x22>
  405820:	1884      	adds	r4, r0, r2
  405822:	2a00      	cmp	r2, #0
  405824:	d051      	beq.n	4058ca <memmove+0xb6>
  405826:	4622      	mov	r2, r4
  405828:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  40582c:	f802 4d01 	strb.w	r4, [r2, #-1]!
  405830:	4299      	cmp	r1, r3
  405832:	d1f9      	bne.n	405828 <memmove+0x14>
  405834:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405836:	2a0f      	cmp	r2, #15
  405838:	d948      	bls.n	4058cc <memmove+0xb8>
  40583a:	ea41 0300 	orr.w	r3, r1, r0
  40583e:	079b      	lsls	r3, r3, #30
  405840:	d146      	bne.n	4058d0 <memmove+0xbc>
  405842:	f100 0410 	add.w	r4, r0, #16
  405846:	f101 0310 	add.w	r3, r1, #16
  40584a:	4615      	mov	r5, r2
  40584c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  405850:	f844 6c10 	str.w	r6, [r4, #-16]
  405854:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  405858:	f844 6c0c 	str.w	r6, [r4, #-12]
  40585c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  405860:	f844 6c08 	str.w	r6, [r4, #-8]
  405864:	3d10      	subs	r5, #16
  405866:	f853 6c04 	ldr.w	r6, [r3, #-4]
  40586a:	f844 6c04 	str.w	r6, [r4, #-4]
  40586e:	2d0f      	cmp	r5, #15
  405870:	f103 0310 	add.w	r3, r3, #16
  405874:	f104 0410 	add.w	r4, r4, #16
  405878:	d8e8      	bhi.n	40584c <memmove+0x38>
  40587a:	f1a2 0310 	sub.w	r3, r2, #16
  40587e:	f023 030f 	bic.w	r3, r3, #15
  405882:	f002 0e0f 	and.w	lr, r2, #15
  405886:	3310      	adds	r3, #16
  405888:	f1be 0f03 	cmp.w	lr, #3
  40588c:	4419      	add	r1, r3
  40588e:	4403      	add	r3, r0
  405890:	d921      	bls.n	4058d6 <memmove+0xc2>
  405892:	1f1e      	subs	r6, r3, #4
  405894:	460d      	mov	r5, r1
  405896:	4674      	mov	r4, lr
  405898:	3c04      	subs	r4, #4
  40589a:	f855 7b04 	ldr.w	r7, [r5], #4
  40589e:	f846 7f04 	str.w	r7, [r6, #4]!
  4058a2:	2c03      	cmp	r4, #3
  4058a4:	d8f8      	bhi.n	405898 <memmove+0x84>
  4058a6:	f1ae 0404 	sub.w	r4, lr, #4
  4058aa:	f024 0403 	bic.w	r4, r4, #3
  4058ae:	3404      	adds	r4, #4
  4058b0:	4421      	add	r1, r4
  4058b2:	4423      	add	r3, r4
  4058b4:	f002 0203 	and.w	r2, r2, #3
  4058b8:	b162      	cbz	r2, 4058d4 <memmove+0xc0>
  4058ba:	3b01      	subs	r3, #1
  4058bc:	440a      	add	r2, r1
  4058be:	f811 4b01 	ldrb.w	r4, [r1], #1
  4058c2:	f803 4f01 	strb.w	r4, [r3, #1]!
  4058c6:	428a      	cmp	r2, r1
  4058c8:	d1f9      	bne.n	4058be <memmove+0xaa>
  4058ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4058cc:	4603      	mov	r3, r0
  4058ce:	e7f3      	b.n	4058b8 <memmove+0xa4>
  4058d0:	4603      	mov	r3, r0
  4058d2:	e7f2      	b.n	4058ba <memmove+0xa6>
  4058d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4058d6:	4672      	mov	r2, lr
  4058d8:	e7ee      	b.n	4058b8 <memmove+0xa4>
  4058da:	bf00      	nop

004058dc <_realloc_r>:
  4058dc:	2900      	cmp	r1, #0
  4058de:	f000 8095 	beq.w	405a0c <_realloc_r+0x130>
  4058e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4058e6:	460d      	mov	r5, r1
  4058e8:	4616      	mov	r6, r2
  4058ea:	b083      	sub	sp, #12
  4058ec:	4680      	mov	r8, r0
  4058ee:	f106 070b 	add.w	r7, r6, #11
  4058f2:	f7ff f997 	bl	404c24 <__malloc_lock>
  4058f6:	f855 ec04 	ldr.w	lr, [r5, #-4]
  4058fa:	2f16      	cmp	r7, #22
  4058fc:	f02e 0403 	bic.w	r4, lr, #3
  405900:	f1a5 0908 	sub.w	r9, r5, #8
  405904:	d83c      	bhi.n	405980 <_realloc_r+0xa4>
  405906:	2210      	movs	r2, #16
  405908:	4617      	mov	r7, r2
  40590a:	42be      	cmp	r6, r7
  40590c:	d83d      	bhi.n	40598a <_realloc_r+0xae>
  40590e:	4294      	cmp	r4, r2
  405910:	da43      	bge.n	40599a <_realloc_r+0xbe>
  405912:	4bc4      	ldr	r3, [pc, #784]	; (405c24 <_realloc_r+0x348>)
  405914:	6899      	ldr	r1, [r3, #8]
  405916:	eb09 0004 	add.w	r0, r9, r4
  40591a:	4288      	cmp	r0, r1
  40591c:	f000 80b4 	beq.w	405a88 <_realloc_r+0x1ac>
  405920:	6843      	ldr	r3, [r0, #4]
  405922:	f023 0101 	bic.w	r1, r3, #1
  405926:	4401      	add	r1, r0
  405928:	6849      	ldr	r1, [r1, #4]
  40592a:	07c9      	lsls	r1, r1, #31
  40592c:	d54c      	bpl.n	4059c8 <_realloc_r+0xec>
  40592e:	f01e 0f01 	tst.w	lr, #1
  405932:	f000 809b 	beq.w	405a6c <_realloc_r+0x190>
  405936:	4631      	mov	r1, r6
  405938:	4640      	mov	r0, r8
  40593a:	f7fe fdd3 	bl	4044e4 <_malloc_r>
  40593e:	4606      	mov	r6, r0
  405940:	2800      	cmp	r0, #0
  405942:	d03a      	beq.n	4059ba <_realloc_r+0xde>
  405944:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405948:	f023 0301 	bic.w	r3, r3, #1
  40594c:	444b      	add	r3, r9
  40594e:	f1a0 0208 	sub.w	r2, r0, #8
  405952:	429a      	cmp	r2, r3
  405954:	f000 8121 	beq.w	405b9a <_realloc_r+0x2be>
  405958:	1f22      	subs	r2, r4, #4
  40595a:	2a24      	cmp	r2, #36	; 0x24
  40595c:	f200 8107 	bhi.w	405b6e <_realloc_r+0x292>
  405960:	2a13      	cmp	r2, #19
  405962:	f200 80db 	bhi.w	405b1c <_realloc_r+0x240>
  405966:	4603      	mov	r3, r0
  405968:	462a      	mov	r2, r5
  40596a:	6811      	ldr	r1, [r2, #0]
  40596c:	6019      	str	r1, [r3, #0]
  40596e:	6851      	ldr	r1, [r2, #4]
  405970:	6059      	str	r1, [r3, #4]
  405972:	6892      	ldr	r2, [r2, #8]
  405974:	609a      	str	r2, [r3, #8]
  405976:	4629      	mov	r1, r5
  405978:	4640      	mov	r0, r8
  40597a:	f7ff fe4f 	bl	40561c <_free_r>
  40597e:	e01c      	b.n	4059ba <_realloc_r+0xde>
  405980:	f027 0707 	bic.w	r7, r7, #7
  405984:	2f00      	cmp	r7, #0
  405986:	463a      	mov	r2, r7
  405988:	dabf      	bge.n	40590a <_realloc_r+0x2e>
  40598a:	2600      	movs	r6, #0
  40598c:	230c      	movs	r3, #12
  40598e:	4630      	mov	r0, r6
  405990:	f8c8 3000 	str.w	r3, [r8]
  405994:	b003      	add	sp, #12
  405996:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40599a:	462e      	mov	r6, r5
  40599c:	1be3      	subs	r3, r4, r7
  40599e:	2b0f      	cmp	r3, #15
  4059a0:	d81e      	bhi.n	4059e0 <_realloc_r+0x104>
  4059a2:	f8d9 3004 	ldr.w	r3, [r9, #4]
  4059a6:	f003 0301 	and.w	r3, r3, #1
  4059aa:	4323      	orrs	r3, r4
  4059ac:	444c      	add	r4, r9
  4059ae:	f8c9 3004 	str.w	r3, [r9, #4]
  4059b2:	6863      	ldr	r3, [r4, #4]
  4059b4:	f043 0301 	orr.w	r3, r3, #1
  4059b8:	6063      	str	r3, [r4, #4]
  4059ba:	4640      	mov	r0, r8
  4059bc:	f7ff f938 	bl	404c30 <__malloc_unlock>
  4059c0:	4630      	mov	r0, r6
  4059c2:	b003      	add	sp, #12
  4059c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4059c8:	f023 0303 	bic.w	r3, r3, #3
  4059cc:	18e1      	adds	r1, r4, r3
  4059ce:	4291      	cmp	r1, r2
  4059d0:	db1f      	blt.n	405a12 <_realloc_r+0x136>
  4059d2:	68c3      	ldr	r3, [r0, #12]
  4059d4:	6882      	ldr	r2, [r0, #8]
  4059d6:	462e      	mov	r6, r5
  4059d8:	60d3      	str	r3, [r2, #12]
  4059da:	460c      	mov	r4, r1
  4059dc:	609a      	str	r2, [r3, #8]
  4059de:	e7dd      	b.n	40599c <_realloc_r+0xc0>
  4059e0:	f8d9 2004 	ldr.w	r2, [r9, #4]
  4059e4:	eb09 0107 	add.w	r1, r9, r7
  4059e8:	f002 0201 	and.w	r2, r2, #1
  4059ec:	444c      	add	r4, r9
  4059ee:	f043 0301 	orr.w	r3, r3, #1
  4059f2:	4317      	orrs	r7, r2
  4059f4:	f8c9 7004 	str.w	r7, [r9, #4]
  4059f8:	604b      	str	r3, [r1, #4]
  4059fa:	6863      	ldr	r3, [r4, #4]
  4059fc:	f043 0301 	orr.w	r3, r3, #1
  405a00:	3108      	adds	r1, #8
  405a02:	6063      	str	r3, [r4, #4]
  405a04:	4640      	mov	r0, r8
  405a06:	f7ff fe09 	bl	40561c <_free_r>
  405a0a:	e7d6      	b.n	4059ba <_realloc_r+0xde>
  405a0c:	4611      	mov	r1, r2
  405a0e:	f7fe bd69 	b.w	4044e4 <_malloc_r>
  405a12:	f01e 0f01 	tst.w	lr, #1
  405a16:	d18e      	bne.n	405936 <_realloc_r+0x5a>
  405a18:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405a1c:	eba9 0a01 	sub.w	sl, r9, r1
  405a20:	f8da 1004 	ldr.w	r1, [sl, #4]
  405a24:	f021 0103 	bic.w	r1, r1, #3
  405a28:	440b      	add	r3, r1
  405a2a:	4423      	add	r3, r4
  405a2c:	4293      	cmp	r3, r2
  405a2e:	db25      	blt.n	405a7c <_realloc_r+0x1a0>
  405a30:	68c2      	ldr	r2, [r0, #12]
  405a32:	6881      	ldr	r1, [r0, #8]
  405a34:	4656      	mov	r6, sl
  405a36:	60ca      	str	r2, [r1, #12]
  405a38:	6091      	str	r1, [r2, #8]
  405a3a:	f8da 100c 	ldr.w	r1, [sl, #12]
  405a3e:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405a42:	1f22      	subs	r2, r4, #4
  405a44:	2a24      	cmp	r2, #36	; 0x24
  405a46:	60c1      	str	r1, [r0, #12]
  405a48:	6088      	str	r0, [r1, #8]
  405a4a:	f200 8094 	bhi.w	405b76 <_realloc_r+0x29a>
  405a4e:	2a13      	cmp	r2, #19
  405a50:	d96f      	bls.n	405b32 <_realloc_r+0x256>
  405a52:	6829      	ldr	r1, [r5, #0]
  405a54:	f8ca 1008 	str.w	r1, [sl, #8]
  405a58:	6869      	ldr	r1, [r5, #4]
  405a5a:	f8ca 100c 	str.w	r1, [sl, #12]
  405a5e:	2a1b      	cmp	r2, #27
  405a60:	f200 80a2 	bhi.w	405ba8 <_realloc_r+0x2cc>
  405a64:	3508      	adds	r5, #8
  405a66:	f10a 0210 	add.w	r2, sl, #16
  405a6a:	e063      	b.n	405b34 <_realloc_r+0x258>
  405a6c:	f855 3c08 	ldr.w	r3, [r5, #-8]
  405a70:	eba9 0a03 	sub.w	sl, r9, r3
  405a74:	f8da 1004 	ldr.w	r1, [sl, #4]
  405a78:	f021 0103 	bic.w	r1, r1, #3
  405a7c:	1863      	adds	r3, r4, r1
  405a7e:	4293      	cmp	r3, r2
  405a80:	f6ff af59 	blt.w	405936 <_realloc_r+0x5a>
  405a84:	4656      	mov	r6, sl
  405a86:	e7d8      	b.n	405a3a <_realloc_r+0x15e>
  405a88:	6841      	ldr	r1, [r0, #4]
  405a8a:	f021 0b03 	bic.w	fp, r1, #3
  405a8e:	44a3      	add	fp, r4
  405a90:	f107 0010 	add.w	r0, r7, #16
  405a94:	4583      	cmp	fp, r0
  405a96:	da56      	bge.n	405b46 <_realloc_r+0x26a>
  405a98:	f01e 0f01 	tst.w	lr, #1
  405a9c:	f47f af4b 	bne.w	405936 <_realloc_r+0x5a>
  405aa0:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405aa4:	eba9 0a01 	sub.w	sl, r9, r1
  405aa8:	f8da 1004 	ldr.w	r1, [sl, #4]
  405aac:	f021 0103 	bic.w	r1, r1, #3
  405ab0:	448b      	add	fp, r1
  405ab2:	4558      	cmp	r0, fp
  405ab4:	dce2      	bgt.n	405a7c <_realloc_r+0x1a0>
  405ab6:	4656      	mov	r6, sl
  405ab8:	f8da 100c 	ldr.w	r1, [sl, #12]
  405abc:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405ac0:	1f22      	subs	r2, r4, #4
  405ac2:	2a24      	cmp	r2, #36	; 0x24
  405ac4:	60c1      	str	r1, [r0, #12]
  405ac6:	6088      	str	r0, [r1, #8]
  405ac8:	f200 808f 	bhi.w	405bea <_realloc_r+0x30e>
  405acc:	2a13      	cmp	r2, #19
  405ace:	f240 808a 	bls.w	405be6 <_realloc_r+0x30a>
  405ad2:	6829      	ldr	r1, [r5, #0]
  405ad4:	f8ca 1008 	str.w	r1, [sl, #8]
  405ad8:	6869      	ldr	r1, [r5, #4]
  405ada:	f8ca 100c 	str.w	r1, [sl, #12]
  405ade:	2a1b      	cmp	r2, #27
  405ae0:	f200 808a 	bhi.w	405bf8 <_realloc_r+0x31c>
  405ae4:	3508      	adds	r5, #8
  405ae6:	f10a 0210 	add.w	r2, sl, #16
  405aea:	6829      	ldr	r1, [r5, #0]
  405aec:	6011      	str	r1, [r2, #0]
  405aee:	6869      	ldr	r1, [r5, #4]
  405af0:	6051      	str	r1, [r2, #4]
  405af2:	68a9      	ldr	r1, [r5, #8]
  405af4:	6091      	str	r1, [r2, #8]
  405af6:	eb0a 0107 	add.w	r1, sl, r7
  405afa:	ebab 0207 	sub.w	r2, fp, r7
  405afe:	f042 0201 	orr.w	r2, r2, #1
  405b02:	6099      	str	r1, [r3, #8]
  405b04:	604a      	str	r2, [r1, #4]
  405b06:	f8da 3004 	ldr.w	r3, [sl, #4]
  405b0a:	f003 0301 	and.w	r3, r3, #1
  405b0e:	431f      	orrs	r7, r3
  405b10:	4640      	mov	r0, r8
  405b12:	f8ca 7004 	str.w	r7, [sl, #4]
  405b16:	f7ff f88b 	bl	404c30 <__malloc_unlock>
  405b1a:	e751      	b.n	4059c0 <_realloc_r+0xe4>
  405b1c:	682b      	ldr	r3, [r5, #0]
  405b1e:	6003      	str	r3, [r0, #0]
  405b20:	686b      	ldr	r3, [r5, #4]
  405b22:	6043      	str	r3, [r0, #4]
  405b24:	2a1b      	cmp	r2, #27
  405b26:	d82d      	bhi.n	405b84 <_realloc_r+0x2a8>
  405b28:	f100 0308 	add.w	r3, r0, #8
  405b2c:	f105 0208 	add.w	r2, r5, #8
  405b30:	e71b      	b.n	40596a <_realloc_r+0x8e>
  405b32:	4632      	mov	r2, r6
  405b34:	6829      	ldr	r1, [r5, #0]
  405b36:	6011      	str	r1, [r2, #0]
  405b38:	6869      	ldr	r1, [r5, #4]
  405b3a:	6051      	str	r1, [r2, #4]
  405b3c:	68a9      	ldr	r1, [r5, #8]
  405b3e:	6091      	str	r1, [r2, #8]
  405b40:	461c      	mov	r4, r3
  405b42:	46d1      	mov	r9, sl
  405b44:	e72a      	b.n	40599c <_realloc_r+0xc0>
  405b46:	eb09 0107 	add.w	r1, r9, r7
  405b4a:	ebab 0b07 	sub.w	fp, fp, r7
  405b4e:	f04b 0201 	orr.w	r2, fp, #1
  405b52:	6099      	str	r1, [r3, #8]
  405b54:	604a      	str	r2, [r1, #4]
  405b56:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405b5a:	f003 0301 	and.w	r3, r3, #1
  405b5e:	431f      	orrs	r7, r3
  405b60:	4640      	mov	r0, r8
  405b62:	f845 7c04 	str.w	r7, [r5, #-4]
  405b66:	f7ff f863 	bl	404c30 <__malloc_unlock>
  405b6a:	462e      	mov	r6, r5
  405b6c:	e728      	b.n	4059c0 <_realloc_r+0xe4>
  405b6e:	4629      	mov	r1, r5
  405b70:	f7ff fe50 	bl	405814 <memmove>
  405b74:	e6ff      	b.n	405976 <_realloc_r+0x9a>
  405b76:	4629      	mov	r1, r5
  405b78:	4630      	mov	r0, r6
  405b7a:	461c      	mov	r4, r3
  405b7c:	46d1      	mov	r9, sl
  405b7e:	f7ff fe49 	bl	405814 <memmove>
  405b82:	e70b      	b.n	40599c <_realloc_r+0xc0>
  405b84:	68ab      	ldr	r3, [r5, #8]
  405b86:	6083      	str	r3, [r0, #8]
  405b88:	68eb      	ldr	r3, [r5, #12]
  405b8a:	60c3      	str	r3, [r0, #12]
  405b8c:	2a24      	cmp	r2, #36	; 0x24
  405b8e:	d017      	beq.n	405bc0 <_realloc_r+0x2e4>
  405b90:	f100 0310 	add.w	r3, r0, #16
  405b94:	f105 0210 	add.w	r2, r5, #16
  405b98:	e6e7      	b.n	40596a <_realloc_r+0x8e>
  405b9a:	f850 3c04 	ldr.w	r3, [r0, #-4]
  405b9e:	f023 0303 	bic.w	r3, r3, #3
  405ba2:	441c      	add	r4, r3
  405ba4:	462e      	mov	r6, r5
  405ba6:	e6f9      	b.n	40599c <_realloc_r+0xc0>
  405ba8:	68a9      	ldr	r1, [r5, #8]
  405baa:	f8ca 1010 	str.w	r1, [sl, #16]
  405bae:	68e9      	ldr	r1, [r5, #12]
  405bb0:	f8ca 1014 	str.w	r1, [sl, #20]
  405bb4:	2a24      	cmp	r2, #36	; 0x24
  405bb6:	d00c      	beq.n	405bd2 <_realloc_r+0x2f6>
  405bb8:	3510      	adds	r5, #16
  405bba:	f10a 0218 	add.w	r2, sl, #24
  405bbe:	e7b9      	b.n	405b34 <_realloc_r+0x258>
  405bc0:	692b      	ldr	r3, [r5, #16]
  405bc2:	6103      	str	r3, [r0, #16]
  405bc4:	696b      	ldr	r3, [r5, #20]
  405bc6:	6143      	str	r3, [r0, #20]
  405bc8:	f105 0218 	add.w	r2, r5, #24
  405bcc:	f100 0318 	add.w	r3, r0, #24
  405bd0:	e6cb      	b.n	40596a <_realloc_r+0x8e>
  405bd2:	692a      	ldr	r2, [r5, #16]
  405bd4:	f8ca 2018 	str.w	r2, [sl, #24]
  405bd8:	696a      	ldr	r2, [r5, #20]
  405bda:	f8ca 201c 	str.w	r2, [sl, #28]
  405bde:	3518      	adds	r5, #24
  405be0:	f10a 0220 	add.w	r2, sl, #32
  405be4:	e7a6      	b.n	405b34 <_realloc_r+0x258>
  405be6:	4632      	mov	r2, r6
  405be8:	e77f      	b.n	405aea <_realloc_r+0x20e>
  405bea:	4629      	mov	r1, r5
  405bec:	4630      	mov	r0, r6
  405bee:	9301      	str	r3, [sp, #4]
  405bf0:	f7ff fe10 	bl	405814 <memmove>
  405bf4:	9b01      	ldr	r3, [sp, #4]
  405bf6:	e77e      	b.n	405af6 <_realloc_r+0x21a>
  405bf8:	68a9      	ldr	r1, [r5, #8]
  405bfa:	f8ca 1010 	str.w	r1, [sl, #16]
  405bfe:	68e9      	ldr	r1, [r5, #12]
  405c00:	f8ca 1014 	str.w	r1, [sl, #20]
  405c04:	2a24      	cmp	r2, #36	; 0x24
  405c06:	d003      	beq.n	405c10 <_realloc_r+0x334>
  405c08:	3510      	adds	r5, #16
  405c0a:	f10a 0218 	add.w	r2, sl, #24
  405c0e:	e76c      	b.n	405aea <_realloc_r+0x20e>
  405c10:	692a      	ldr	r2, [r5, #16]
  405c12:	f8ca 2018 	str.w	r2, [sl, #24]
  405c16:	696a      	ldr	r2, [r5, #20]
  405c18:	f8ca 201c 	str.w	r2, [sl, #28]
  405c1c:	3518      	adds	r5, #24
  405c1e:	f10a 0220 	add.w	r2, sl, #32
  405c22:	e762      	b.n	405aea <_realloc_r+0x20e>
  405c24:	20400454 	.word	0x20400454

00405c28 <__ascii_wctomb>:
  405c28:	b121      	cbz	r1, 405c34 <__ascii_wctomb+0xc>
  405c2a:	2aff      	cmp	r2, #255	; 0xff
  405c2c:	d804      	bhi.n	405c38 <__ascii_wctomb+0x10>
  405c2e:	700a      	strb	r2, [r1, #0]
  405c30:	2001      	movs	r0, #1
  405c32:	4770      	bx	lr
  405c34:	4608      	mov	r0, r1
  405c36:	4770      	bx	lr
  405c38:	238a      	movs	r3, #138	; 0x8a
  405c3a:	6003      	str	r3, [r0, #0]
  405c3c:	f04f 30ff 	mov.w	r0, #4294967295
  405c40:	4770      	bx	lr
  405c42:	bf00      	nop

00405c44 <__gedf2>:
  405c44:	f04f 3cff 	mov.w	ip, #4294967295
  405c48:	e006      	b.n	405c58 <__cmpdf2+0x4>
  405c4a:	bf00      	nop

00405c4c <__ledf2>:
  405c4c:	f04f 0c01 	mov.w	ip, #1
  405c50:	e002      	b.n	405c58 <__cmpdf2+0x4>
  405c52:	bf00      	nop

00405c54 <__cmpdf2>:
  405c54:	f04f 0c01 	mov.w	ip, #1
  405c58:	f84d cd04 	str.w	ip, [sp, #-4]!
  405c5c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405c60:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405c64:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405c68:	bf18      	it	ne
  405c6a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  405c6e:	d01b      	beq.n	405ca8 <__cmpdf2+0x54>
  405c70:	b001      	add	sp, #4
  405c72:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  405c76:	bf0c      	ite	eq
  405c78:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  405c7c:	ea91 0f03 	teqne	r1, r3
  405c80:	bf02      	ittt	eq
  405c82:	ea90 0f02 	teqeq	r0, r2
  405c86:	2000      	moveq	r0, #0
  405c88:	4770      	bxeq	lr
  405c8a:	f110 0f00 	cmn.w	r0, #0
  405c8e:	ea91 0f03 	teq	r1, r3
  405c92:	bf58      	it	pl
  405c94:	4299      	cmppl	r1, r3
  405c96:	bf08      	it	eq
  405c98:	4290      	cmpeq	r0, r2
  405c9a:	bf2c      	ite	cs
  405c9c:	17d8      	asrcs	r0, r3, #31
  405c9e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  405ca2:	f040 0001 	orr.w	r0, r0, #1
  405ca6:	4770      	bx	lr
  405ca8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405cac:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405cb0:	d102      	bne.n	405cb8 <__cmpdf2+0x64>
  405cb2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  405cb6:	d107      	bne.n	405cc8 <__cmpdf2+0x74>
  405cb8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405cbc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405cc0:	d1d6      	bne.n	405c70 <__cmpdf2+0x1c>
  405cc2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  405cc6:	d0d3      	beq.n	405c70 <__cmpdf2+0x1c>
  405cc8:	f85d 0b04 	ldr.w	r0, [sp], #4
  405ccc:	4770      	bx	lr
  405cce:	bf00      	nop

00405cd0 <__aeabi_cdrcmple>:
  405cd0:	4684      	mov	ip, r0
  405cd2:	4610      	mov	r0, r2
  405cd4:	4662      	mov	r2, ip
  405cd6:	468c      	mov	ip, r1
  405cd8:	4619      	mov	r1, r3
  405cda:	4663      	mov	r3, ip
  405cdc:	e000      	b.n	405ce0 <__aeabi_cdcmpeq>
  405cde:	bf00      	nop

00405ce0 <__aeabi_cdcmpeq>:
  405ce0:	b501      	push	{r0, lr}
  405ce2:	f7ff ffb7 	bl	405c54 <__cmpdf2>
  405ce6:	2800      	cmp	r0, #0
  405ce8:	bf48      	it	mi
  405cea:	f110 0f00 	cmnmi.w	r0, #0
  405cee:	bd01      	pop	{r0, pc}

00405cf0 <__aeabi_dcmpeq>:
  405cf0:	f84d ed08 	str.w	lr, [sp, #-8]!
  405cf4:	f7ff fff4 	bl	405ce0 <__aeabi_cdcmpeq>
  405cf8:	bf0c      	ite	eq
  405cfa:	2001      	moveq	r0, #1
  405cfc:	2000      	movne	r0, #0
  405cfe:	f85d fb08 	ldr.w	pc, [sp], #8
  405d02:	bf00      	nop

00405d04 <__aeabi_dcmplt>:
  405d04:	f84d ed08 	str.w	lr, [sp, #-8]!
  405d08:	f7ff ffea 	bl	405ce0 <__aeabi_cdcmpeq>
  405d0c:	bf34      	ite	cc
  405d0e:	2001      	movcc	r0, #1
  405d10:	2000      	movcs	r0, #0
  405d12:	f85d fb08 	ldr.w	pc, [sp], #8
  405d16:	bf00      	nop

00405d18 <__aeabi_dcmple>:
  405d18:	f84d ed08 	str.w	lr, [sp, #-8]!
  405d1c:	f7ff ffe0 	bl	405ce0 <__aeabi_cdcmpeq>
  405d20:	bf94      	ite	ls
  405d22:	2001      	movls	r0, #1
  405d24:	2000      	movhi	r0, #0
  405d26:	f85d fb08 	ldr.w	pc, [sp], #8
  405d2a:	bf00      	nop

00405d2c <__aeabi_dcmpge>:
  405d2c:	f84d ed08 	str.w	lr, [sp, #-8]!
  405d30:	f7ff ffce 	bl	405cd0 <__aeabi_cdrcmple>
  405d34:	bf94      	ite	ls
  405d36:	2001      	movls	r0, #1
  405d38:	2000      	movhi	r0, #0
  405d3a:	f85d fb08 	ldr.w	pc, [sp], #8
  405d3e:	bf00      	nop

00405d40 <__aeabi_dcmpgt>:
  405d40:	f84d ed08 	str.w	lr, [sp, #-8]!
  405d44:	f7ff ffc4 	bl	405cd0 <__aeabi_cdrcmple>
  405d48:	bf34      	ite	cc
  405d4a:	2001      	movcc	r0, #1
  405d4c:	2000      	movcs	r0, #0
  405d4e:	f85d fb08 	ldr.w	pc, [sp], #8
  405d52:	bf00      	nop

00405d54 <__aeabi_dcmpun>:
  405d54:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405d58:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405d5c:	d102      	bne.n	405d64 <__aeabi_dcmpun+0x10>
  405d5e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  405d62:	d10a      	bne.n	405d7a <__aeabi_dcmpun+0x26>
  405d64:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405d68:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405d6c:	d102      	bne.n	405d74 <__aeabi_dcmpun+0x20>
  405d6e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  405d72:	d102      	bne.n	405d7a <__aeabi_dcmpun+0x26>
  405d74:	f04f 0000 	mov.w	r0, #0
  405d78:	4770      	bx	lr
  405d7a:	f04f 0001 	mov.w	r0, #1
  405d7e:	4770      	bx	lr

00405d80 <__aeabi_d2iz>:
  405d80:	ea4f 0241 	mov.w	r2, r1, lsl #1
  405d84:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  405d88:	d215      	bcs.n	405db6 <__aeabi_d2iz+0x36>
  405d8a:	d511      	bpl.n	405db0 <__aeabi_d2iz+0x30>
  405d8c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  405d90:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  405d94:	d912      	bls.n	405dbc <__aeabi_d2iz+0x3c>
  405d96:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  405d9a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  405d9e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  405da2:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  405da6:	fa23 f002 	lsr.w	r0, r3, r2
  405daa:	bf18      	it	ne
  405dac:	4240      	negne	r0, r0
  405dae:	4770      	bx	lr
  405db0:	f04f 0000 	mov.w	r0, #0
  405db4:	4770      	bx	lr
  405db6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  405dba:	d105      	bne.n	405dc8 <__aeabi_d2iz+0x48>
  405dbc:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  405dc0:	bf08      	it	eq
  405dc2:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  405dc6:	4770      	bx	lr
  405dc8:	f04f 0000 	mov.w	r0, #0
  405dcc:	4770      	bx	lr
  405dce:	bf00      	nop

00405dd0 <__aeabi_uldivmod>:
  405dd0:	b953      	cbnz	r3, 405de8 <__aeabi_uldivmod+0x18>
  405dd2:	b94a      	cbnz	r2, 405de8 <__aeabi_uldivmod+0x18>
  405dd4:	2900      	cmp	r1, #0
  405dd6:	bf08      	it	eq
  405dd8:	2800      	cmpeq	r0, #0
  405dda:	bf1c      	itt	ne
  405ddc:	f04f 31ff 	movne.w	r1, #4294967295
  405de0:	f04f 30ff 	movne.w	r0, #4294967295
  405de4:	f000 b97a 	b.w	4060dc <__aeabi_idiv0>
  405de8:	f1ad 0c08 	sub.w	ip, sp, #8
  405dec:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  405df0:	f000 f806 	bl	405e00 <__udivmoddi4>
  405df4:	f8dd e004 	ldr.w	lr, [sp, #4]
  405df8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  405dfc:	b004      	add	sp, #16
  405dfe:	4770      	bx	lr

00405e00 <__udivmoddi4>:
  405e00:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  405e04:	468c      	mov	ip, r1
  405e06:	460d      	mov	r5, r1
  405e08:	4604      	mov	r4, r0
  405e0a:	9e08      	ldr	r6, [sp, #32]
  405e0c:	2b00      	cmp	r3, #0
  405e0e:	d151      	bne.n	405eb4 <__udivmoddi4+0xb4>
  405e10:	428a      	cmp	r2, r1
  405e12:	4617      	mov	r7, r2
  405e14:	d96d      	bls.n	405ef2 <__udivmoddi4+0xf2>
  405e16:	fab2 fe82 	clz	lr, r2
  405e1a:	f1be 0f00 	cmp.w	lr, #0
  405e1e:	d00b      	beq.n	405e38 <__udivmoddi4+0x38>
  405e20:	f1ce 0c20 	rsb	ip, lr, #32
  405e24:	fa01 f50e 	lsl.w	r5, r1, lr
  405e28:	fa20 fc0c 	lsr.w	ip, r0, ip
  405e2c:	fa02 f70e 	lsl.w	r7, r2, lr
  405e30:	ea4c 0c05 	orr.w	ip, ip, r5
  405e34:	fa00 f40e 	lsl.w	r4, r0, lr
  405e38:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  405e3c:	0c25      	lsrs	r5, r4, #16
  405e3e:	fbbc f8fa 	udiv	r8, ip, sl
  405e42:	fa1f f987 	uxth.w	r9, r7
  405e46:	fb0a cc18 	mls	ip, sl, r8, ip
  405e4a:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  405e4e:	fb08 f309 	mul.w	r3, r8, r9
  405e52:	42ab      	cmp	r3, r5
  405e54:	d90a      	bls.n	405e6c <__udivmoddi4+0x6c>
  405e56:	19ed      	adds	r5, r5, r7
  405e58:	f108 32ff 	add.w	r2, r8, #4294967295
  405e5c:	f080 8123 	bcs.w	4060a6 <__udivmoddi4+0x2a6>
  405e60:	42ab      	cmp	r3, r5
  405e62:	f240 8120 	bls.w	4060a6 <__udivmoddi4+0x2a6>
  405e66:	f1a8 0802 	sub.w	r8, r8, #2
  405e6a:	443d      	add	r5, r7
  405e6c:	1aed      	subs	r5, r5, r3
  405e6e:	b2a4      	uxth	r4, r4
  405e70:	fbb5 f0fa 	udiv	r0, r5, sl
  405e74:	fb0a 5510 	mls	r5, sl, r0, r5
  405e78:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  405e7c:	fb00 f909 	mul.w	r9, r0, r9
  405e80:	45a1      	cmp	r9, r4
  405e82:	d909      	bls.n	405e98 <__udivmoddi4+0x98>
  405e84:	19e4      	adds	r4, r4, r7
  405e86:	f100 33ff 	add.w	r3, r0, #4294967295
  405e8a:	f080 810a 	bcs.w	4060a2 <__udivmoddi4+0x2a2>
  405e8e:	45a1      	cmp	r9, r4
  405e90:	f240 8107 	bls.w	4060a2 <__udivmoddi4+0x2a2>
  405e94:	3802      	subs	r0, #2
  405e96:	443c      	add	r4, r7
  405e98:	eba4 0409 	sub.w	r4, r4, r9
  405e9c:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  405ea0:	2100      	movs	r1, #0
  405ea2:	2e00      	cmp	r6, #0
  405ea4:	d061      	beq.n	405f6a <__udivmoddi4+0x16a>
  405ea6:	fa24 f40e 	lsr.w	r4, r4, lr
  405eaa:	2300      	movs	r3, #0
  405eac:	6034      	str	r4, [r6, #0]
  405eae:	6073      	str	r3, [r6, #4]
  405eb0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405eb4:	428b      	cmp	r3, r1
  405eb6:	d907      	bls.n	405ec8 <__udivmoddi4+0xc8>
  405eb8:	2e00      	cmp	r6, #0
  405eba:	d054      	beq.n	405f66 <__udivmoddi4+0x166>
  405ebc:	2100      	movs	r1, #0
  405ebe:	e886 0021 	stmia.w	r6, {r0, r5}
  405ec2:	4608      	mov	r0, r1
  405ec4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405ec8:	fab3 f183 	clz	r1, r3
  405ecc:	2900      	cmp	r1, #0
  405ece:	f040 808e 	bne.w	405fee <__udivmoddi4+0x1ee>
  405ed2:	42ab      	cmp	r3, r5
  405ed4:	d302      	bcc.n	405edc <__udivmoddi4+0xdc>
  405ed6:	4282      	cmp	r2, r0
  405ed8:	f200 80fa 	bhi.w	4060d0 <__udivmoddi4+0x2d0>
  405edc:	1a84      	subs	r4, r0, r2
  405ede:	eb65 0503 	sbc.w	r5, r5, r3
  405ee2:	2001      	movs	r0, #1
  405ee4:	46ac      	mov	ip, r5
  405ee6:	2e00      	cmp	r6, #0
  405ee8:	d03f      	beq.n	405f6a <__udivmoddi4+0x16a>
  405eea:	e886 1010 	stmia.w	r6, {r4, ip}
  405eee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405ef2:	b912      	cbnz	r2, 405efa <__udivmoddi4+0xfa>
  405ef4:	2701      	movs	r7, #1
  405ef6:	fbb7 f7f2 	udiv	r7, r7, r2
  405efa:	fab7 fe87 	clz	lr, r7
  405efe:	f1be 0f00 	cmp.w	lr, #0
  405f02:	d134      	bne.n	405f6e <__udivmoddi4+0x16e>
  405f04:	1beb      	subs	r3, r5, r7
  405f06:	0c3a      	lsrs	r2, r7, #16
  405f08:	fa1f fc87 	uxth.w	ip, r7
  405f0c:	2101      	movs	r1, #1
  405f0e:	fbb3 f8f2 	udiv	r8, r3, r2
  405f12:	0c25      	lsrs	r5, r4, #16
  405f14:	fb02 3318 	mls	r3, r2, r8, r3
  405f18:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  405f1c:	fb0c f308 	mul.w	r3, ip, r8
  405f20:	42ab      	cmp	r3, r5
  405f22:	d907      	bls.n	405f34 <__udivmoddi4+0x134>
  405f24:	19ed      	adds	r5, r5, r7
  405f26:	f108 30ff 	add.w	r0, r8, #4294967295
  405f2a:	d202      	bcs.n	405f32 <__udivmoddi4+0x132>
  405f2c:	42ab      	cmp	r3, r5
  405f2e:	f200 80d1 	bhi.w	4060d4 <__udivmoddi4+0x2d4>
  405f32:	4680      	mov	r8, r0
  405f34:	1aed      	subs	r5, r5, r3
  405f36:	b2a3      	uxth	r3, r4
  405f38:	fbb5 f0f2 	udiv	r0, r5, r2
  405f3c:	fb02 5510 	mls	r5, r2, r0, r5
  405f40:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  405f44:	fb0c fc00 	mul.w	ip, ip, r0
  405f48:	45a4      	cmp	ip, r4
  405f4a:	d907      	bls.n	405f5c <__udivmoddi4+0x15c>
  405f4c:	19e4      	adds	r4, r4, r7
  405f4e:	f100 33ff 	add.w	r3, r0, #4294967295
  405f52:	d202      	bcs.n	405f5a <__udivmoddi4+0x15a>
  405f54:	45a4      	cmp	ip, r4
  405f56:	f200 80b8 	bhi.w	4060ca <__udivmoddi4+0x2ca>
  405f5a:	4618      	mov	r0, r3
  405f5c:	eba4 040c 	sub.w	r4, r4, ip
  405f60:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  405f64:	e79d      	b.n	405ea2 <__udivmoddi4+0xa2>
  405f66:	4631      	mov	r1, r6
  405f68:	4630      	mov	r0, r6
  405f6a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405f6e:	f1ce 0420 	rsb	r4, lr, #32
  405f72:	fa05 f30e 	lsl.w	r3, r5, lr
  405f76:	fa07 f70e 	lsl.w	r7, r7, lr
  405f7a:	fa20 f804 	lsr.w	r8, r0, r4
  405f7e:	0c3a      	lsrs	r2, r7, #16
  405f80:	fa25 f404 	lsr.w	r4, r5, r4
  405f84:	ea48 0803 	orr.w	r8, r8, r3
  405f88:	fbb4 f1f2 	udiv	r1, r4, r2
  405f8c:	ea4f 4518 	mov.w	r5, r8, lsr #16
  405f90:	fb02 4411 	mls	r4, r2, r1, r4
  405f94:	fa1f fc87 	uxth.w	ip, r7
  405f98:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  405f9c:	fb01 f30c 	mul.w	r3, r1, ip
  405fa0:	42ab      	cmp	r3, r5
  405fa2:	fa00 f40e 	lsl.w	r4, r0, lr
  405fa6:	d909      	bls.n	405fbc <__udivmoddi4+0x1bc>
  405fa8:	19ed      	adds	r5, r5, r7
  405faa:	f101 30ff 	add.w	r0, r1, #4294967295
  405fae:	f080 808a 	bcs.w	4060c6 <__udivmoddi4+0x2c6>
  405fb2:	42ab      	cmp	r3, r5
  405fb4:	f240 8087 	bls.w	4060c6 <__udivmoddi4+0x2c6>
  405fb8:	3902      	subs	r1, #2
  405fba:	443d      	add	r5, r7
  405fbc:	1aeb      	subs	r3, r5, r3
  405fbe:	fa1f f588 	uxth.w	r5, r8
  405fc2:	fbb3 f0f2 	udiv	r0, r3, r2
  405fc6:	fb02 3310 	mls	r3, r2, r0, r3
  405fca:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  405fce:	fb00 f30c 	mul.w	r3, r0, ip
  405fd2:	42ab      	cmp	r3, r5
  405fd4:	d907      	bls.n	405fe6 <__udivmoddi4+0x1e6>
  405fd6:	19ed      	adds	r5, r5, r7
  405fd8:	f100 38ff 	add.w	r8, r0, #4294967295
  405fdc:	d26f      	bcs.n	4060be <__udivmoddi4+0x2be>
  405fde:	42ab      	cmp	r3, r5
  405fe0:	d96d      	bls.n	4060be <__udivmoddi4+0x2be>
  405fe2:	3802      	subs	r0, #2
  405fe4:	443d      	add	r5, r7
  405fe6:	1aeb      	subs	r3, r5, r3
  405fe8:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  405fec:	e78f      	b.n	405f0e <__udivmoddi4+0x10e>
  405fee:	f1c1 0720 	rsb	r7, r1, #32
  405ff2:	fa22 f807 	lsr.w	r8, r2, r7
  405ff6:	408b      	lsls	r3, r1
  405ff8:	fa05 f401 	lsl.w	r4, r5, r1
  405ffc:	ea48 0303 	orr.w	r3, r8, r3
  406000:	fa20 fe07 	lsr.w	lr, r0, r7
  406004:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  406008:	40fd      	lsrs	r5, r7
  40600a:	ea4e 0e04 	orr.w	lr, lr, r4
  40600e:	fbb5 f9fc 	udiv	r9, r5, ip
  406012:	ea4f 441e 	mov.w	r4, lr, lsr #16
  406016:	fb0c 5519 	mls	r5, ip, r9, r5
  40601a:	fa1f f883 	uxth.w	r8, r3
  40601e:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  406022:	fb09 f408 	mul.w	r4, r9, r8
  406026:	42ac      	cmp	r4, r5
  406028:	fa02 f201 	lsl.w	r2, r2, r1
  40602c:	fa00 fa01 	lsl.w	sl, r0, r1
  406030:	d908      	bls.n	406044 <__udivmoddi4+0x244>
  406032:	18ed      	adds	r5, r5, r3
  406034:	f109 30ff 	add.w	r0, r9, #4294967295
  406038:	d243      	bcs.n	4060c2 <__udivmoddi4+0x2c2>
  40603a:	42ac      	cmp	r4, r5
  40603c:	d941      	bls.n	4060c2 <__udivmoddi4+0x2c2>
  40603e:	f1a9 0902 	sub.w	r9, r9, #2
  406042:	441d      	add	r5, r3
  406044:	1b2d      	subs	r5, r5, r4
  406046:	fa1f fe8e 	uxth.w	lr, lr
  40604a:	fbb5 f0fc 	udiv	r0, r5, ip
  40604e:	fb0c 5510 	mls	r5, ip, r0, r5
  406052:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  406056:	fb00 f808 	mul.w	r8, r0, r8
  40605a:	45a0      	cmp	r8, r4
  40605c:	d907      	bls.n	40606e <__udivmoddi4+0x26e>
  40605e:	18e4      	adds	r4, r4, r3
  406060:	f100 35ff 	add.w	r5, r0, #4294967295
  406064:	d229      	bcs.n	4060ba <__udivmoddi4+0x2ba>
  406066:	45a0      	cmp	r8, r4
  406068:	d927      	bls.n	4060ba <__udivmoddi4+0x2ba>
  40606a:	3802      	subs	r0, #2
  40606c:	441c      	add	r4, r3
  40606e:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  406072:	eba4 0408 	sub.w	r4, r4, r8
  406076:	fba0 8902 	umull	r8, r9, r0, r2
  40607a:	454c      	cmp	r4, r9
  40607c:	46c6      	mov	lr, r8
  40607e:	464d      	mov	r5, r9
  406080:	d315      	bcc.n	4060ae <__udivmoddi4+0x2ae>
  406082:	d012      	beq.n	4060aa <__udivmoddi4+0x2aa>
  406084:	b156      	cbz	r6, 40609c <__udivmoddi4+0x29c>
  406086:	ebba 030e 	subs.w	r3, sl, lr
  40608a:	eb64 0405 	sbc.w	r4, r4, r5
  40608e:	fa04 f707 	lsl.w	r7, r4, r7
  406092:	40cb      	lsrs	r3, r1
  406094:	431f      	orrs	r7, r3
  406096:	40cc      	lsrs	r4, r1
  406098:	6037      	str	r7, [r6, #0]
  40609a:	6074      	str	r4, [r6, #4]
  40609c:	2100      	movs	r1, #0
  40609e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4060a2:	4618      	mov	r0, r3
  4060a4:	e6f8      	b.n	405e98 <__udivmoddi4+0x98>
  4060a6:	4690      	mov	r8, r2
  4060a8:	e6e0      	b.n	405e6c <__udivmoddi4+0x6c>
  4060aa:	45c2      	cmp	sl, r8
  4060ac:	d2ea      	bcs.n	406084 <__udivmoddi4+0x284>
  4060ae:	ebb8 0e02 	subs.w	lr, r8, r2
  4060b2:	eb69 0503 	sbc.w	r5, r9, r3
  4060b6:	3801      	subs	r0, #1
  4060b8:	e7e4      	b.n	406084 <__udivmoddi4+0x284>
  4060ba:	4628      	mov	r0, r5
  4060bc:	e7d7      	b.n	40606e <__udivmoddi4+0x26e>
  4060be:	4640      	mov	r0, r8
  4060c0:	e791      	b.n	405fe6 <__udivmoddi4+0x1e6>
  4060c2:	4681      	mov	r9, r0
  4060c4:	e7be      	b.n	406044 <__udivmoddi4+0x244>
  4060c6:	4601      	mov	r1, r0
  4060c8:	e778      	b.n	405fbc <__udivmoddi4+0x1bc>
  4060ca:	3802      	subs	r0, #2
  4060cc:	443c      	add	r4, r7
  4060ce:	e745      	b.n	405f5c <__udivmoddi4+0x15c>
  4060d0:	4608      	mov	r0, r1
  4060d2:	e708      	b.n	405ee6 <__udivmoddi4+0xe6>
  4060d4:	f1a8 0802 	sub.w	r8, r8, #2
  4060d8:	443d      	add	r5, r7
  4060da:	e72b      	b.n	405f34 <__udivmoddi4+0x134>

004060dc <__aeabi_idiv0>:
  4060dc:	4770      	bx	lr
  4060de:	bf00      	nop

004060e0 <sysfont_glyphs>:
	...
  406100:	0030 0030 0030 0030 0030 0030 0000 0030     0.0.0.0.0.0...0.
  406110:	0030 0000 0000 0000 0000 0000 006c 006c     0...........l.l.
  406120:	006c 006c 0000 0000 0000 0000 0000 0000     l.l.............
	...
  406138:	0000 0028 0028 007c 0028 0028 007c 0028     ..(.(.|.(.(.|.(.
  406148:	0028 0000 0000 0000 0000 0000 0010 003c     (.............<.
  406158:	0040 0020 0010 0008 0004 0078 0010 0000     @. .......x.....
	...
  406170:	0000 007c 00a4 00a8 0050 0028 0054 0094     ..|.....P.(.T...
  406180:	0088 0000 0000 0000 0000 0000 0060 0090     ............`...
  406190:	0090 0090 0060 0094 0088 0088 0070 0000     ....`.......p...
	...
  4061a8:	0010 0010 0010 0000 0000 0000 0000 0000     ................
	...
  4061c4:	0008 0010 0020 0020 0020 0020 0020 0020     .... . . . . . .
  4061d4:	0010 0008 0000 0000 0000 0000 0020 0010     ............ ...
  4061e4:	0008 0008 0008 0008 0008 0008 0010 0020     .............. .
  4061f4:	0000 0000 0000 0028 0010 007c 0010 0028     ......(...|...(.
	...
  40621c:	0010 0010 0010 00fe 0010 0010 0010 0000     ................
	...
  406244:	0010 0030 0020 0000 0000 0000 0000 0000     ..0. ...........
  406254:	0000 0000 0000 007c 0000 0000 0000 0000     ......|.........
	...
  406278:	0000 0030 0030 0000 0000 0000 0000 0000     ..0.0...........
  406288:	0000 0008 0008 0010 0010 0020 0020 0040     .......... . .@.
  406298:	0040 0000 0000 0000 0000 0000 0000 0078     @.............x.
  4062a8:	0084 008c 0094 00a4 00c4 0084 0078 0000     ............x...
	...
  4062c0:	0000 0010 0030 0050 0010 0010 0010 0010     ....0.P.........
  4062d0:	007c 0000 0000 0000 0000 0000 0000 0070     |.............p.
  4062e0:	0088 0008 0010 0020 0040 0080 00f8 0000     ...... .@.......
	...
  4062f8:	0000 0070 0088 0008 0030 0008 0008 0088     ..p.....0.......
  406308:	0070 0000 0000 0000 0000 0000 0000 0008     p...............
  406318:	0018 0028 0048 0088 00fc 0008 0008 0000     ..(.H...........
	...
  406330:	0000 0078 0080 0080 00f0 0008 0008 0008     ..x.............
  406340:	00f0 0000 0000 0000 0000 0000 0000 0030     ..............0.
  406350:	0040 0080 00f0 0088 0088 0088 0070 0000     @...........p...
	...
  406368:	0000 00f8 0008 0010 0010 0020 0020 0040     .......... . .@.
  406378:	0040 0000 0000 0000 0000 0000 0000 0070     @.............p.
  406388:	0088 0088 0070 0088 0088 0088 0070 0000     ....p.......p...
	...
  4063a0:	0000 0070 0088 0088 0088 0078 0008 0010     ..p.......x.....
  4063b0:	0060 0000 0000 0000 0000 0000 0000 0000     `...............
  4063c0:	0000 0030 0030 0000 0000 0030 0030 0000     ..0.0.....0.0...
	...
  4063dc:	0000 0030 0030 0000 0000 0030 0030 0060     ..0.0.....0.0.`.
  4063ec:	0040 0000 0000 0000 0000 0000 0008 0010     @...............
  4063fc:	0020 0040 0020 0010 0008 0000 0000 0000      .@. ...........
	...
  406418:	007c 0000 007c 0000 0000 0000 0000 0000     |...|...........
	...
  406430:	0040 0020 0010 0008 0010 0020 0040 0000     @. ....... .@...
	...
  406448:	0000 0030 0048 0008 0010 0020 0000 0000     ..0.H..... .....
  406458:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
  406468:	003c 0042 009a 00aa 00aa 00be 0080 0078     <.B...........x.
	...
  406480:	0000 0010 0028 0028 0044 007c 0044 0044     ....(.(.D.|.D.D.
  406490:	0044 0000 0000 0000 0000 0000 0000 00f8     D...............
  4064a0:	0084 0084 00f8 0084 0084 0084 00f8 0000     ................
	...
  4064b8:	0000 003c 0040 0080 0080 0080 0080 0040     ..<.@.........@.
  4064c8:	003c 0000 0000 0000 0000 0000 0000 00f0     <...............
  4064d8:	0088 0084 0084 0084 0084 0088 00f0 0000     ................
	...
  4064f0:	0000 00f8 0080 0080 00f0 0080 0080 0080     ................
  406500:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  406510:	0080 0080 00f8 0080 0080 0080 0080 0000     ................
	...
  406528:	0000 003c 0040 0080 0080 009c 0084 0044     ..<.@.........D.
  406538:	0038 0000 0000 0000 0000 0000 0000 0088     8...............
  406548:	0088 0088 00f8 0088 0088 0088 0088 0000     ................
	...
  406560:	0000 00f8 0020 0020 0020 0020 0020 0020     .... . . . . . .
  406570:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  406580:	0008 0008 0008 0008 0008 0008 00f0 0000     ................
	...
  406598:	0000 0084 0088 0090 00a0 00d0 0088 0084     ................
  4065a8:	0084 0000 0000 0000 0000 0000 0000 0080     ................
  4065b8:	0080 0080 0080 0080 0080 0080 00fc 0000     ................
	...
  4065d0:	0000 0084 00cc 00cc 00b4 00b4 0084 0084     ................
  4065e0:	0084 0000 0000 0000 0000 0000 0000 0084     ................
  4065f0:	00c4 00c4 00a4 00a4 0094 0094 008c 0000     ................
	...
  406608:	0000 0078 0084 0084 0084 0084 0084 0084     ..x.............
  406618:	0078 0000 0000 0000 0000 0000 0000 00f8     x...............
  406628:	0084 0084 0084 00f8 0080 0080 0080 0000     ................
	...
  406640:	0000 0078 0084 0084 0084 0084 0084 0084     ..x.............
  406650:	0078 0020 0018 0000 0000 0000 0000 00f8     x. .............
  406660:	0084 0084 0084 00f8 0088 0084 0084 0000     ................
	...
  406678:	0000 007c 0080 0080 0060 0018 0004 0004     ..|.....`.......
  406688:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  406698:	0020 0020 0020 0020 0020 0020 0020 0000      . . . . . . ...
	...
  4066b0:	0000 0084 0084 0084 0084 0084 0084 0084     ................
  4066c0:	0078 0000 0000 0000 0000 0000 0000 0084     x...............
  4066d0:	0084 0084 0048 0048 0048 0030 0030 0000     ....H.H.H.0.0...
	...
  4066e8:	0000 0088 00a8 00a8 00a8 00a8 00a8 0050     ..............P.
  4066f8:	0050 0000 0000 0000 0000 0000 0000 0088     P...............
  406708:	0088 0050 0020 0020 0050 0088 0088 0000     ..P. . .P.......
	...
  406720:	0000 0088 0088 0088 0050 0050 0020 0020     ........P.P. . .
  406730:	0020 0000 0000 0000 0000 0000 0000 00fc      ...............
  406740:	0004 0008 0010 0020 0040 0080 00fc 0000     ...... .@.......
	...
  406758:	0070 0040 0040 0040 0040 0040 0040 0040     p.@.@.@.@.@.@.@.
  406768:	0040 0040 0070 0000 0000 0000 0040 0040     @.@.p.......@.@.
  406778:	0020 0020 0020 0010 0010 0010 0008 0008      . . ...........
	...
  406790:	0038 0008 0008 0008 0008 0008 0008 0008     8...............
  4067a0:	0008 0008 0038 0000 0000 0000 0010 0028     ....8.........(.
  4067b0:	0044 0000 0000 0000 0000 0000 0000 0000     D...............
	...
  4067d8:	0038 0000 0000 0000 0000 0000 0000 0020     8............. .
  4067e8:	0010 0000 0000 0000 0000 0000 0000 0000     ................
	...
  406804:	0000 0070 0008 0008 0078 0088 007c 0000     ..p.....x...|...
	...
  40681c:	0080 0080 0080 00f8 0084 0084 0084 0084     ................
  40682c:	00f8 0000 0000 0000 0000 0000 0000 0000     ................
  40683c:	0000 0078 0080 0080 0080 0080 0078 0000     ..x.........x...
	...
  406854:	0004 0004 0004 007c 0084 0084 0084 008c     ......|.........
  406864:	0074 0000 0000 0000 0000 0000 0000 0000     t...............
  406874:	0000 0078 0084 00fc 0080 0080 007c 0000     ..x.........|...
	...
  40688c:	001c 0020 0020 00fc 0020 0020 0020 0020     .. . ... . . . .
  40689c:	00fc 0000 0000 0000 0000 0000 0000 0000     ................
  4068ac:	0000 007c 0084 0084 0084 0084 007c 0004     ..|.........|...
  4068bc:	0078 0000 0000 0000 0080 0080 0080 00b8     x...............
  4068cc:	00c4 0084 0084 0084 0084 0000 0000 0000     ................
  4068dc:	0000 0000 0000 0010 0000 0070 0010 0010     ..........p.....
  4068ec:	0010 0010 007c 0000 0000 0000 0000 0000     ....|...........
  4068fc:	0000 0008 0000 0078 0008 0008 0008 0008     ......x.........
  40690c:	0008 0008 0008 0070 0000 0000 0080 0080     ......p.........
  40691c:	0080 0088 0090 00a0 00d0 0088 0088 0000     ................
	...
  406934:	00e0 0020 0020 0020 0020 0020 0020 0020     .. . . . . . . .
  406944:	00f8 0000 0000 0000 0000 0000 0000 0000     ................
  406954:	0000 00a4 00fc 00a4 00a4 00a4 00a4 0000     ................
	...
  406970:	0000 00b8 00c4 0084 0084 0084 0084 0000     ................
	...
  40698c:	0000 0078 0084 0084 0084 0084 0078 0000     ..x.........x...
	...
  4069a8:	0000 00b8 00c4 0084 0084 0084 00f8 0080     ................
  4069b8:	0080 0000 0000 0000 0000 0000 0000 007c     ..............|.
  4069c8:	0084 0084 0084 0084 007c 0004 0004 0000     ........|.......
	...
  4069e0:	0000 00d8 0060 0040 0040 0040 00f0 0000     ....`.@.@.@.....
	...
  4069fc:	0000 0078 0080 0040 0030 0008 00f0 0000     ..x...@.0.......
	...
  406a18:	0020 00fc 0020 0020 0020 0020 001c 0000      ... . . . .....
	...
  406a34:	0000 0088 0088 0088 0088 0088 007c 0000     ............|...
	...
  406a50:	0000 0084 0084 0084 0048 0048 0030 0000     ........H.H.0...
	...
  406a6c:	0000 0088 00a8 00a8 00a8 00a8 0050 0000     ............P...
	...
  406a88:	0000 0088 0050 0020 0020 0050 0088 0000     ....P. . .P.....
	...
  406aa4:	0000 0084 0084 0048 0048 0030 0010 0020     ......H.H.0... .
  406ab4:	0040 0000 0000 0000 0000 0000 0000 00f8     @...............
  406ac4:	0008 0010 0020 0040 00f8 0000 0000 0000     .... .@.........
  406ad4:	0000 0000 0010 0020 0020 0010 0020 0020     ...... . ... . .
  406ae4:	0010 0020 0020 0010 0000 0000 0000 0000     .. . ...........
  406af4:	0010 0010 0010 0010 0000 0000 0010 0010     ................
  406b04:	0010 0010 0000 0000 0000 0000 0020 0010     ............ ...
  406b14:	0010 0020 0010 0010 0020 0010 0010 0020     .. ..... ..... .
  406b24:	0000 0000 2020 2020 2020 2020 2020 0020     ....           .
  406b34:	2e25 6c32 2066 6d63 0000 0000 614d 2075     %.2lf cm....Mau 
  406b44:	6f43 746e 7461 006f                         Contato.

00406b4c <_global_impure_ptr>:
  406b4c:	0028 2040 4e49 0046 6e69 0066 414e 004e     (.@ INF.inf.NAN.
  406b5c:	616e 006e 3130 3332 3534 3736 3938 4241     nan.0123456789AB
  406b6c:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  406b7c:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  406b8c:	296c 0000 0030 0000                         l)..0...

00406b94 <blanks.7223>:
  406b94:	2020 2020 2020 2020 2020 2020 2020 2020                     

00406ba4 <zeroes.7224>:
  406ba4:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  406bb4:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.
  406bc4:	0000 0000                                   ....

00406bc8 <__mprec_bigtens>:
  406bc8:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  406bd8:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  406be8:	bf3c 7f73 4fdd 7515                         <.s..O.u

00406bf0 <__mprec_tens>:
  406bf0:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  406c00:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  406c10:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  406c20:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  406c30:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  406c40:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  406c50:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  406c60:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  406c70:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  406c80:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  406c90:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  406ca0:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  406cb0:	9db4 79d9 7843 44ea                         ...yCx.D

00406cb8 <p05.6055>:
  406cb8:	0005 0000 0019 0000 007d 0000 0043 0000     ........}...C...
  406cc8:	4f50 4953 0058 0000 002e 0000               POSIX.......

00406cd4 <_ctype_>:
  406cd4:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  406ce4:	2020 2020 2020 2020 2020 2020 2020 2020                     
  406cf4:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  406d04:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  406d14:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  406d24:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  406d34:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  406d44:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  406d54:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

00406dd8 <_init>:
  406dd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  406dda:	bf00      	nop
  406ddc:	bcf8      	pop	{r3, r4, r5, r6, r7}
  406dde:	bc08      	pop	{r3}
  406de0:	469e      	mov	lr, r3
  406de2:	4770      	bx	lr

00406de4 <__init_array_start>:
  406de4:	004034f1 	.word	0x004034f1

00406de8 <__frame_dummy_init_array_entry>:
  406de8:	00400165                                e.@.

00406dec <_fini>:
  406dec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  406dee:	bf00      	nop
  406df0:	bcf8      	pop	{r3, r4, r5, r6, r7}
  406df2:	bc08      	pop	{r3}
  406df4:	469e      	mov	lr, r3
  406df6:	4770      	bx	lr

00406df8 <__fini_array_start>:
  406df8:	00400141 	.word	0x00400141

Disassembly of section .relocate:

20400000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20400000:	f3bf 8f5f 	dmb	sy
20400004:	3801      	subs	r0, #1
20400006:	d1fb      	bne.n	20400000 <portable_delay_cycles>
20400008:	4770      	bx	lr
	...

2040000c <sysfont>:
2040000c:	0000 0000 60e0 0040 0e0a 7d20               .....`@... }

20400018 <g_interrupt_enabled>:
20400018:	0001 0000                                   ....

2040001c <SystemCoreClock>:
2040001c:	0900 003d                                   ..=.

20400020 <start>:
20400020:	0001 0000                                   ....

20400024 <_impure_ptr>:
20400024:	0028 2040                                   (.@ 

20400028 <impure_data>:
20400028:	0000 0000 0314 2040 037c 2040 03e4 2040     ......@ |.@ ..@ 
	...
204000d0:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
204000e0:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20400450 <__atexit_recursive_mutex>:
20400450:	0d30 2040                                   0.@ 

20400454 <__malloc_av_>:
	...
2040045c:	0454 2040 0454 2040 045c 2040 045c 2040     T.@ T.@ \.@ \.@ 
2040046c:	0464 2040 0464 2040 046c 2040 046c 2040     d.@ d.@ l.@ l.@ 
2040047c:	0474 2040 0474 2040 047c 2040 047c 2040     t.@ t.@ |.@ |.@ 
2040048c:	0484 2040 0484 2040 048c 2040 048c 2040     ..@ ..@ ..@ ..@ 
2040049c:	0494 2040 0494 2040 049c 2040 049c 2040     ..@ ..@ ..@ ..@ 
204004ac:	04a4 2040 04a4 2040 04ac 2040 04ac 2040     ..@ ..@ ..@ ..@ 
204004bc:	04b4 2040 04b4 2040 04bc 2040 04bc 2040     ..@ ..@ ..@ ..@ 
204004cc:	04c4 2040 04c4 2040 04cc 2040 04cc 2040     ..@ ..@ ..@ ..@ 
204004dc:	04d4 2040 04d4 2040 04dc 2040 04dc 2040     ..@ ..@ ..@ ..@ 
204004ec:	04e4 2040 04e4 2040 04ec 2040 04ec 2040     ..@ ..@ ..@ ..@ 
204004fc:	04f4 2040 04f4 2040 04fc 2040 04fc 2040     ..@ ..@ ..@ ..@ 
2040050c:	0504 2040 0504 2040 050c 2040 050c 2040     ..@ ..@ ..@ ..@ 
2040051c:	0514 2040 0514 2040 051c 2040 051c 2040     ..@ ..@ ..@ ..@ 
2040052c:	0524 2040 0524 2040 052c 2040 052c 2040     $.@ $.@ ,.@ ,.@ 
2040053c:	0534 2040 0534 2040 053c 2040 053c 2040     4.@ 4.@ <.@ <.@ 
2040054c:	0544 2040 0544 2040 054c 2040 054c 2040     D.@ D.@ L.@ L.@ 
2040055c:	0554 2040 0554 2040 055c 2040 055c 2040     T.@ T.@ \.@ \.@ 
2040056c:	0564 2040 0564 2040 056c 2040 056c 2040     d.@ d.@ l.@ l.@ 
2040057c:	0574 2040 0574 2040 057c 2040 057c 2040     t.@ t.@ |.@ |.@ 
2040058c:	0584 2040 0584 2040 058c 2040 058c 2040     ..@ ..@ ..@ ..@ 
2040059c:	0594 2040 0594 2040 059c 2040 059c 2040     ..@ ..@ ..@ ..@ 
204005ac:	05a4 2040 05a4 2040 05ac 2040 05ac 2040     ..@ ..@ ..@ ..@ 
204005bc:	05b4 2040 05b4 2040 05bc 2040 05bc 2040     ..@ ..@ ..@ ..@ 
204005cc:	05c4 2040 05c4 2040 05cc 2040 05cc 2040     ..@ ..@ ..@ ..@ 
204005dc:	05d4 2040 05d4 2040 05dc 2040 05dc 2040     ..@ ..@ ..@ ..@ 
204005ec:	05e4 2040 05e4 2040 05ec 2040 05ec 2040     ..@ ..@ ..@ ..@ 
204005fc:	05f4 2040 05f4 2040 05fc 2040 05fc 2040     ..@ ..@ ..@ ..@ 
2040060c:	0604 2040 0604 2040 060c 2040 060c 2040     ..@ ..@ ..@ ..@ 
2040061c:	0614 2040 0614 2040 061c 2040 061c 2040     ..@ ..@ ..@ ..@ 
2040062c:	0624 2040 0624 2040 062c 2040 062c 2040     $.@ $.@ ,.@ ,.@ 
2040063c:	0634 2040 0634 2040 063c 2040 063c 2040     4.@ 4.@ <.@ <.@ 
2040064c:	0644 2040 0644 2040 064c 2040 064c 2040     D.@ D.@ L.@ L.@ 
2040065c:	0654 2040 0654 2040 065c 2040 065c 2040     T.@ T.@ \.@ \.@ 
2040066c:	0664 2040 0664 2040 066c 2040 066c 2040     d.@ d.@ l.@ l.@ 
2040067c:	0674 2040 0674 2040 067c 2040 067c 2040     t.@ t.@ |.@ |.@ 
2040068c:	0684 2040 0684 2040 068c 2040 068c 2040     ..@ ..@ ..@ ..@ 
2040069c:	0694 2040 0694 2040 069c 2040 069c 2040     ..@ ..@ ..@ ..@ 
204006ac:	06a4 2040 06a4 2040 06ac 2040 06ac 2040     ..@ ..@ ..@ ..@ 
204006bc:	06b4 2040 06b4 2040 06bc 2040 06bc 2040     ..@ ..@ ..@ ..@ 
204006cc:	06c4 2040 06c4 2040 06cc 2040 06cc 2040     ..@ ..@ ..@ ..@ 
204006dc:	06d4 2040 06d4 2040 06dc 2040 06dc 2040     ..@ ..@ ..@ ..@ 
204006ec:	06e4 2040 06e4 2040 06ec 2040 06ec 2040     ..@ ..@ ..@ ..@ 
204006fc:	06f4 2040 06f4 2040 06fc 2040 06fc 2040     ..@ ..@ ..@ ..@ 
2040070c:	0704 2040 0704 2040 070c 2040 070c 2040     ..@ ..@ ..@ ..@ 
2040071c:	0714 2040 0714 2040 071c 2040 071c 2040     ..@ ..@ ..@ ..@ 
2040072c:	0724 2040 0724 2040 072c 2040 072c 2040     $.@ $.@ ,.@ ,.@ 
2040073c:	0734 2040 0734 2040 073c 2040 073c 2040     4.@ 4.@ <.@ <.@ 
2040074c:	0744 2040 0744 2040 074c 2040 074c 2040     D.@ D.@ L.@ L.@ 
2040075c:	0754 2040 0754 2040 075c 2040 075c 2040     T.@ T.@ \.@ \.@ 
2040076c:	0764 2040 0764 2040 076c 2040 076c 2040     d.@ d.@ l.@ l.@ 
2040077c:	0774 2040 0774 2040 077c 2040 077c 2040     t.@ t.@ |.@ |.@ 
2040078c:	0784 2040 0784 2040 078c 2040 078c 2040     ..@ ..@ ..@ ..@ 
2040079c:	0794 2040 0794 2040 079c 2040 079c 2040     ..@ ..@ ..@ ..@ 
204007ac:	07a4 2040 07a4 2040 07ac 2040 07ac 2040     ..@ ..@ ..@ ..@ 
204007bc:	07b4 2040 07b4 2040 07bc 2040 07bc 2040     ..@ ..@ ..@ ..@ 
204007cc:	07c4 2040 07c4 2040 07cc 2040 07cc 2040     ..@ ..@ ..@ ..@ 
204007dc:	07d4 2040 07d4 2040 07dc 2040 07dc 2040     ..@ ..@ ..@ ..@ 
204007ec:	07e4 2040 07e4 2040 07ec 2040 07ec 2040     ..@ ..@ ..@ ..@ 
204007fc:	07f4 2040 07f4 2040 07fc 2040 07fc 2040     ..@ ..@ ..@ ..@ 
2040080c:	0804 2040 0804 2040 080c 2040 080c 2040     ..@ ..@ ..@ ..@ 
2040081c:	0814 2040 0814 2040 081c 2040 081c 2040     ..@ ..@ ..@ ..@ 
2040082c:	0824 2040 0824 2040 082c 2040 082c 2040     $.@ $.@ ,.@ ,.@ 
2040083c:	0834 2040 0834 2040 083c 2040 083c 2040     4.@ 4.@ <.@ <.@ 
2040084c:	0844 2040 0844 2040 084c 2040 084c 2040     D.@ D.@ L.@ L.@ 

2040085c <__malloc_sbrk_base>:
2040085c:	ffff ffff                                   ....

20400860 <__malloc_trim_threshold>:
20400860:	0000 0002                                   ....

20400864 <__global_locale>:
20400864:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400884:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008a4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008c4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008e4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400904:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400924:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400944:	5c29 0040 57e9 0040 0000 0000 6cd4 0040     )\@..W@......l@.
20400954:	6cd0 0040 6b70 0040 6b70 0040 6b70 0040     .l@.pk@.pk@.pk@.
20400964:	6b70 0040 6b70 0040 6b70 0040 6b70 0040     pk@.pk@.pk@.pk@.
20400974:	6b70 0040 6b70 0040 ffff ffff ffff ffff     pk@.pk@.........
20400984:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
204009ac:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
